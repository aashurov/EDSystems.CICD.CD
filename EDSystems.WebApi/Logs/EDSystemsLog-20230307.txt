2023-03-07 10:16:12.574 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:16:12.866 +05:00 [FTL] An error occured while app initialization
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Program.cs:line 54
2023-03-07 10:16:12.931 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 10:16:13.497 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 10:16:13.497 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 10:16:13.498 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 10:16:13.499 +05:00 [INF] Hosting environment: Development
2023-03-07 10:16:13.499 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-07 10:16:14.932 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 10:16:15.093 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 163.5177ms
2023-03-07 10:16:15.201 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 10:16:15.591 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 389.9659ms
2023-03-07 10:17:28.374 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 10:17:28.469 +05:00 [INF] CORS policy execution successful.
2023-03-07 10:17:28.534 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 10:17:28.554 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 10:17:29.437 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:17:29.660 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1100.9763ms
2023-03-07 10:17:29.663 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 10:17:29.664 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.Set[TEntity]()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.get_UsersSet()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.get_Users()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByEmailAsync(String normalizedEmail, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(String email)
   at EDSystems.WebApi.Controllers.AuthenticationController.Login(UserLoginDto request) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/AuthenticationController.cs:line 120
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 10:17:29.677 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 500 - text/plain;+charset=utf-8 1307.4846ms
2023-03-07 10:18:21.270 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Register application/json-patch+json 80
2023-03-07 10:18:21.304 +05:00 [INF] CORS policy execution successful.
2023-03-07 10:18:21.315 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Register (EDSystems.WebApi)'
2023-03-07 10:18:21.320 +05:00 [INF] Route matched with {action = "Register", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Register(EDSystems.WebApi.Models.AuthManager.UserRegisterDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 10:18:21.534 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:18:21.669 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Register (EDSystems.WebApi) in 349.7078ms
2023-03-07 10:18:21.670 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Register (EDSystems.WebApi)'
2023-03-07 10:18:21.670 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.Set[TEntity]()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.get_UsersSet()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.get_Users()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByEmailAsync(String normalizedEmail, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(String email)
   at EDSystems.WebApi.Controllers.AuthenticationController.Register(UserRegisterDto request) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/AuthenticationController.cs:line 65
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 10:18:21.673 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Register application/json-patch+json 80 - 500 - text/plain;+charset=utf-8 402.8460ms
2023-03-07 10:20:34.098 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 10:20:34.106 +05:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
ClaimsAuthorizationRequirement:Claim.Type=CanGetAllBranches
2023-03-07 10:20:34.111 +05:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-03-07 10:20:34.112 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 401 0 - 13.7654ms
2023-03-07 10:20:37.641 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 10:20:37.642 +05:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
ClaimsAuthorizationRequirement:Claim.Type=CanGetAllBranches
2023-03-07 10:20:37.642 +05:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-03-07 10:20:37.643 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 401 0 - 1.7300ms
2023-03-07 10:21:01.991 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:21:02.275 +05:00 [FTL] An error occured while app initialization
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Program.cs:line 54
2023-03-07 10:21:02.346 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 10:21:02.885 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 10:21:02.885 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 10:21:02.887 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 10:21:02.887 +05:00 [INF] Hosting environment: Development
2023-03-07 10:21:02.887 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-07 10:21:04.085 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 10:21:04.228 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 143.7041ms
2023-03-07 10:21:04.338 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 10:21:04.720 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 381.9389ms
2023-03-07 10:21:19.385 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 10:21:19.495 +05:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-03-07 10:21:19.501 +05:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-03-07 10:21:19.502 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 401 0 - 116.8884ms
2023-03-07 10:21:20.316 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 10:21:20.325 +05:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
2023-03-07 10:21:20.326 +05:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-03-07 10:21:20.326 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 401 0 - 10.7862ms
2023-03-07 10:21:42.117 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:21:42.420 +05:00 [FTL] An error occured while app initialization
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Program.cs:line 54
2023-03-07 10:21:42.493 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 10:21:43.012 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 10:21:43.013 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 10:21:43.014 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 10:21:43.014 +05:00 [INF] Hosting environment: Development
2023-03-07 10:21:43.015 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-07 10:21:44.265 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 10:21:44.413 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 149.6483ms
2023-03-07 10:21:44.522 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 10:21:44.903 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 381.8366ms
2023-03-07 10:21:50.610 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 10:21:50.675 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 10:21:50.688 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 10:21:51.201 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-03-07 10:21:51.461 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:21:51.756 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 1063.1685ms
2023-03-07 10:21:51.758 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 10:21:51.761 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_ElementType()
   at AutoMapper.QueryableExtensions.Extensions.ToCore(IQueryable source, Type destinationType, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ToCore[TResult](IQueryable source, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Object parameters, Expression`1[] membersToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Expression`1[] membersToExpand)
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.GetBranchListQueryHandler.Handle(GetBranchListQuery request, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/EDSystems/Queries/Branches/GetBranchList/GetBranchListQueryHandler.cs:line 20
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.BranchController.GetAll() in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/BranchController.cs:line 61
   at lambda_method239(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 10:21:51.776 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 500 - text/plain;+charset=utf-8 1165.4536ms
2023-03-07 10:23:52.624 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:23:52.907 +05:00 [FTL] An error occured while app initialization
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Program.cs:line 54
2023-03-07 10:23:52.978 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 10:23:53.477 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 10:23:53.477 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 10:23:53.479 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 10:23:53.479 +05:00 [INF] Hosting environment: Development
2023-03-07 10:23:53.479 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-07 10:23:54.687 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 10:23:54.836 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 150.2687ms
2023-03-07 10:23:54.940 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 10:23:55.318 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 377.4664ms
2023-03-07 10:24:09.753 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 10:24:09.826 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 10:24:09.843 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 10:24:10.353 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-03-07 10:24:10.612 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:24:10.916 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 1069.5324ms
2023-03-07 10:24:10.917 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 10:24:10.919 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_ElementType()
   at AutoMapper.QueryableExtensions.Extensions.ToCore(IQueryable source, Type destinationType, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ToCore[TResult](IQueryable source, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Object parameters, Expression`1[] membersToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Expression`1[] membersToExpand)
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.GetBranchListQueryHandler.Handle(GetBranchListQuery request, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/EDSystems/Queries/Branches/GetBranchList/GetBranchListQueryHandler.cs:line 20
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.BranchController.GetAll() in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/BranchController.cs:line 61
   at lambda_method239(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 10:24:10.933 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 500 - text/plain;+charset=utf-8 1179.7767ms
2023-03-07 10:24:59.216 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:24:59.486 +05:00 [FTL] An error occured while app initialization
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Program.cs:line 54
2023-03-07 10:24:59.552 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 10:25:00.011 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 10:25:00.014 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 10:25:00.020 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 10:25:00.020 +05:00 [INF] Hosting environment: Development
2023-03-07 10:25:00.020 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-07 10:25:01.232 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 10:25:01.376 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 145.5418ms
2023-03-07 10:25:01.483 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 10:25:01.878 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 394.7302ms
2023-03-07 10:25:06.864 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 10:25:06.934 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 10:25:06.951 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 10:25:07.469 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-03-07 10:25:07.727 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:25:08.036 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 1081.7513ms
2023-03-07 10:25:08.038 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 10:25:08.041 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_ElementType()
   at AutoMapper.QueryableExtensions.Extensions.ToCore(IQueryable source, Type destinationType, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ToCore[TResult](IQueryable source, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Object parameters, Expression`1[] membersToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Expression`1[] membersToExpand)
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.GetBranchListQueryHandler.Handle(GetBranchListQuery request, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/EDSystems/Queries/Branches/GetBranchList/GetBranchListQueryHandler.cs:line 20
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.BranchController.GetAll() in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/BranchController.cs:line 61
   at lambda_method239(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 10:25:08.052 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 500 - text/plain;+charset=utf-8 1187.6071ms
2023-03-07 10:26:29.208 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:26:33.880 +05:00 [FTL] An error occured while app initialization
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Program.cs:line 54
2023-03-07 10:26:35.619 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 10:26:36.134 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 10:26:36.135 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 10:26:36.137 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 10:26:36.137 +05:00 [INF] Hosting environment: Development
2023-03-07 10:26:36.137 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-07 10:26:37.118 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 10:26:37.355 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 237.5648ms
2023-03-07 10:26:37.362 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 10:26:37.366 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 4.5746ms
2023-03-07 10:26:37.484 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 10:26:37.496 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/favicon-32x32.png - -
2023-03-07 10:26:37.515 +05:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-03-07 10:26:37.515 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/favicon-32x32.png - - - 200 628 image/png 18.8397ms
2023-03-07 10:26:37.892 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 408.1896ms
2023-03-07 10:26:37.897 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 10:26:38.191 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 293.4702ms
2023-03-07 10:26:47.649 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 10:26:47.725 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 10:26:47.743 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 10:26:48.219 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-03-07 10:27:09.189 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:27:14.893 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 27146.6664ms
2023-03-07 10:27:14.899 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 10:27:14.909 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Infrastructure.Internal.NpgsqlModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_ElementType()
   at AutoMapper.QueryableExtensions.Extensions.ToCore(IQueryable source, Type destinationType, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ToCore[TResult](IQueryable source, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Object parameters, Expression`1[] membersToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Expression`1[] membersToExpand)
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.GetBranchListQueryHandler.Handle(GetBranchListQuery request, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/EDSystems/Queries/Branches/GetBranchList/GetBranchListQueryHandler.cs:line 20
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.BranchController.GetAll() in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/BranchController.cs:line 61
   at lambda_method239(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 10:27:14.919 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 500 - text/plain;+charset=utf-8 27269.5850ms
2023-03-07 10:31:58.483 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:31:58.763 +05:00 [FTL] An error occured while app initialization
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Program.cs:line 54
2023-03-07 10:31:58.847 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 10:31:59.454 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 10:31:59.454 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 10:31:59.456 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 10:31:59.456 +05:00 [INF] Hosting environment: Development
2023-03-07 10:31:59.456 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-07 10:32:00.616 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 10:32:00.782 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 167.4407ms
2023-03-07 10:32:00.901 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 10:32:01.300 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 398.6413ms
2023-03-07 10:32:07.925 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 10:32:07.987 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 10:32:08.003 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 10:32:08.514 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-03-07 10:32:08.759 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:32:09.053 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 1046.4302ms
2023-03-07 10:32:09.054 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 10:32:09.056 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_ElementType()
   at AutoMapper.QueryableExtensions.Extensions.ToCore(IQueryable source, Type destinationType, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ToCore[TResult](IQueryable source, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Object parameters, Expression`1[] membersToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Expression`1[] membersToExpand)
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.GetBranchListQueryHandler.Handle(GetBranchListQuery request, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/EDSystems/Queries/Branches/GetBranchList/GetBranchListQueryHandler.cs:line 20
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.BranchController.GetAll() in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/BranchController.cs:line 61
   at lambda_method239(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 10:32:09.069 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 500 - text/plain;+charset=utf-8 1143.1814ms
2023-03-07 10:33:20.458 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:33:20.758 +05:00 [FTL] An error occured while app initialization
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Program.cs:line 54
2023-03-07 10:33:20.838 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 10:33:21.372 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 10:33:21.372 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 10:33:21.374 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 10:33:21.374 +05:00 [INF] Hosting environment: Development
2023-03-07 10:33:21.374 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-07 10:33:22.753 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 10:33:22.899 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 147.5210ms
2023-03-07 10:33:23.003 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 10:33:23.403 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 399.9219ms
2023-03-07 10:33:31.821 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 10:33:31.887 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 10:33:31.902 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 10:33:32.394 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-03-07 10:33:32.640 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:33:32.930 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 1021.8923ms
2023-03-07 10:33:32.931 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 10:33:32.933 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_ElementType()
   at AutoMapper.QueryableExtensions.Extensions.ToCore(IQueryable source, Type destinationType, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ToCore[TResult](IQueryable source, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Object parameters, Expression`1[] membersToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Expression`1[] membersToExpand)
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.GetBranchListQueryHandler.Handle(GetBranchListQuery request, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/EDSystems/Queries/Branches/GetBranchList/GetBranchListQueryHandler.cs:line 20
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.BranchController.GetAll() in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/BranchController.cs:line 61
   at lambda_method241(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 10:33:32.948 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 500 - text/plain;+charset=utf-8 1126.4796ms
2023-03-07 10:34:45.144 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:34:45.411 +05:00 [FTL] An error occured while app initialization
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Program.cs:line 54
2023-03-07 10:34:45.492 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 10:34:46.050 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 10:34:46.050 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 10:34:46.052 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 10:34:46.052 +05:00 [INF] Hosting environment: Development
2023-03-07 10:34:46.053 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-07 10:34:47.345 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 10:34:47.489 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 146.7540ms
2023-03-07 10:34:47.598 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 10:34:47.991 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 392.4175ms
2023-03-07 10:34:53.701 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 10:34:53.796 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 10:34:53.813 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 10:34:54.302 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-03-07 10:34:54.542 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:34:54.832 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 1015.2157ms
2023-03-07 10:34:54.833 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 10:34:54.835 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_ElementType()
   at AutoMapper.QueryableExtensions.Extensions.ToCore(IQueryable source, Type destinationType, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ToCore[TResult](IQueryable source, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Object parameters, Expression`1[] membersToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Expression`1[] membersToExpand)
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.GetBranchListQueryHandler.Handle(GetBranchListQuery request, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/EDSystems/Queries/Branches/GetBranchList/GetBranchListQueryHandler.cs:line 20
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.BranchController.GetAll() in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/BranchController.cs:line 61
   at lambda_method241(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 10:34:54.849 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 500 - text/plain;+charset=utf-8 1148.0872ms
2023-03-07 10:36:27.420 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:36:27.730 +05:00 [FTL] An error occured while app initialization
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Program.cs:line 54
2023-03-07 10:36:27.816 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 10:36:28.434 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 10:36:28.435 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 10:36:28.442 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 10:36:28.443 +05:00 [INF] Hosting environment: Development
2023-03-07 10:36:28.446 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-07 10:36:29.674 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 10:36:29.847 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 174.5203ms
2023-03-07 10:36:29.956 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 10:36:30.407 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 451.2694ms
2023-03-07 10:36:35.649 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 10:36:35.716 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 10:36:35.734 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 10:36:36.253 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-03-07 10:36:36.513 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 10:36:36.830 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 1092ms
2023-03-07 10:36:36.832 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 10:36:36.834 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_ElementType()
   at AutoMapper.QueryableExtensions.Extensions.ToCore(IQueryable source, Type destinationType, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ToCore[TResult](IQueryable source, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Object parameters, Expression`1[] membersToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Expression`1[] membersToExpand)
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.GetBranchListQueryHandler.Handle(GetBranchListQuery request, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/EDSystems/Queries/Branches/GetBranchList/GetBranchListQueryHandler.cs:line 20
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.BranchController.GetAll() in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/BranchController.cs:line 61
   at lambda_method241(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 10:36:36.851 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 500 - text/plain;+charset=utf-8 1201.5764ms
2023-03-07 11:47:34.932 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 11:47:35.209 +05:00 [FTL] An error occured while app initialization
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Program.cs:line 54
2023-03-07 11:47:35.293 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 11:47:35.819 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 11:47:35.819 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 11:47:35.820 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 11:47:35.821 +05:00 [INF] Hosting environment: Development
2023-03-07 11:47:35.821 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 11:47:37.310 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 11:47:37.496 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 187.3693ms
2023-03-07 11:47:37.605 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 11:47:37.984 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 379.7784ms
2023-03-07 11:47:47.951 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 11:47:48.014 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 11:47:48.030 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 11:47:48.497 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-03-07 11:47:48.738 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 11:47:49.010 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 976.9258ms
2023-03-07 11:47:49.012 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 11:47:49.014 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_ElementType()
   at AutoMapper.QueryableExtensions.Extensions.ToCore(IQueryable source, Type destinationType, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ToCore[TResult](IQueryable source, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Object parameters, Expression`1[] membersToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Expression`1[] membersToExpand)
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.GetBranchListQueryHandler.Handle(GetBranchListQuery request, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Application/EDSystems/Queries/Branches/GetBranchList/GetBranchListQueryHandler.cs:line 20
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.BranchController.GetAll() in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Controllers/BranchController.cs:line 61
   at lambda_method241(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 11:47:49.028 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 500 - text/plain;+charset=utf-8 1077.5960ms
2023-03-07 11:49:56.081 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 11:49:56.355 +05:00 [FTL] An error occured while app initialization
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Program.cs:line 54
2023-03-07 11:49:56.437 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 11:49:56.972 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 11:49:56.973 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 11:49:56.974 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 11:49:56.974 +05:00 [INF] Hosting environment: Development
2023-03-07 11:49:56.974 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 11:49:58.173 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 11:49:58.324 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 154.1096ms
2023-03-07 11:49:58.427 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 11:49:58.803 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 375.7940ms
2023-03-07 11:50:03.688 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 11:50:03.762 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 11:50:03.779 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 11:50:04.277 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-03-07 11:50:04.518 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 11:50:04.794 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 1011.0113ms
2023-03-07 11:50:04.795 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 11:50:04.797 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The seed entity for entity type 'User' cannot be added because no value was provided for the required property 'Id'.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_Model()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityType()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.CheckState()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.get_EntityQueryable()
   at Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.System.Linq.IQueryable.get_ElementType()
   at AutoMapper.QueryableExtensions.Extensions.ToCore(IQueryable source, Type destinationType, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ToCore[TResult](IQueryable source, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Object parameters, Expression`1[] membersToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Expression`1[] membersToExpand)
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.GetBranchListQueryHandler.Handle(GetBranchListQuery request, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Application/EDSystems/Queries/Branches/GetBranchList/GetBranchListQueryHandler.cs:line 20
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.BranchController.GetAll() in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Controllers/BranchController.cs:line 61
   at lambda_method241(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 11:50:04.808 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 500 - text/plain;+charset=utf-8 1120.6475ms
2023-03-07 11:54:04.678 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 11:54:04.916 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:54:04.917 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:54:04.917 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:54:04.917 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:54:04.917 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:54:04.917 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:54:04.917 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:54:04.917 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:54:04.917 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:54:05.173 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-07 11:54:05.371 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 11:54:05.477 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:54:05.477 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:54:05.477 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:54:05.477 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:54:05.477 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:54:05.477 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:54:05.478 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:54:05.478 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:54:05.478 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:54:05.708 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-07 11:54:05.708 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 11:54:05.708 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 11:54:05.708 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-07 11:54:05.708 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 11:54:05.708 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 11:54:05.709 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" decimal(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 11:54:05.709 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-07 11:54:05.709 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 11:54:05.709 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 11:54:05.709 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-07 11:54:05.709 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 11:54:05.710 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:54:05.710 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:54:05.710 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:54:05.710 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:54:05.710 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:54:05.710 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:54:05.710 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:54:05.711 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:54:05.711 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-07 11:54:05.711 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-07 11:54:05.711 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-07 11:54:05.711 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:54:05.711 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 11:54:05.712 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 11:54:05.712 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 11:54:05.712 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 11:54:05.712 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:54:05.712 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 11:54:05.713 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-07 11:54:05.713 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, 'f164b496-cf30-49a3-aadb-381977309a8b', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, 'd56c0f75-639b-4f79-92f7-87d25d239fd1', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '8f0b5613-e8f6-425b-80be-ac0aa7e5b59f', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, 'd640a413-de4f-4236-ba82-1b4c37e2d7ef', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '8c877f3e-c9a0-4cf0-8c68-8f6b7ad3de18', 'Customer', 'CUSTOMER');
2023-03-07 11:54:05.714 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '8a35d8e6-580a-4da1-af95-9fdfd5e1d1e1', '2023-03-07 11:54:05.368363', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAELZjkQ94suP7HAe1hvJlBNX2wwtvDLuUd+Qw/VZ248d8mSwVGGvO0l8N/66lcecgkg==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '90fff61a-e300-485c-9a81-769e6cb9c968', '2023-03-07 11:54:05.368368', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAELZjkQ94suP7HAe1hvJlBNX2wwtvDLuUd+Qw/VZ248d8mSwVGGvO0l8N/66lcecgkg==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'a9c7cfbe-799f-46a4-965b-5ccc0d201c06', '2023-03-07 11:54:05.368369', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAELZjkQ94suP7HAe1hvJlBNX2wwtvDLuUd+Qw/VZ248d8mSwVGGvO0l8N/66lcecgkg==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'd1409fa7-14df-4f80-9375-6c2f6ad11e2e', '2023-03-07 11:54:05.368379', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAELZjkQ94suP7HAe1hvJlBNX2wwtvDLuUd+Qw/VZ248d8mSwVGGvO0l8N/66lcecgkg==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '1f9d6fab-66e8-471c-9b88-1342064c89f7', '2023-03-07 11:54:05.36838', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAELZjkQ94suP7HAe1hvJlBNX2wwtvDLuUd+Qw/VZ248d8mSwVGGvO0l8N/66lcecgkg==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-07 11:54:05.714 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-07 11:54:05.292989', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-07 11:54:05.29299', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-07 11:54:05.29299', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-07 11:54:05.29299', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-07 11:54:05.292991', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-07 11:54:05.292991', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-07 11:54:05.715 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-07 11:54:05.368431', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-07 11:54:05.368432', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-07 11:54:05.368432', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-07 11:54:05.368432', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-07 11:54:05.368433', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-07 11:54:05.368433', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-07 11:54:05.368434', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-07 11:54:05.368434', NULL, NULL, 'Сомони', 972);
2023-03-07 11:54:05.715 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 11:54:05.293003', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 11:54:05.293003', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 11:54:05.293003', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 11:54:05.293004', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 11:54:05.293004', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 11:54:05.293004', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-07 11:54:05.293004', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-07 11:54:05.293004', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-07 11:54:05.293005', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-07 11:54:05.293005', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-07 11:54:05.293005', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-07 11:54:05.293009', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-07 11:54:05.293009', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-07 11:54:05.715 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-07 11:54:05.368424', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-07 11:54:05.368425', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-07 11:54:05.368426', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-07 11:54:05.368426', NULL, 'Description', NULL, 'Авто');
2023-03-07 11:54:05.715 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 11:54:05.292975', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 11:54:05.292983', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 11:54:05.292983', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 11:54:05.292983', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 11:54:05.292984', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 11:54:05.292984', NULL, 'Выдан', NULL, 'Выдан');
2023-03-07 11:54:05.716 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-07 11:54:05.292994', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-07 11:54:05.292994', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-07 11:54:05.292994', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-07 11:54:05.292995', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-07 11:54:05.292995', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-07 11:54:05.292995', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-07 11:54:05.292995', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-07 11:54:05.292996', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-07 11:54:05.292996', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-07 11:54:05.292996', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-07 11:54:05.292996', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-07 11:54:05.292997', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-07 11:54:05.716 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 2);
2023-03-07 11:54:05.716 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-07 11:54:05.716 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-07 11:54:05.292999', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '30a8f9cc-8d37-4d93-ab2f-774428387e4a', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-07 11:54:05.293', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-07 11:54:05.293', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '5a6f1681-c582-46f5-905b-4eb2c222dcf5', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-07 11:54:05.293', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '3b9d7f21-1d66-4c98-8648-64a68777bccb', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-07 11:54:05.293', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '0a1e5c27-0b09-4f60-a9c3-8618791a8672', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-07 11:54:05.293', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852', NULL);
2023-03-07 11:54:05.716 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-07 11:54:05.716 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-07 11:54:05.717 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-07 11:54:05.717 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-07 11:54:05.717 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-07 11:54:05.717 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-07 11:54:05.717 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-07 11:54:05.717 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-07 11:54:05.717 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-07 11:54:05.718 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-07 11:54:05.718 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-07 11:54:05.718 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-07 11:54:05.718 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-07 11:54:05.718 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-07 11:54:05.718 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-07 11:54:05.718 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-07 11:54:05.718 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-07 11:54:05.719 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-07 11:54:05.719 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-07 11:54:05.719 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-07 11:54:05.719 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-07 11:54:05.719 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-07 11:54:05.719 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-07 11:54:05.719 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-07 11:54:05.720 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-07 11:54:05.720 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-07 11:54:05.720 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-07 11:54:05.720 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-07 11:54:05.720 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-07 11:54:05.720 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-07 11:54:05.720 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-07 11:54:05.720 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-07 11:54:05.721 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-07 11:54:05.721 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-07 11:54:05.721 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-07 11:54:05.721 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-07 11:54:05.721 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-07 11:54:05.721 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-07 11:54:05.721 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-07 11:54:05.722 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-07 11:54:05.722 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-07 11:54:05.722 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-07 11:54:05.722 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-07 11:54:05.722 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-07 11:54:05.723 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-07 11:54:05.723 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-07 11:54:05.723 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-07 11:54:05.723 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-07 11:54:05.723 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-07 11:54:05.723 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-07 11:54:05.723 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-07 11:54:05.724 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-07 11:54:05.724 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-07 11:54:05.724 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-07 11:54:05.724 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-07 11:54:05.724 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-07 11:54:05.724 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-07 11:54:05.724 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-07 11:54:05.725 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-07 11:54:05.725 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-07 11:54:05.725 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-07 11:54:05.725 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-07 11:54:05.725 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-07 11:54:05.725 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-07 11:54:05.725 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-07 11:54:05.784 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 11:54:06.573 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 11:54:06.573 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 11:54:06.575 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 11:54:06.576 +05:00 [INF] Hosting environment: Development
2023-03-07 11:54:06.576 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 11:54:18.613 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 11:54:18.781 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 171.0530ms
2023-03-07 11:54:18.893 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 11:54:19.300 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 406.6430ms
2023-03-07 11:54:24.114 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 11:54:24.190 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 11:54:24.206 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 11:54:24.698 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-03-07 11:54:24.981 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Name", "b"."Country", "b"."Code", "b"."City", "b"."Address", "b"."Email", "b"."Phone", "b"."DateCreated", "b"."DateUpdated"
FROM "Branch" AS "b"
2023-03-07 11:54:25.006 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm'.
2023-03-07 11:54:25.142 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 931.1372ms
2023-03-07 11:54:25.142 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 11:54:25.150 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 200 1850 application/json;+charset=utf-8 1035.6038ms
2023-03-07 11:55:13.562 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 11:55:13.574 +05:00 [INF] CORS policy execution successful.
2023-03-07 11:55:13.576 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 11:55:13.588 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 11:55:13.790 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-07 11:55:14.051 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ClaimType", "a"."ClaimValue", "a"."UserId"
FROM "AspNetUserClaims" AS "a"
WHERE "a"."UserId" = @__user_Id_0
2023-03-07 11:55:14.080 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 11:55:14.088 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 13)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-07 11:55:14.105 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."ClaimType", "a"."ClaimValue"
FROM "AspNetRoleClaims" AS "a"
WHERE "a"."RoleId" = @__role_Id_0
2023-03-07 11:55:14.108 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 11:55:14.229 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"PR8U1XQD8R313KHQNBP8YK440MTG3Y7TA4Zf345294a-28e4-4466-a015-7eda72c7752d","JwtId":"ff4ea2e2-95b3-46a3-867d-cab2d5f710cc","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-07T06:55:14.2138270Z","ExpiryDateTime":"2023-09-07T06:55:14.2138840Z","$type":"RefreshTokenCommand"}
2023-03-07 11:55:14.353 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 36), @p5='?' (Size = 71), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-07 11:55:14.394 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-07 11:55:14.398 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 809.6752ms
2023-03-07 11:55:14.398 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 11:55:14.399 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 550 application/json;+charset=utf-8 837.0084ms
2023-03-07 11:55:49.943 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager?PageNumber=1&PageSize=4 - -
2023-03-07 11:55:49.959 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

EDSystems.WebApi.Controllers.UserManagerController.GetAllWithPagination (EDSystems.WebApi)
EDSystems.WebApi.Controllers.UserManagerController.GetAll (EDSystems.WebApi)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 11:55:49.999 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager?PageNumber=1&PageSize=4 - - - 500 - text/plain;+charset=utf-8 57.3720ms
2023-03-07 11:56:02.525 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager?PageNumber=1&PageSize=2 - -
2023-03-07 11:56:02.526 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

EDSystems.WebApi.Controllers.UserManagerController.GetAllWithPagination (EDSystems.WebApi)
EDSystems.WebApi.Controllers.UserManagerController.GetAll (EDSystems.WebApi)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 11:56:02.527 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager?PageNumber=1&PageSize=2 - - - 500 - text/plain;+charset=utf-8 1.4867ms
2023-03-07 11:56:19.589 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/1 - -
2023-03-07 11:56:19.609 +05:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Administrator)
2023-03-07 11:56:19.617 +05:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2023-03-07 11:56:19.617 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/1 - - - 302 0 - 28.7669ms
2023-03-07 11:56:19.623 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/Account/Login?ReturnUrl=%2Fapi%2FUserManager%2F1 - -
2023-03-07 11:56:19.624 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/Account/Login?ReturnUrl=%2Fapi%2FUserManager%2F1 - - - 404 0 - 0.4861ms
2023-03-07 11:56:28.190 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - -
2023-03-07 11:56:28.193 +05:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Administrator)
2023-03-07 11:56:28.194 +05:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2023-03-07 11:56:28.194 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - - - 302 0 - 4.2880ms
2023-03-07 11:56:28.201 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/Account/Login?ReturnUrl=%2Fapi%2FUserManager%2F2 - -
2023-03-07 11:56:28.202 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/Account/Login?ReturnUrl=%2Fapi%2FUserManager%2F2 - - - 404 0 - 0.9229ms
2023-03-07 11:56:50.352 +05:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7271/api/UserManager/2 - -
2023-03-07 11:56:50.352 +05:00 [INF] CORS policy execution successful.
2023-03-07 11:56:50.354 +05:00 [INF] Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (Administrator)
2023-03-07 11:56:50.354 +05:00 [INF] AuthenticationScheme: Identity.Application was challenged.
2023-03-07 11:56:50.355 +05:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7271/api/UserManager/2 - - - 302 0 - 3.2618ms
2023-03-07 11:56:50.437 +05:00 [INF] Request starting HTTP/1.1 DELETE https://localhost:7271/Account/Login?ReturnUrl=%2Fapi%2FUserManager%2F2 - -
2023-03-07 11:56:50.440 +05:00 [INF] CORS policy execution successful.
2023-03-07 11:56:50.441 +05:00 [INF] Request finished HTTP/1.1 DELETE https://localhost:7271/Account/Login?ReturnUrl=%2Fapi%2FUserManager%2F2 - - - 404 0 - 3.5838ms
2023-03-07 11:59:45.114 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 11:59:45.353 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:59:45.354 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:59:45.354 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:59:45.354 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:59:45.354 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:59:45.354 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:59:45.354 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:59:45.354 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:59:45.354 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:59:45.600 +05:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-07 11:59:45.789 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 11:59:45.902 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:59:45.902 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:59:45.902 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:59:45.902 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:59:45.902 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:59:45.902 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:59:45.903 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:59:45.903 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:59:45.903 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 11:59:46.138 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-07 11:59:46.138 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 11:59:46.138 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 11:59:46.138 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-07 11:59:46.138 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 11:59:46.139 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 11:59:46.139 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" decimal(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 11:59:46.139 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-07 11:59:46.139 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 11:59:46.139 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 11:59:46.139 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-07 11:59:46.140 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 11:59:46.140 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:59:46.140 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:59:46.140 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:59:46.140 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:59:46.141 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:59:46.141 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:59:46.141 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:59:46.141 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:59:46.141 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-07 11:59:46.141 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-07 11:59:46.142 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-07 11:59:46.142 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:59:46.142 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 11:59:46.142 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 11:59:46.142 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 11:59:46.142 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 11:59:46.143 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 11:59:46.143 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 11:59:46.143 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-07 11:59:46.144 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '502e0dff-a52e-4df8-b068-de954f5f758a', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '403e8267-3dee-43d0-8c78-9282bfd46881', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, 'b918cfd5-db88-4d8c-a90d-7b9f9bca13a4', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '5659949f-bd57-4182-85f8-596235c8308f', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '372aea6b-5e2a-41e3-8f74-01b0a535c892', 'Customer', 'CUSTOMER');
2023-03-07 11:59:46.144 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '9bd97e8b-436d-4f7f-8710-c6aa9f07c994', '2023-03-07 11:59:45.786161', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEGtu06XCir69Jb41x38r9dgFjKRsT0ecCUnBmd9yCP89EPVOcMNyNV1wWOr2jBT/HQ==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '8f3be2b7-8713-4de3-8ef8-1225d91f0f26', '2023-03-07 11:59:45.786166', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEGtu06XCir69Jb41x38r9dgFjKRsT0ecCUnBmd9yCP89EPVOcMNyNV1wWOr2jBT/HQ==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '78e5529b-1fd0-40d2-ad23-9c10941e353b', '2023-03-07 11:59:45.786167', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEGtu06XCir69Jb41x38r9dgFjKRsT0ecCUnBmd9yCP89EPVOcMNyNV1wWOr2jBT/HQ==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '0fb6d8da-ba46-4767-98fb-2429bc1ace7a', '2023-03-07 11:59:45.786179', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEGtu06XCir69Jb41x38r9dgFjKRsT0ecCUnBmd9yCP89EPVOcMNyNV1wWOr2jBT/HQ==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '9d6a0d9e-7dd0-4b82-8b00-e017ad64002e', '2023-03-07 11:59:45.78618', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEGtu06XCir69Jb41x38r9dgFjKRsT0ecCUnBmd9yCP89EPVOcMNyNV1wWOr2jBT/HQ==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-07 11:59:46.144 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-07 11:59:45.707634', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-07 11:59:45.707634', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-07 11:59:45.707635', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-07 11:59:45.707635', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-07 11:59:45.707635', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-07 11:59:45.707635', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-07 11:59:46.144 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-07 11:59:45.786282', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-07 11:59:45.786282', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-07 11:59:45.786283', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-07 11:59:45.786283', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-07 11:59:45.786283', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-07 11:59:45.786283', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-07 11:59:45.786299', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-07 11:59:45.786299', NULL, NULL, 'Сомони', 972);
2023-03-07 11:59:46.145 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 11:59:45.707652', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 11:59:45.707652', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 11:59:45.707653', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 11:59:45.707653', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 11:59:45.707653', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 11:59:45.707653', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-07 11:59:45.707653', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-07 11:59:45.707654', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-07 11:59:45.707654', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-07 11:59:45.707654', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-07 11:59:45.707654', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-07 11:59:45.707654', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-07 11:59:45.707655', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-07 11:59:46.145 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-07 11:59:45.78627', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-07 11:59:45.786272', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-07 11:59:45.786272', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-07 11:59:45.786273', NULL, 'Description', NULL, 'Авто');
2023-03-07 11:59:46.145 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 11:59:45.707624', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 11:59:45.707628', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 11:59:45.707628', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 11:59:45.707628', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 11:59:45.707628', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 11:59:45.707628', NULL, 'Выдан', NULL, 'Выдан');
2023-03-07 11:59:46.145 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-07 11:59:45.707643', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-07 11:59:45.707644', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-07 11:59:45.707644', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-07 11:59:45.707644', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-07 11:59:45.707644', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-07 11:59:45.707644', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-07 11:59:45.707645', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-07 11:59:45.707645', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-07 11:59:45.707645', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-07 11:59:45.707646', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-07 11:59:45.707646', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-07 11:59:45.707646', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-07 11:59:46.145 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 2);
2023-03-07 11:59:46.146 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-07 11:59:46.146 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-07 11:59:45.707648', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '30a8f9cc-8d37-4d93-ab2f-774428387e4a', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-07 11:59:45.707649', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-07 11:59:45.707649', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '5a6f1681-c582-46f5-905b-4eb2c222dcf5', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-07 11:59:45.707649', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '3b9d7f21-1d66-4c98-8648-64a68777bccb', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-07 11:59:45.70765', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '0a1e5c27-0b09-4f60-a9c3-8618791a8672', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-07 11:59:45.70765', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852', NULL);
2023-03-07 11:59:46.146 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-07 11:59:46.146 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-07 11:59:46.146 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-07 11:59:46.146 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-07 11:59:46.146 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-07 11:59:46.147 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-07 11:59:46.147 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-07 11:59:46.147 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-07 11:59:46.147 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-07 11:59:46.147 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-07 11:59:46.147 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-07 11:59:46.147 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-07 11:59:46.148 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-07 11:59:46.148 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-07 11:59:46.148 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-07 11:59:46.148 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-07 11:59:46.148 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-07 11:59:46.148 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-07 11:59:46.148 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-07 11:59:46.149 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-07 11:59:46.149 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-07 11:59:46.149 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-07 11:59:46.149 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-07 11:59:46.149 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-07 11:59:46.149 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-07 11:59:46.149 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-07 11:59:46.149 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-07 11:59:46.150 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-07 11:59:46.150 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-07 11:59:46.150 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-07 11:59:46.150 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-07 11:59:46.150 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-07 11:59:46.150 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-07 11:59:46.150 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-07 11:59:46.150 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-07 11:59:46.151 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-07 11:59:46.151 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-07 11:59:46.151 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-07 11:59:46.151 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-07 11:59:46.151 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-07 11:59:46.151 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-07 11:59:46.151 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-07 11:59:46.152 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-07 11:59:46.152 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-07 11:59:46.152 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-07 11:59:46.152 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-07 11:59:46.152 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-07 11:59:46.152 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-07 11:59:46.152 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-07 11:59:46.153 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-07 11:59:46.153 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-07 11:59:46.153 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-07 11:59:46.153 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-07 11:59:46.153 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-07 11:59:46.153 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-07 11:59:46.153 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-07 11:59:46.154 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-07 11:59:46.154 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-07 11:59:46.154 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-07 11:59:46.154 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-07 11:59:46.154 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-07 11:59:46.154 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-07 11:59:46.154 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-07 11:59:46.155 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-07 11:59:46.155 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-07 11:59:46.215 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 11:59:46.823 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 11:59:46.824 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 11:59:46.825 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 11:59:46.826 +05:00 [INF] Hosting environment: Development
2023-03-07 11:59:46.826 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 11:59:48.075 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 11:59:48.219 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 146.0762ms
2023-03-07 11:59:48.333 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 11:59:48.688 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 354.4922ms
2023-03-07 12:00:09.584 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager?PageNumber=1&PageSize=2 - -
2023-03-07 12:00:09.660 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

EDSystems.WebApi.Controllers.UserManagerController.GetAllWithPagination (EDSystems.WebApi)
EDSystems.WebApi.Controllers.UserManagerController.GetAll (EDSystems.WebApi)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 12:00:09.700 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager?PageNumber=1&PageSize=2 - - - 500 - text/plain;+charset=utf-8 115.8078ms
2023-03-07 12:00:36.907 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Status?PageSize=1&PageNumber=2 - -
2023-03-07 12:00:36.913 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

EDSystems.WebApi.Controllers.StatusController.GetAllWithPagination (EDSystems.WebApi)
EDSystems.WebApi.Controllers.StatusController.GetAll (EDSystems.WebApi)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 12:00:36.915 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Status?PageSize=1&PageNumber=2 - - - 500 - text/plain;+charset=utf-8 7.5696ms
2023-03-07 14:27:14.569 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 14:27:14.831 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:27:14.832 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:27:14.832 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:27:14.832 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:27:14.832 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:27:14.832 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:27:14.832 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:27:14.833 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:27:14.833 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:27:15.071 +05:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-07 14:27:15.275 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 14:27:15.389 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:27:15.389 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:27:15.389 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:27:15.389 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:27:15.389 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:27:15.389 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:27:15.389 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:27:15.389 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:27:15.389 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:27:15.621 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-07 14:27:15.622 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:27:15.622 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:27:15.622 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-07 14:27:15.622 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:27:15.622 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:27:15.623 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" decimal(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:27:15.623 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-07 14:27:15.623 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:27:15.623 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:27:15.623 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-07 14:27:15.623 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 14:27:15.623 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:27:15.624 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:27:15.624 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:27:15.624 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:27:15.624 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:27:15.624 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:27:15.624 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:27:15.625 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:27:15.625 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-07 14:27:15.625 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-07 14:27:15.625 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-07 14:27:15.625 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:27:15.626 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 14:27:15.626 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 14:27:15.626 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 14:27:15.626 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 14:27:15.626 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:27:15.627 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 14:27:15.627 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-07 14:27:15.628 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '346dc122-45cf-4093-ba82-90ca2374c1cf', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, 'd952e8ea-03da-43f8-8ed9-b8747b591ea5', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, 'a773e5de-03ae-4580-a132-22cf0220647a', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '7fd092b5-655e-43b5-b674-29dce66c1e49', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, 'd8dd7af5-8f29-4131-a303-4cb669d0f9fd', 'Customer', 'CUSTOMER');
2023-03-07 14:27:15.628 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '57ffa21e-f1d1-4c73-bf43-f19b9aaa87ec', '2023-03-07 14:27:15.272082', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEJGAQ5DHjNmJYkOgRd8XM0GWN9VtCBASmoYi8SLQAFolofl8XyaMb9Hc+k6wbAd8OQ==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '2298fe32-b54f-4591-b356-e92c514a0f1b', '2023-03-07 14:27:15.272088', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEJGAQ5DHjNmJYkOgRd8XM0GWN9VtCBASmoYi8SLQAFolofl8XyaMb9Hc+k6wbAd8OQ==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'dcee05e1-286e-4c51-bc86-48d5a48a97b7', '2023-03-07 14:27:15.272089', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEJGAQ5DHjNmJYkOgRd8XM0GWN9VtCBASmoYi8SLQAFolofl8XyaMb9Hc+k6wbAd8OQ==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '94be8f10-4849-4e52-811d-30328ab6d80c', '2023-03-07 14:27:15.272101', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEJGAQ5DHjNmJYkOgRd8XM0GWN9VtCBASmoYi8SLQAFolofl8XyaMb9Hc+k6wbAd8OQ==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '61c7f888-3f3f-4908-ac8a-025932c81e22', '2023-03-07 14:27:15.272102', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEJGAQ5DHjNmJYkOgRd8XM0GWN9VtCBASmoYi8SLQAFolofl8XyaMb9Hc+k6wbAd8OQ==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-07 14:27:15.628 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-07 14:27:15.190463', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-07 14:27:15.190463', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-07 14:27:15.190464', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-07 14:27:15.190464', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-07 14:27:15.190464', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-07 14:27:15.190464', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-07 14:27:15.628 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-07 14:27:15.272171', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-07 14:27:15.272172', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-07 14:27:15.272172', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-07 14:27:15.272172', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-07 14:27:15.272172', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-07 14:27:15.272173', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-07 14:27:15.272174', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-07 14:27:15.272174', NULL, NULL, 'Сомони', 972);
2023-03-07 14:27:15.629 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 14:27:15.190487', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 14:27:15.190487', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 14:27:15.190487', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 14:27:15.190487', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 14:27:15.190488', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 14:27:15.190488', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-07 14:27:15.190488', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-07 14:27:15.190488', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-07 14:27:15.190488', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-07 14:27:15.190489', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-07 14:27:15.190489', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-07 14:27:15.190489', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-07 14:27:15.190489', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-07 14:27:15.629 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-07 14:27:15.27215', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-07 14:27:15.272152', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-07 14:27:15.272152', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-07 14:27:15.272152', NULL, 'Description', NULL, 'Авто');
2023-03-07 14:27:15.629 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 14:27:15.190452', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 14:27:15.190456', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 14:27:15.190457', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 14:27:15.190457', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 14:27:15.190457', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 14:27:15.190457', NULL, 'Выдан', NULL, 'Выдан');
2023-03-07 14:27:15.629 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-07 14:27:15.190468', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-07 14:27:15.190468', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-07 14:27:15.190469', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-07 14:27:15.190469', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-07 14:27:15.190469', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-07 14:27:15.19047', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-07 14:27:15.19047', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-07 14:27:15.19047', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-07 14:27:15.19047', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-07 14:27:15.190471', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-07 14:27:15.190471', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-07 14:27:15.190471', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-07 14:27:15.630 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 2);
2023-03-07 14:27:15.630 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-07 14:27:15.630 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-07 14:27:15.190474', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '30a8f9cc-8d37-4d93-ab2f-774428387e4a', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-07 14:27:15.190474', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-07 14:27:15.190474', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '5a6f1681-c582-46f5-905b-4eb2c222dcf5', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-07 14:27:15.190483', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '3b9d7f21-1d66-4c98-8648-64a68777bccb', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-07 14:27:15.190483', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '0a1e5c27-0b09-4f60-a9c3-8618791a8672', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-07 14:27:15.190483', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852', NULL);
2023-03-07 14:27:15.630 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-07 14:27:15.630 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-07 14:27:15.630 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-07 14:27:15.631 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-07 14:27:15.631 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-07 14:27:15.631 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-07 14:27:15.631 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-07 14:27:15.631 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-07 14:27:15.631 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-07 14:27:15.631 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-07 14:27:15.632 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-07 14:27:15.632 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-07 14:27:15.632 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-07 14:27:15.632 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-07 14:27:15.632 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-07 14:27:15.632 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-07 14:27:15.633 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-07 14:27:15.633 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-07 14:27:15.633 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-07 14:27:15.633 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-07 14:27:15.633 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-07 14:27:15.633 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-07 14:27:15.633 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-07 14:27:15.634 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-07 14:27:15.634 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-07 14:27:15.634 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-07 14:27:15.634 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-07 14:27:15.634 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-07 14:27:15.634 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-07 14:27:15.634 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-07 14:27:15.635 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-07 14:27:15.635 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-07 14:27:15.635 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-07 14:27:15.635 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-07 14:27:15.635 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-07 14:27:15.635 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-07 14:27:15.635 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-07 14:27:15.636 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-07 14:27:15.636 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-07 14:27:15.636 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-07 14:27:15.636 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-07 14:27:15.636 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-07 14:27:15.636 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-07 14:27:15.636 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-07 14:27:15.637 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-07 14:27:15.637 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-07 14:27:15.637 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-07 14:27:15.637 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-07 14:27:15.637 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-07 14:27:15.637 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-07 14:27:15.637 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-07 14:27:15.638 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-07 14:27:15.638 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-07 14:27:15.638 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-07 14:27:15.638 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-07 14:27:15.638 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-07 14:27:15.638 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-07 14:27:15.638 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-07 14:27:15.639 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-07 14:27:15.639 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-07 14:27:15.639 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-07 14:27:15.639 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-07 14:27:15.639 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-07 14:27:15.639 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-07 14:27:15.639 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-07 14:27:15.708 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 14:27:16.874 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 14:27:16.874 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 14:27:16.876 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 14:27:16.876 +05:00 [INF] Hosting environment: Development
2023-03-07 14:27:16.876 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 14:27:19.447 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 14:27:19.619 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 175.7983ms
2023-03-07 14:27:19.739 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 14:27:20.174 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 435.1109ms
2023-03-07 14:27:26.018 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 14:27:26.081 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 14:27:26.096 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 14:27:26.542 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-03-07 14:27:26.860 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Name", "b"."Country", "b"."Code", "b"."City", "b"."Address", "b"."Email", "b"."Phone", "b"."DateCreated", "b"."DateUpdated"
FROM "Branch" AS "b"
2023-03-07 14:27:26.883 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm'.
2023-03-07 14:27:27.026 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 925.6562ms
2023-03-07 14:27:27.026 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 14:27:27.033 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 200 1853 application/json;+charset=utf-8 1014.3827ms
2023-03-07 14:28:14.554 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 14:28:14.841 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:28:14.842 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:28:14.842 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:28:14.842 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:28:14.842 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:28:14.842 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:28:14.842 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:28:14.842 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:28:14.842 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:28:15.106 +05:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-07 14:28:15.378 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 14:28:15.511 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:28:15.511 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:28:15.511 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:28:15.511 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:28:15.511 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:28:15.511 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:28:15.511 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:28:15.511 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:28:15.511 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:28:15.750 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-07 14:28:15.750 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:28:15.750 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:28:15.750 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-07 14:28:15.751 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:28:15.751 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:28:15.751 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" decimal(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:28:15.751 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-07 14:28:15.751 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:28:15.751 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:28:15.752 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-07 14:28:15.752 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 14:28:15.752 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:28:15.752 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:28:15.752 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:28:15.752 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:28:15.753 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:28:15.753 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:28:15.753 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:28:15.753 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:28:15.753 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-07 14:28:15.754 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-07 14:28:15.754 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-07 14:28:15.754 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:28:15.754 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 14:28:15.754 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 14:28:15.755 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 14:28:15.755 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 14:28:15.755 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:28:15.755 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 14:28:15.759 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-07 14:28:15.760 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '5fa78796-9887-40fe-83c4-f3a9cad886a5', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '9dd49a82-3b2c-42bc-9144-6e4d0db768e7', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, 'f1879dd5-ff2c-4982-851a-c52db1f385fb', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '9ca0e89f-2705-4adf-81b2-a31b92dc9411', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, 'bc551fe6-05db-44fa-90c8-a27ca424e0ed', 'Customer', 'CUSTOMER');
2023-03-07 14:28:15.761 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'ee7b209e-c86a-497e-b226-cfc3271197b4', '2023-03-07 14:28:15.374961', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEEYMq2rYFwPBKcbPAA6lc+NpvPBZZjih+al2pWcVWKqAXHRwIrElhyI3YUbR9yCnnQ==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'd3faf394-a24d-4340-bacd-6ec6a5fdac24', '2023-03-07 14:28:15.374971', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEEYMq2rYFwPBKcbPAA6lc+NpvPBZZjih+al2pWcVWKqAXHRwIrElhyI3YUbR9yCnnQ==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '237f6446-ca26-4226-a2f0-85117594c016', '2023-03-07 14:28:15.374973', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEEYMq2rYFwPBKcbPAA6lc+NpvPBZZjih+al2pWcVWKqAXHRwIrElhyI3YUbR9yCnnQ==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '08309f7a-126e-490c-9776-3ca017369d5b', '2023-03-07 14:28:15.374977', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEEYMq2rYFwPBKcbPAA6lc+NpvPBZZjih+al2pWcVWKqAXHRwIrElhyI3YUbR9yCnnQ==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '00c7ac0d-952d-43e4-b428-a5025b49e5f3', '2023-03-07 14:28:15.374978', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEEYMq2rYFwPBKcbPAA6lc+NpvPBZZjih+al2pWcVWKqAXHRwIrElhyI3YUbR9yCnnQ==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-07 14:28:15.761 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-07 14:28:15.268943', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-07 14:28:15.268944', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-07 14:28:15.268945', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-07 14:28:15.268945', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-07 14:28:15.268946', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-07 14:28:15.268946', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-07 14:28:15.761 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-07 14:28:15.375019', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-07 14:28:15.37502', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-07 14:28:15.37502', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-07 14:28:15.375021', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-07 14:28:15.375021', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-07 14:28:15.375021', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-07 14:28:15.375022', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-07 14:28:15.375022', NULL, NULL, 'Сомони', 972);
2023-03-07 14:28:15.762 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 14:28:15.268974', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 14:28:15.268975', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 14:28:15.268975', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 14:28:15.268976', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 14:28:15.268976', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 14:28:15.268976', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-07 14:28:15.268977', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-07 14:28:15.268977', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-07 14:28:15.268977', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-07 14:28:15.268978', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-07 14:28:15.268978', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-07 14:28:15.268979', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-07 14:28:15.268979', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-07 14:28:15.762 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-07 14:28:15.375012', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-07 14:28:15.375013', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-07 14:28:15.375014', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-07 14:28:15.375014', NULL, 'Description', NULL, 'Авто');
2023-03-07 14:28:15.762 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 14:28:15.268918', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 14:28:15.268927', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 14:28:15.268927', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 14:28:15.268928', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 14:28:15.268928', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 14:28:15.268929', NULL, 'Выдан', NULL, 'Выдан');
2023-03-07 14:28:15.763 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-07 14:28:15.268952', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-07 14:28:15.268953', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-07 14:28:15.268953', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-07 14:28:15.268955', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-07 14:28:15.268956', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-07 14:28:15.268956', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-07 14:28:15.268956', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-07 14:28:15.268957', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-07 14:28:15.268958', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-07 14:28:15.268958', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-07 14:28:15.268959', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-07 14:28:15.268959', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-07 14:28:15.763 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 2);
2023-03-07 14:28:15.763 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-07 14:28:15.763 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-07 14:28:15.268963', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '30a8f9cc-8d37-4d93-ab2f-774428387e4a', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-07 14:28:15.268964', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-07 14:28:15.268964', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '5a6f1681-c582-46f5-905b-4eb2c222dcf5', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-07 14:28:15.268965', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '3b9d7f21-1d66-4c98-8648-64a68777bccb', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-07 14:28:15.268965', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '0a1e5c27-0b09-4f60-a9c3-8618791a8672', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-07 14:28:15.268967', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852', NULL);
2023-03-07 14:28:15.764 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-07 14:28:15.764 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-07 14:28:15.764 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-07 14:28:15.764 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-07 14:28:15.764 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-07 14:28:15.764 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-07 14:28:15.765 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-07 14:28:15.765 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-07 14:28:15.765 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-07 14:28:15.765 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-07 14:28:15.765 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-07 14:28:15.765 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-07 14:28:15.765 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-07 14:28:15.766 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-07 14:28:15.766 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-07 14:28:15.766 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-07 14:28:15.766 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-07 14:28:15.767 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-07 14:28:15.767 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-07 14:28:15.767 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-07 14:28:15.767 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-07 14:28:15.767 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-07 14:28:15.768 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-07 14:28:15.768 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-07 14:28:15.768 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-07 14:28:15.768 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-07 14:28:15.768 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-07 14:28:15.768 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-07 14:28:15.768 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-07 14:28:15.769 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-07 14:28:15.769 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-07 14:28:15.769 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-07 14:28:15.769 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-07 14:28:15.769 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-07 14:28:15.769 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-07 14:28:15.769 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-07 14:28:15.769 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-07 14:28:15.770 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-07 14:28:15.770 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-07 14:28:15.770 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-07 14:28:15.770 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-07 14:28:15.771 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-07 14:28:15.771 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-07 14:28:15.771 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-07 14:28:15.771 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-07 14:28:15.771 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-07 14:28:15.771 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-07 14:28:15.771 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-07 14:28:15.771 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-07 14:28:15.772 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-07 14:28:15.772 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-07 14:28:15.772 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-07 14:28:15.772 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-07 14:28:15.772 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-07 14:28:15.772 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-07 14:28:15.772 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-07 14:28:15.773 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-07 14:28:15.773 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-07 14:28:15.773 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-07 14:28:15.773 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-07 14:28:15.773 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-07 14:28:15.773 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-07 14:28:15.773 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-07 14:28:15.774 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-07 14:28:15.774 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-07 14:28:15.861 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 14:28:16.502 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 14:28:16.503 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 14:28:16.505 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 14:28:16.506 +05:00 [INF] Hosting environment: Development
2023-03-07 14:28:16.506 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 14:28:17.798 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 14:28:18.032 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 236.9343ms
2023-03-07 14:28:18.158 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 14:28:18.576 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 418.7353ms
2023-03-07 14:28:25.788 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 14:28:25.859 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 14:28:25.878 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 14:28:26.370 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-03-07 14:28:26.669 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Name", "b"."Country", "b"."Code", "b"."City", "b"."Address", "b"."Email", "b"."Phone", "b"."DateCreated", "b"."DateUpdated"
FROM "Branch" AS "b"
2023-03-07 14:28:26.693 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm'.
2023-03-07 14:28:26.832 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 947.0667ms
2023-03-07 14:28:26.832 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 14:28:26.838 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 200 1853 application/json;+charset=utf-8 1049.7767ms
2023-03-07 14:29:10.201 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 14:29:10.208 +05:00 [INF] CORS policy execution successful.
2023-03-07 14:29:10.210 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 14:29:10.222 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 14:29:10.408 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-07 14:29:10.653 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ClaimType", "a"."ClaimValue", "a"."UserId"
FROM "AspNetUserClaims" AS "a"
WHERE "a"."UserId" = @__user_Id_0
2023-03-07 14:29:10.682 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 14:29:10.688 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 13)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-07 14:29:10.704 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."ClaimType", "a"."ClaimValue"
FROM "AspNetRoleClaims" AS "a"
WHERE "a"."RoleId" = @__role_Id_0
2023-03-07 14:29:10.707 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 14:29:10.819 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"0QJ25IT3QF7SKBR7SXVJ97SUKO51CIY65QDdba2bf1c-8674-4c3b-ace4-f256bb243c1f","JwtId":"430f2adf-9449-4a46-9560-1e33996a4ee4","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-07T09:29:10.8038350Z","ExpiryDateTime":"2023-09-07T09:29:10.8039210Z","$type":"RefreshTokenCommand"}
2023-03-07 14:29:10.944 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 36), @p5='?' (Size = 71), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-07 14:29:10.981 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-07 14:29:10.984 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 761.6798ms
2023-03-07 14:29:10.984 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 14:29:10.985 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 550 application/json;+charset=utf-8 784.2213ms
2023-03-07 14:29:25.782 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Account?PageNumber=1&PageSize=2 - -
2023-03-07 14:29:25.786 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

EDSystems.WebApi.Controllers.AccountController.GetAll (EDSystems.WebApi)
EDSystems.WebApi.Controllers.AccountController.GetAllWithPagination (EDSystems.WebApi)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 14:29:25.825 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Account?PageNumber=1&PageSize=2 - - - 500 - text/plain;+charset=utf-8 46.2209ms
2023-03-07 14:30:18.876 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 14:30:19.119 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:30:19.121 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:30:19.121 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:30:19.121 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:30:19.121 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:30:19.121 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:30:19.121 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:30:19.121 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:30:19.121 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:30:19.358 +05:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-07 14:30:19.562 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 14:30:19.680 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:30:19.680 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:30:19.680 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:30:19.680 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:30:19.680 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:30:19.680 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:30:19.680 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:30:19.681 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:30:19.681 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:30:19.910 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-07 14:30:19.910 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:30:19.910 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:30:19.911 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-07 14:30:19.911 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:30:19.911 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:30:19.911 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" decimal(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:30:19.911 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-07 14:30:19.911 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:30:19.911 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:30:19.912 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-07 14:30:19.912 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 14:30:19.912 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:30:19.912 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:30:19.913 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:30:19.913 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:30:19.913 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:30:19.913 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:30:19.913 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:30:19.913 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:30:19.914 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-07 14:30:19.914 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-07 14:30:19.914 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-07 14:30:19.914 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:30:19.914 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 14:30:19.915 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 14:30:19.915 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 14:30:19.915 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 14:30:19.915 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:30:19.915 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 14:30:19.916 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-07 14:30:19.916 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '893864a0-1ada-4287-9c6f-ec53f603a480', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, 'a1ab850b-329e-43eb-8e9d-5bc0092fa6ef', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '714f779f-21c6-4be1-a44b-619e01dffcdb', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '292a5894-74fa-45c6-967e-615434da92d1', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, 'ad0fee53-531a-417e-901d-2aebd8437942', 'Customer', 'CUSTOMER');
2023-03-07 14:30:19.917 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'b2c36579-77b0-44be-8201-61c3b849da49', '2023-03-07 14:30:19.558988', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAECRhfBXTSNiudlGhZFNHCPbVnL4arizAsZvYlefvnWpQurXgfdN9/d+s95PKJ5CKyw==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '4350bfeb-3e07-4478-b432-d1743fdec634', '2023-03-07 14:30:19.558995', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAECRhfBXTSNiudlGhZFNHCPbVnL4arizAsZvYlefvnWpQurXgfdN9/d+s95PKJ5CKyw==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '2b8ceae3-407b-41d6-8337-d2f13a8e7872', '2023-03-07 14:30:19.558996', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAECRhfBXTSNiudlGhZFNHCPbVnL4arizAsZvYlefvnWpQurXgfdN9/d+s95PKJ5CKyw==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'a74d002d-88da-45a4-ac2c-f44a097a5315', '2023-03-07 14:30:19.559008', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAECRhfBXTSNiudlGhZFNHCPbVnL4arizAsZvYlefvnWpQurXgfdN9/d+s95PKJ5CKyw==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '11f6c7c7-2966-48a8-85c2-7ccea6bbed66', '2023-03-07 14:30:19.559009', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAECRhfBXTSNiudlGhZFNHCPbVnL4arizAsZvYlefvnWpQurXgfdN9/d+s95PKJ5CKyw==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-07 14:30:19.917 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-07 14:30:19.479326', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-07 14:30:19.479327', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-07 14:30:19.479327', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-07 14:30:19.479328', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-07 14:30:19.479328', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-07 14:30:19.479328', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-07 14:30:19.917 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-07 14:30:19.559067', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-07 14:30:19.559067', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-07 14:30:19.559067', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-07 14:30:19.559068', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-07 14:30:19.559068', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-07 14:30:19.559068', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-07 14:30:19.559069', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-07 14:30:19.55907', NULL, NULL, 'Сомони', 972);
2023-03-07 14:30:19.917 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 14:30:19.479344', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 14:30:19.479344', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 14:30:19.479344', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 14:30:19.479345', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 14:30:19.479345', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 14:30:19.479345', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-07 14:30:19.479345', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-07 14:30:19.479346', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-07 14:30:19.479346', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-07 14:30:19.479346', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-07 14:30:19.479347', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-07 14:30:19.479347', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-07 14:30:19.479347', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-07 14:30:19.917 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-07 14:30:19.559057', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-07 14:30:19.559059', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-07 14:30:19.559059', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-07 14:30:19.559059', NULL, 'Description', NULL, 'Авто');
2023-03-07 14:30:19.918 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 14:30:19.479309', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 14:30:19.479314', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 14:30:19.479314', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 14:30:19.479314', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 14:30:19.479314', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 14:30:19.479315', NULL, 'Выдан', NULL, 'Выдан');
2023-03-07 14:30:19.918 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-07 14:30:19.479333', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-07 14:30:19.479333', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-07 14:30:19.479334', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-07 14:30:19.479334', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-07 14:30:19.479334', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-07 14:30:19.479334', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-07 14:30:19.479335', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-07 14:30:19.479335', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-07 14:30:19.479335', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-07 14:30:19.479336', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-07 14:30:19.479336', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-07 14:30:19.479336', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-07 14:30:19.918 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 2);
2023-03-07 14:30:19.918 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-07 14:30:19.918 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-07 14:30:19.47934', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '30a8f9cc-8d37-4d93-ab2f-774428387e4a', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-07 14:30:19.47934', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-07 14:30:19.47934', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '5a6f1681-c582-46f5-905b-4eb2c222dcf5', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-07 14:30:19.479341', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '3b9d7f21-1d66-4c98-8648-64a68777bccb', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-07 14:30:19.479341', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '0a1e5c27-0b09-4f60-a9c3-8618791a8672', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-07 14:30:19.479341', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852', NULL);
2023-03-07 14:30:19.919 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-07 14:30:19.919 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-07 14:30:19.919 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-07 14:30:19.919 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-07 14:30:19.919 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-07 14:30:19.919 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-07 14:30:19.920 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-07 14:30:19.920 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-07 14:30:19.920 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-07 14:30:19.920 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-07 14:30:19.920 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-07 14:30:19.920 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-07 14:30:19.921 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-07 14:30:19.921 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-07 14:30:19.921 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-07 14:30:19.921 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-07 14:30:19.921 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-07 14:30:19.921 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-07 14:30:19.921 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-07 14:30:19.922 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-07 14:30:19.922 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-07 14:30:19.922 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-07 14:30:19.922 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-07 14:30:19.922 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-07 14:30:19.922 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-07 14:30:19.922 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-07 14:30:19.923 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-07 14:30:19.923 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-07 14:30:19.923 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-07 14:30:19.923 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-07 14:30:19.923 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-07 14:30:19.923 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-07 14:30:19.923 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-07 14:30:19.924 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-07 14:30:19.924 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-07 14:30:19.924 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-07 14:30:19.924 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-07 14:30:19.924 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-07 14:30:19.924 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-07 14:30:19.924 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-07 14:30:19.925 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-07 14:30:19.925 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-07 14:30:19.925 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-07 14:30:19.925 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-07 14:30:19.925 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-07 14:30:19.925 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-07 14:30:19.925 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-07 14:30:19.925 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-07 14:30:19.926 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-07 14:30:19.926 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-07 14:30:19.926 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-07 14:30:19.926 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-07 14:30:19.926 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-07 14:30:19.926 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-07 14:30:19.926 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-07 14:30:19.927 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-07 14:30:19.927 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-07 14:30:19.927 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-07 14:30:19.927 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-07 14:30:19.928 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-07 14:30:19.928 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-07 14:30:19.928 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-07 14:30:19.928 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-07 14:30:19.929 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-07 14:30:19.929 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-07 14:30:19.986 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 14:30:20.618 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 14:30:20.618 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 14:30:20.620 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 14:30:20.620 +05:00 [INF] Hosting environment: Development
2023-03-07 14:30:20.620 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 14:30:22.153 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 14:30:22.309 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 157.3861ms
2023-03-07 14:30:22.428 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 14:30:22.842 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 413.9240ms
2023-03-07 14:30:46.500 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 14:30:46.808 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 14:30:46.822 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 14:30:47.274 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-03-07 14:30:47.545 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Name", "b"."Country", "b"."Code", "b"."City", "b"."Address", "b"."Email", "b"."Phone", "b"."DateCreated", "b"."DateUpdated"
FROM "Branch" AS "b"
2023-03-07 14:30:47.567 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm'.
2023-03-07 14:30:47.660 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 834.4749ms
2023-03-07 14:30:47.661 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-03-07 14:30:47.666 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 200 1853 application/json;+charset=utf-8 1166.6185ms
2023-03-07 14:30:57.395 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-07 14:30:57.409 +05:00 [INF] Authorization failed. These requirements were not met:
ClaimsAuthorizationRequirement:Claim.Type=CanGetAllBranchesWithPagination
2023-03-07 14:30:57.412 +05:00 [INF] AuthenticationScheme: Bearer was forbidden.
2023-03-07 14:30:57.412 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 403 0 - 17.1896ms
2023-03-07 14:31:08.371 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=3 - -
2023-03-07 14:31:08.375 +05:00 [INF] Authorization failed. These requirements were not met:
ClaimsAuthorizationRequirement:Claim.Type=CanGetAllBranchesWithPagination
2023-03-07 14:31:08.375 +05:00 [INF] AuthenticationScheme: Bearer was forbidden.
2023-03-07 14:31:08.375 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=3 - - - 403 0 - 4.7751ms
2023-03-07 14:31:15.539 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/1 - -
2023-03-07 14:31:15.540 +05:00 [INF] Authorization failed. These requirements were not met:
ClaimsAuthorizationRequirement:Claim.Type=CanGetBranchDetails
2023-03-07 14:31:15.540 +05:00 [INF] AuthenticationScheme: Bearer was forbidden.
2023-03-07 14:31:15.540 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/1 - - - 403 0 - 0.8260ms
2023-03-07 14:32:33.723 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 14:32:33.958 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:32:33.959 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:32:33.959 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:32:33.959 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:32:33.959 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:32:33.959 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:32:33.959 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:32:33.959 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:32:33.959 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:32:34.194 +05:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-07 14:32:34.404 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 14:32:34.524 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:32:34.524 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:32:34.524 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:32:34.524 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:32:34.525 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:32:34.525 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:32:34.525 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:32:34.525 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:32:34.525 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 14:32:34.754 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-07 14:32:34.754 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:32:34.754 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:32:34.755 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-07 14:32:34.755 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:32:34.755 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:32:34.755 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" decimal(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:32:34.755 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-07 14:32:34.755 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:32:34.755 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 14:32:34.756 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-07 14:32:34.756 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 14:32:34.756 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:32:34.756 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:32:34.756 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:32:34.756 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:32:34.757 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:32:34.757 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:32:34.757 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:32:34.757 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:32:34.757 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-07 14:32:34.757 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-07 14:32:34.758 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-07 14:32:34.758 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:32:34.758 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 14:32:34.758 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 14:32:34.758 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 14:32:34.758 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 14:32:34.759 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 14:32:34.759 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 14:32:34.759 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-07 14:32:34.760 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '8c1d87cf-2137-4919-8b6a-b0734cb8730e', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, 'c9a0d798-b89f-47dc-97d0-04a26f7e08b5', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '1adce204-c9c1-40f4-855d-d6238641aec5', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '05ef08c9-7066-4b19-8a3b-a26db88eeb68', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, 'd760c19f-100a-41fc-afbb-ba6be4423311', 'Customer', 'CUSTOMER');
2023-03-07 14:32:34.760 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '6729efa7-ac29-45cd-8962-83bfe742ee7d', '2023-03-07 14:32:34.394205', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEIAOZhYAK2BY6P5P8hwN6oEMqTHEl5VK9Cc/D8dEgn+b54miS5T8N7RbAIkqNQGg+w==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'f78314f8-2623-4573-a197-50c254c17f4e', '2023-03-07 14:32:34.394212', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEIAOZhYAK2BY6P5P8hwN6oEMqTHEl5VK9Cc/D8dEgn+b54miS5T8N7RbAIkqNQGg+w==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'fd5b735e-17b6-4478-a485-9a48e7b5364a', '2023-03-07 14:32:34.394212', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEIAOZhYAK2BY6P5P8hwN6oEMqTHEl5VK9Cc/D8dEgn+b54miS5T8N7RbAIkqNQGg+w==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '07838ec9-932f-4c6f-866a-425ee6b427bf', '2023-03-07 14:32:34.394215', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEIAOZhYAK2BY6P5P8hwN6oEMqTHEl5VK9Cc/D8dEgn+b54miS5T8N7RbAIkqNQGg+w==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'b0f09b57-d9f9-4279-878a-3662326622cf', '2023-03-07 14:32:34.394216', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEIAOZhYAK2BY6P5P8hwN6oEMqTHEl5VK9Cc/D8dEgn+b54miS5T8N7RbAIkqNQGg+w==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-07 14:32:34.760 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-07 14:32:34.314931', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-07 14:32:34.314932', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-07 14:32:34.314932', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-07 14:32:34.314932', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-07 14:32:34.314933', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-07 14:32:34.314933', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-07 14:32:34.761 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-07 14:32:34.40237', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-07 14:32:34.402372', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-07 14:32:34.402373', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-07 14:32:34.402373', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-07 14:32:34.402374', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-07 14:32:34.402374', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-07 14:32:34.402374', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-07 14:32:34.402375', NULL, NULL, 'Сомони', 972);
2023-03-07 14:32:34.761 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 14:32:34.314951', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 14:32:34.314951', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 14:32:34.314952', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 14:32:34.314952', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 14:32:34.314952', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 14:32:34.314953', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-07 14:32:34.314953', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-07 14:32:34.314953', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-07 14:32:34.314953', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-07 14:32:34.314953', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-07 14:32:34.314954', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-07 14:32:34.314954', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-07 14:32:34.314954', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-07 14:32:34.761 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-07 14:32:34.402201', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-07 14:32:34.402206', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-07 14:32:34.402206', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-07 14:32:34.402206', NULL, 'Description', NULL, 'Авто');
2023-03-07 14:32:34.761 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 14:32:34.314919', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 14:32:34.314924', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 14:32:34.314924', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 14:32:34.314924', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 14:32:34.314924', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 14:32:34.314925', NULL, 'Выдан', NULL, 'Выдан');
2023-03-07 14:32:34.762 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-07 14:32:34.314941', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-07 14:32:34.314941', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-07 14:32:34.314941', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-07 14:32:34.314942', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-07 14:32:34.314942', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-07 14:32:34.314942', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-07 14:32:34.314942', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-07 14:32:34.314943', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-07 14:32:34.314943', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-07 14:32:34.314943', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-07 14:32:34.314943', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-07 14:32:34.314944', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-07 14:32:34.762 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 2);
2023-03-07 14:32:34.762 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-07 14:32:34.762 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-07 14:32:34.314947', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '30a8f9cc-8d37-4d93-ab2f-774428387e4a', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-07 14:32:34.314947', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-07 14:32:34.314948', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '5a6f1681-c582-46f5-905b-4eb2c222dcf5', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-07 14:32:34.314948', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '3b9d7f21-1d66-4c98-8648-64a68777bccb', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-07 14:32:34.314948', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '0a1e5c27-0b09-4f60-a9c3-8618791a8672', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-07 14:32:34.314948', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852', NULL);
2023-03-07 14:32:34.762 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-07 14:32:34.762 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-07 14:32:34.762 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-07 14:32:34.763 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-07 14:32:34.763 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-07 14:32:34.763 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-07 14:32:34.763 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-07 14:32:34.763 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-07 14:32:34.763 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-07 14:32:34.763 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-07 14:32:34.764 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-07 14:32:34.764 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-07 14:32:34.764 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-07 14:32:34.764 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-07 14:32:34.764 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-07 14:32:34.764 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-07 14:32:34.764 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-07 14:32:34.764 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-07 14:32:34.765 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-07 14:32:34.765 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-07 14:32:34.765 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-07 14:32:34.765 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-07 14:32:34.765 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-07 14:32:34.765 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-07 14:32:34.765 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-07 14:32:34.765 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-07 14:32:34.766 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-07 14:32:34.766 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-07 14:32:34.766 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-07 14:32:34.766 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-07 14:32:34.766 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-07 14:32:34.766 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-07 14:32:34.766 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-07 14:32:34.767 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-07 14:32:34.767 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-07 14:32:34.767 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-07 14:32:34.767 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-07 14:32:34.767 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-07 14:32:34.767 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-07 14:32:34.767 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-07 14:32:34.768 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-07 14:32:34.768 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-07 14:32:34.768 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-07 14:32:34.768 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-07 14:32:34.768 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-07 14:32:34.768 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-07 14:32:34.768 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-07 14:32:34.768 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-07 14:32:34.769 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-07 14:32:34.769 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-07 14:32:34.769 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-07 14:32:34.769 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-07 14:32:34.769 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-07 14:32:34.769 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-07 14:32:34.769 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-07 14:32:34.770 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-07 14:32:34.770 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-07 14:32:34.770 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-07 14:32:34.770 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-07 14:32:34.770 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-07 14:32:34.770 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-07 14:32:34.770 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-07 14:32:34.771 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-07 14:32:34.771 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-07 14:32:34.771 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-07 14:32:34.835 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 14:32:35.461 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 14:32:35.462 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 14:32:35.464 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 14:32:35.464 +05:00 [INF] Hosting environment: Development
2023-03-07 14:32:35.464 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 14:32:36.860 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 14:32:37.008 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 149.6651ms
2023-03-07 14:32:37.125 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 14:32:37.507 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 382.6156ms
2023-03-07 14:32:58.231 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/ExchangeRate/GetRub - -
2023-03-07 14:32:58.416 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.ExchangeRateController.GetRub (EDSystems.WebApi)'
2023-03-07 14:32:58.430 +05:00 [INF] Route matched with {action = "GetRub", controller = "ExchangeRate"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetRub() on controller EDSystems.WebApi.Controllers.ExchangeRateController (EDSystems.WebApi).
2023-03-07 14:32:58.782 +05:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-03-07 14:32:58.788 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.ExchangeRateController.GetRub (EDSystems.WebApi) in 353.2707ms
2023-03-07 14:32:58.789 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.ExchangeRateController.GetRub (EDSystems.WebApi)'
2023-03-07 14:32:58.790 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/ExchangeRate/GetRub - - - 200 - text/plain;+charset=utf-8 558.8638ms
2023-03-07 14:33:11.452 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Plan?PageNumber=1&PageSize=3 - -
2023-03-07 14:33:11.460 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

EDSystems.WebApi.Controllers.PlanController.GetAllWithPagination (EDSystems.WebApi)
EDSystems.WebApi.Controllers.PlanController.GetAll (EDSystems.WebApi)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 14:33:11.500 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Plan?PageNumber=1&PageSize=3 - - - 500 - text/plain;+charset=utf-8 48.6314ms
2023-03-07 14:33:18.133 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Plan?PageNumber=1&PageSize=2 - -
2023-03-07 14:33:18.133 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

EDSystems.WebApi.Controllers.PlanController.GetAllWithPagination (EDSystems.WebApi)
EDSystems.WebApi.Controllers.PlanController.GetAll (EDSystems.WebApi)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 14:33:18.135 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Plan?PageNumber=1&PageSize=2 - - - 500 - text/plain;+charset=utf-8 2.6053ms
2023-03-07 14:34:46.596 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/RoleManager?PageNumber=1&PageSize=3 - -
2023-03-07 14:34:46.629 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

EDSystems.WebApi.Controllers.RoleManagerController.GetAllWithPagination (EDSystems.WebApi)
EDSystems.WebApi.Controllers.RoleManagerController.GetAll (EDSystems.WebApi)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 14:34:46.629 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/RoleManager?PageNumber=1&PageSize=3 - - - 500 - text/plain;+charset=utf-8 33.1077ms
2023-03-07 15:44:17.212 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Plan?PageNumber=1&PageSize=2 - -
2023-03-07 15:44:17.213 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

EDSystems.WebApi.Controllers.PlanController.GetAllWithPagination (EDSystems.WebApi)
EDSystems.WebApi.Controllers.PlanController.GetAll (EDSystems.WebApi)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 15:44:17.213 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Plan?PageNumber=1&PageSize=2 - - - 500 - text/plain;+charset=utf-8 1.5873ms
2023-03-07 15:44:53.203 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Plan/1 - -
2023-03-07 15:44:53.386 +05:00 [INF] Authorization failed. These requirements were not met:
ClaimsAuthorizationRequirement:Claim.Type=CanGetPlanDetails
2023-03-07 15:44:53.388 +05:00 [INF] AuthenticationScheme: Bearer was forbidden.
2023-03-07 15:44:53.389 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Plan/1 - - - 403 0 - 188.3705ms
2023-03-07 15:45:23.600 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Plan/2 - -
2023-03-07 15:45:23.605 +05:00 [INF] Authorization failed. These requirements were not met:
ClaimsAuthorizationRequirement:Claim.Type=CanGetPlanDetails
2023-03-07 15:45:23.610 +05:00 [INF] AuthenticationScheme: Bearer was forbidden.
2023-03-07 15:45:23.613 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Plan/2 - - - 403 0 - 12.8423ms
2023-03-07 15:47:25.794 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 15:47:26.057 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:47:26.058 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:47:26.058 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:47:26.058 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:47:26.058 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:47:26.058 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:47:26.058 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:47:26.058 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:47:26.058 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:47:26.316 +05:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-07 15:47:26.602 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 15:47:26.708 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:47:26.708 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:47:26.709 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:47:26.709 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:47:26.709 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:47:26.709 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:47:26.709 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:47:26.709 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:47:26.709 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:47:26.925 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-07 15:47:26.925 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 15:47:26.925 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 15:47:26.926 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-07 15:47:26.926 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 15:47:26.926 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 15:47:26.926 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" decimal(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 15:47:26.926 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-07 15:47:26.926 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 15:47:26.926 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 15:47:26.927 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-07 15:47:26.927 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 15:47:26.927 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:47:26.927 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:47:26.927 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:47:26.928 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:47:26.928 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:47:26.928 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:47:26.928 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:47:26.928 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:47:26.928 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-07 15:47:26.929 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-07 15:47:26.929 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-07 15:47:26.929 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:47:26.929 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 15:47:26.929 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 15:47:26.930 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 15:47:26.930 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 15:47:26.930 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:47:26.930 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 15:47:26.930 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-07 15:47:26.931 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, 'b6e5dbdc-78c0-4c96-bd7d-c290f4e34065', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, 'bbf069a3-11c7-4f22-97ab-0a8dbc624c7e', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, 'ce0fea3a-ca23-4e5e-a3c6-89340463ddef', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, 'd99e22b1-02d8-40a1-ba07-c75e072e09f1', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '1a2cb4a3-4a8e-46fa-8b38-8275c6c553ab', 'Customer', 'CUSTOMER');
2023-03-07 15:47:26.932 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '70539e75-622d-4431-bdb2-6cb36ae22cd9', '2023-03-07 15:47:26.600765', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEOOmlXlS8JxXVhIBANVtbks+Vg7NvMf1IjH5G8xT9kKtX2y0NeWhdVDeNbGVv5Ruig==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '69354d2b-213c-4af4-8af1-ce025f6b32f6', '2023-03-07 15:47:26.600769', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEOOmlXlS8JxXVhIBANVtbks+Vg7NvMf1IjH5G8xT9kKtX2y0NeWhdVDeNbGVv5Ruig==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '5af94cc5-28a7-4fe8-af4e-c5a3c0470374', '2023-03-07 15:47:26.60077', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEOOmlXlS8JxXVhIBANVtbks+Vg7NvMf1IjH5G8xT9kKtX2y0NeWhdVDeNbGVv5Ruig==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '9a88e5e0-eae3-4627-b965-81becae415ca', '2023-03-07 15:47:26.600773', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEOOmlXlS8JxXVhIBANVtbks+Vg7NvMf1IjH5G8xT9kKtX2y0NeWhdVDeNbGVv5Ruig==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '2368492a-1c4f-44cf-839b-8da378a6073f', '2023-03-07 15:47:26.600774', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEOOmlXlS8JxXVhIBANVtbks+Vg7NvMf1IjH5G8xT9kKtX2y0NeWhdVDeNbGVv5Ruig==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-07 15:47:26.932 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-07 15:47:26.51951', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-07 15:47:26.51951', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-07 15:47:26.519511', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-07 15:47:26.519511', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-07 15:47:26.519511', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-07 15:47:26.519512', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-07 15:47:26.932 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-07 15:47:26.600798', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-07 15:47:26.600799', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-07 15:47:26.600799', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-07 15:47:26.600799', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-07 15:47:26.600799', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-07 15:47:26.6008', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-07 15:47:26.6008', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-07 15:47:26.6008', NULL, NULL, 'Сомони', 972);
2023-03-07 15:47:26.932 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 15:47:26.519542', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 15:47:26.519542', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 15:47:26.519542', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 15:47:26.519543', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 15:47:26.519543', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 15:47:26.519543', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-07 15:47:26.519544', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-07 15:47:26.519544', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-07 15:47:26.519544', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-07 15:47:26.519545', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-07 15:47:26.519545', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-07 15:47:26.519545', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-07 15:47:26.519545', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-07 15:47:26.932 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-07 15:47:26.600793', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-07 15:47:26.600793', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-07 15:47:26.600794', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-07 15:47:26.600794', NULL, 'Description', NULL, 'Авто');
2023-03-07 15:47:26.933 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 15:47:26.519482', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 15:47:26.519492', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 15:47:26.519492', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 15:47:26.519493', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 15:47:26.519493', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 15:47:26.519494', NULL, 'Выдан', NULL, 'Выдан');
2023-03-07 15:47:26.933 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-07 15:47:26.519517', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-07 15:47:26.519517', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-07 15:47:26.519517', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-07 15:47:26.519525', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-07 15:47:26.519526', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-07 15:47:26.519526', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-07 15:47:26.519526', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-07 15:47:26.519527', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-07 15:47:26.519527', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-07 15:47:26.519527', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-07 15:47:26.519527', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-07 15:47:26.519528', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-07 15:47:26.933 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 2);
2023-03-07 15:47:26.933 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-07 15:47:26.933 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-07 15:47:26.519532', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '30a8f9cc-8d37-4d93-ab2f-774428387e4a', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-07 15:47:26.519533', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-07 15:47:26.519533', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '5a6f1681-c582-46f5-905b-4eb2c222dcf5', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-07 15:47:26.519534', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '3b9d7f21-1d66-4c98-8648-64a68777bccb', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-07 15:47:26.519534', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '0a1e5c27-0b09-4f60-a9c3-8618791a8672', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-07 15:47:26.519535', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852', NULL);
2023-03-07 15:47:26.934 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-07 15:47:26.934 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-07 15:47:26.934 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-07 15:47:26.934 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-07 15:47:26.934 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-07 15:47:26.934 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-07 15:47:26.934 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-07 15:47:26.935 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-07 15:47:26.935 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-07 15:47:26.935 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-07 15:47:26.935 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-07 15:47:26.935 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-07 15:47:26.936 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-07 15:47:26.936 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-07 15:47:26.936 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-07 15:47:26.936 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-07 15:47:26.936 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-07 15:47:26.937 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-07 15:47:26.937 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-07 15:47:26.937 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-07 15:47:26.937 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-07 15:47:26.937 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-07 15:47:26.938 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-07 15:47:26.938 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-07 15:47:26.938 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-07 15:47:26.938 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-07 15:47:26.938 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-07 15:47:26.938 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-07 15:47:26.939 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-07 15:47:26.939 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-07 15:47:26.939 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-07 15:47:26.939 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-07 15:47:26.939 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-07 15:47:26.940 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-07 15:47:26.940 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-07 15:47:26.940 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-07 15:47:26.940 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-07 15:47:26.940 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-07 15:47:26.941 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-07 15:47:26.941 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-07 15:47:26.941 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-07 15:47:26.941 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-07 15:47:26.942 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-07 15:47:26.942 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-07 15:47:26.942 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-07 15:47:26.942 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-07 15:47:26.942 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-07 15:47:26.942 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-07 15:47:26.943 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-07 15:47:26.943 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-07 15:47:26.943 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-07 15:47:26.943 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-07 15:47:26.943 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-07 15:47:26.944 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-07 15:47:26.944 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-07 15:47:26.944 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-07 15:47:26.944 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-07 15:47:26.944 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-07 15:47:26.945 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-07 15:47:26.945 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-07 15:47:26.945 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-07 15:47:26.945 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-07 15:47:26.946 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-07 15:47:26.946 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-07 15:47:26.946 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-07 15:47:27.017 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 15:47:27.686 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 15:47:27.686 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 15:47:27.688 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 15:47:27.689 +05:00 [INF] Hosting environment: Development
2023-03-07 15:47:27.689 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 15:47:28.967 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 15:47:29.119 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 153.9896ms
2023-03-07 15:47:29.228 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 15:47:29.607 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 378.7281ms
2023-03-07 15:47:41.262 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 15:47:41.384 +05:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
ClaimsAuthorizationRequirement:Claim.Type=CanGetAllBranches
2023-03-07 15:47:41.390 +05:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-03-07 15:47:41.391 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 401 0 - 129.2739ms
2023-03-07 15:48:16.347 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 15:48:16.380 +05:00 [INF] CORS policy execution successful.
2023-03-07 15:48:16.387 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 15:48:16.409 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 15:48:17.264 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-07 15:48:17.509 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ClaimType", "a"."ClaimValue", "a"."UserId"
FROM "AspNetUserClaims" AS "a"
WHERE "a"."UserId" = @__user_Id_0
2023-03-07 15:48:17.540 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 15:48:17.546 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 13)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-07 15:48:17.563 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."ClaimType", "a"."ClaimValue"
FROM "AspNetRoleClaims" AS "a"
WHERE "a"."RoleId" = @__role_Id_0
2023-03-07 15:48:17.569 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 15:48:17.678 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"OVVLJYARUMBX9WWF51I4397KNEYNFNSBUYO27a577f0-c900-4b7c-b24d-14dd99b1992c","JwtId":"c4e86239-2554-4bdc-baaa-3b84efbfd3a5","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-07T10:48:17.6595350Z","ExpiryDateTime":"2023-09-07T10:48:17.6595860Z","$type":"RefreshTokenCommand"}
2023-03-07 15:48:17.796 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 36), @p5='?' (Size = 71), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-07 15:48:17.855 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-07 15:48:17.930 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1517.4276ms
2023-03-07 15:48:17.931 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 15:48:17.937 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 550 application/json;+charset=utf-8 1590.3451ms
2023-03-07 15:48:39.305 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch - -
2023-03-07 15:48:39.378 +05:00 [INF] Authorization failed. These requirements were not met:
ClaimsAuthorizationRequirement:Claim.Type=CanGetAllBranches
2023-03-07 15:48:39.380 +05:00 [INF] AuthenticationScheme: Bearer was forbidden.
2023-03-07 15:48:39.380 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch - - - 403 0 - 77.5802ms
2023-03-07 15:49:13.819 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Branch application/json-patch+json 150
2023-03-07 15:49:13.820 +05:00 [INF] CORS policy execution successful.
2023-03-07 15:49:13.822 +05:00 [INF] Authorization failed. These requirements were not met:
ClaimsAuthorizationRequirement:Claim.Type=CanCreateBranch
2023-03-07 15:49:13.822 +05:00 [INF] AuthenticationScheme: Bearer was forbidden.
2023-03-07 15:49:13.823 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Branch application/json-patch+json 150 - 403 0 - 3.5857ms
2023-03-07 15:51:14.499 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 15:51:14.731 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:51:14.732 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:51:14.732 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:51:14.732 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:51:14.732 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:51:14.732 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:51:14.732 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:51:14.732 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:51:14.732 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:51:14.947 +05:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-07 15:51:15.152 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 15:51:15.251 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:51:15.251 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:51:15.251 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:51:15.251 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:51:15.251 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:51:15.251 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:51:15.251 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:51:15.251 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:51:15.251 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:51:15.469 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-07 15:51:15.470 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 15:51:15.470 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 15:51:15.470 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-07 15:51:15.470 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 15:51:15.470 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 15:51:15.470 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" decimal(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 15:51:15.471 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-07 15:51:15.471 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 15:51:15.471 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 15:51:15.471 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-07 15:51:15.471 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 15:51:15.471 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:51:15.472 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:51:15.472 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:51:15.472 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:51:15.472 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:51:15.472 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:51:15.472 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:51:15.473 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:51:15.473 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-07 15:51:15.473 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-07 15:51:15.473 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-07 15:51:15.473 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:51:15.473 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 15:51:15.474 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 15:51:15.474 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 15:51:15.474 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 15:51:15.474 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 15:51:15.474 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 15:51:15.474 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-07 15:51:15.475 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '4284734e-674c-4f21-b362-5d5a0c915048', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '219ab074-7791-4e58-80af-efa3ce4f6a3a', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '66b9b475-b50a-4ff7-bf95-114fcb1e8a47', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '50cb9fae-5b1c-48bf-b1ba-8804078771e4', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, 'c83e174d-17e4-4f21-867c-c48ea37e7ff4', 'Customer', 'CUSTOMER');
2023-03-07 15:51:15.475 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '547be109-1aae-4e82-98cd-d36b9d169e02', '2023-03-07 15:51:15.148694', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEPF8Ke+9pRPn4Z47vWcUHKJgdS0nZ45V7NFXFg8QmGf4Qhbr9p+ie4NRWL9ixKJR4g==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'a328e717-4884-461f-9db3-f77fbe0ce55f', '2023-03-07 15:51:15.148699', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEPF8Ke+9pRPn4Z47vWcUHKJgdS0nZ45V7NFXFg8QmGf4Qhbr9p+ie4NRWL9ixKJR4g==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'c6f0658d-db3f-4b1a-bdf6-d1b31ecbf5ab', '2023-03-07 15:51:15.1487', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEPF8Ke+9pRPn4Z47vWcUHKJgdS0nZ45V7NFXFg8QmGf4Qhbr9p+ie4NRWL9ixKJR4g==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '43fd318f-c0e1-41a8-b922-7954c14356b2', '2023-03-07 15:51:15.148712', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEPF8Ke+9pRPn4Z47vWcUHKJgdS0nZ45V7NFXFg8QmGf4Qhbr9p+ie4NRWL9ixKJR4g==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '00a00a0f-b1f7-45b7-b568-58447d28ac94', '2023-03-07 15:51:15.148712', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEPF8Ke+9pRPn4Z47vWcUHKJgdS0nZ45V7NFXFg8QmGf4Qhbr9p+ie4NRWL9ixKJR4g==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-07 15:51:15.476 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-07 15:51:15.072182', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-07 15:51:15.072182', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-07 15:51:15.072182', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-07 15:51:15.072183', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-07 15:51:15.072183', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-07 15:51:15.072183', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-07 15:51:15.476 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-07 15:51:15.148746', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-07 15:51:15.148746', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-07 15:51:15.148746', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-07 15:51:15.148746', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-07 15:51:15.148747', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-07 15:51:15.148747', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-07 15:51:15.148767', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-07 15:51:15.148767', NULL, NULL, 'Сомони', 972);
2023-03-07 15:51:15.476 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 15:51:15.072195', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 15:51:15.072195', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 15:51:15.072195', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 15:51:15.072195', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 15:51:15.072196', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 15:51:15.072201', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-07 15:51:15.072202', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-07 15:51:15.072202', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-07 15:51:15.072202', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-07 15:51:15.072202', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-07 15:51:15.072203', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-07 15:51:15.072203', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-07 15:51:15.072203', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-07 15:51:15.476 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-07 15:51:15.148737', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-07 15:51:15.148739', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-07 15:51:15.148739', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-07 15:51:15.14874', NULL, 'Description', NULL, 'Авто');
2023-03-07 15:51:15.477 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 15:51:15.072173', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 15:51:15.072176', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 15:51:15.072176', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 15:51:15.072177', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 15:51:15.072177', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 15:51:15.072177', NULL, 'Выдан', NULL, 'Выдан');
2023-03-07 15:51:15.477 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-07 15:51:15.072186', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-07 15:51:15.072186', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-07 15:51:15.072186', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-07 15:51:15.072187', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-07 15:51:15.072187', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-07 15:51:15.072187', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-07 15:51:15.072187', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-07 15:51:15.072188', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-07 15:51:15.072188', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-07 15:51:15.072188', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-07 15:51:15.072188', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-07 15:51:15.072188', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-07 15:51:15.477 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 2);
2023-03-07 15:51:15.477 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-07 15:51:15.477 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-07 15:51:15.072191', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '30a8f9cc-8d37-4d93-ab2f-774428387e4a', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-07 15:51:15.072192', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-07 15:51:15.072192', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '5a6f1681-c582-46f5-905b-4eb2c222dcf5', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-07 15:51:15.072192', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '3b9d7f21-1d66-4c98-8648-64a68777bccb', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-07 15:51:15.072192', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '0a1e5c27-0b09-4f60-a9c3-8618791a8672', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-07 15:51:15.072192', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852', NULL);
2023-03-07 15:51:15.478 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-07 15:51:15.478 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-07 15:51:15.478 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-07 15:51:15.478 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-07 15:51:15.478 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-07 15:51:15.478 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-07 15:51:15.478 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-07 15:51:15.479 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-07 15:51:15.479 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-07 15:51:15.479 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-07 15:51:15.479 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-07 15:51:15.479 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-07 15:51:15.479 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-07 15:51:15.479 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-07 15:51:15.479 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-07 15:51:15.480 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-07 15:51:15.480 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-07 15:51:15.480 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-07 15:51:15.480 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-07 15:51:15.480 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-07 15:51:15.480 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-07 15:51:15.480 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-07 15:51:15.481 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-07 15:51:15.481 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-07 15:51:15.481 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-07 15:51:15.481 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-07 15:51:15.481 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-07 15:51:15.481 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-07 15:51:15.481 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-07 15:51:15.481 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-07 15:51:15.482 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-07 15:51:15.482 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-07 15:51:15.482 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-07 15:51:15.482 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-07 15:51:15.482 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-07 15:51:15.482 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-07 15:51:15.482 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-07 15:51:15.482 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-07 15:51:15.483 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-07 15:51:15.483 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-07 15:51:15.483 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-07 15:51:15.483 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-07 15:51:15.483 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-07 15:51:15.483 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-07 15:51:15.483 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-07 15:51:15.484 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-07 15:51:15.484 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-07 15:51:15.484 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-07 15:51:15.484 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-07 15:51:15.484 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-07 15:51:15.484 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-07 15:51:15.484 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-07 15:51:15.485 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-07 15:51:15.485 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-07 15:51:15.485 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-07 15:51:15.485 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-07 15:51:15.485 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-07 15:51:15.485 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-07 15:51:15.485 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-07 15:51:15.486 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-07 15:51:15.486 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-07 15:51:15.486 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-07 15:51:15.486 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-07 15:51:15.486 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-07 15:51:15.486 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-07 15:51:15.545 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 15:51:16.296 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 15:51:16.297 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 15:51:16.299 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 15:51:16.299 +05:00 [INF] Hosting environment: Development
2023-03-07 15:51:16.299 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 15:51:17.758 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 15:51:17.912 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 156.6675ms
2023-03-07 15:51:18.028 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 15:51:18.435 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 406.7616ms
2023-03-07 15:51:40.628 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 15:51:40.727 +05:00 [INF] CORS policy execution successful.
2023-03-07 15:51:40.786 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 15:51:40.808 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 15:51:41.689 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-07 15:51:41.931 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ClaimType", "a"."ClaimValue", "a"."UserId"
FROM "AspNetUserClaims" AS "a"
WHERE "a"."UserId" = @__user_Id_0
2023-03-07 15:51:41.963 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 15:51:41.969 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 13)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-07 15:51:41.985 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."ClaimType", "a"."ClaimValue"
FROM "AspNetRoleClaims" AS "a"
WHERE "a"."RoleId" = @__role_Id_0
2023-03-07 15:51:41.990 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 15:51:42.106 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"C3C43C49H265WJ44PC41P5JVKBUTBZBIMAB786f2079-6684-454e-8fc7-a046d4c84d2c","JwtId":"a3c7948e-7c13-44a4-9370-b4a81a40f7eb","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-07T10:51:42.0848000Z","ExpiryDateTime":"2023-09-07T10:51:42.0848620Z","$type":"RefreshTokenCommand"}
2023-03-07 15:51:42.233 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 36), @p5='?' (Size = 71), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-07 15:51:42.297 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-07 15:51:42.322 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1510.5399ms
2023-03-07 15:51:42.323 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 15:51:42.332 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 550 application/json;+charset=utf-8 1704.1941ms
2023-03-07 15:52:06.865 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Parcel?PageNumber=1&PageSize=2 - -
2023-03-07 15:52:06.870 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

EDSystems.WebApi.Controllers.ParcelController.GetAll (EDSystems.WebApi)
EDSystems.WebApi.Controllers.ParcelController.GetAllWithPagination (EDSystems.WebApi)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 15:52:06.907 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Parcel?PageNumber=1&PageSize=2 - - - 500 - text/plain;+charset=utf-8 41.8604ms
2023-03-07 15:53:04.905 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Plan/1 - -
2023-03-07 15:53:05.029 +05:00 [INF] Authorization failed. These requirements were not met:
ClaimsAuthorizationRequirement:Claim.Type=CanGetPlanDetails
2023-03-07 15:53:05.031 +05:00 [INF] AuthenticationScheme: Bearer was forbidden.
2023-03-07 15:53:05.031 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Plan/1 - - - 403 0 - 126.2712ms
2023-03-07 15:55:29.159 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Claims/AddToClaim application/json-patch+json 191
2023-03-07 15:55:29.163 +05:00 [INF] CORS policy execution successful.
2023-03-07 15:55:29.166 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.ClaimsController.AddToClaim (EDSystems.WebApi)'
2023-03-07 15:55:29.186 +05:00 [INF] Route matched with {action = "AddToClaim", controller = "Claims"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Claims.Queries.GetClaimList.UserClaimListVm]] AddToClaim(EDSystems.WebApi.Models.UserClaim.GetClaimList.AddToClaimDto) on controller EDSystems.WebApi.Controllers.ClaimsController (EDSystems.WebApi).
2023-03-07 15:55:29.232 +05:00 [INF] NotesRequest: AddToClaimCommand {"Email":"administrator@gmail.com","ClaimType":"CanGetAllBranchesWithPagination","ClaimName":"CanGetAllBranchesWithPagination","ClaimValue":"CanGetAllBranchesWithPagination","$type":"AddToClaimCommand"}
2023-03-07 15:55:29.294 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-07 15:55:29.502 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.ClaimsController.AddToClaim (EDSystems.WebApi) in 315.6324ms
2023-03-07 15:55:29.503 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.ClaimsController.AddToClaim (EDSystems.WebApi)'
2023-03-07 15:55:29.503 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: User security stamp cannot be null.
   at Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.ValidateUserAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.AddClaimsAsync(TUser user, IEnumerable`1 claims)
   at EDSystems.Application.EDSystems.Commands.MyClaims.AddToClaim.AddToClaimCommandHandler.Handle(AddToClaimCommand request, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Application/MyClaims/Commands/AddToClaim/AddToClaimCommandHandler.cs:line 23
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.ClaimsController.AddToClaim(AddToClaimDto addToClaimDto) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Controllers/ClaimsController.cs:line 79
   at lambda_method897(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 15:55:29.529 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Claims/AddToClaim application/json-patch+json 191 - 500 - text/plain;+charset=utf-8 369.6638ms
2023-03-07 15:56:49.207 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 15:56:49.274 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 68.5330ms
2023-03-07 15:56:49.374 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 15:56:49.575 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 201.5967ms
2023-03-07 15:57:12.539 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 15:57:12.544 +05:00 [INF] CORS policy execution successful.
2023-03-07 15:57:12.545 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 15:57:12.546 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 15:57:12.551 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-07 15:57:12.636 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ClaimType", "a"."ClaimValue", "a"."UserId"
FROM "AspNetUserClaims" AS "a"
WHERE "a"."UserId" = @__user_Id_0
2023-03-07 15:57:12.637 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 15:57:12.638 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 13)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-07 15:57:12.639 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."ClaimType", "a"."ClaimValue"
FROM "AspNetRoleClaims" AS "a"
WHERE "a"."RoleId" = @__role_Id_0
2023-03-07 15:57:12.640 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 15:57:12.642 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"UIP1N8MRILRUHAD567OSFSGFOGFKO73EW1W6e3e6026-9cbf-48fe-95f8-e7afd540e79f","JwtId":"cae6ddea-a9b5-46bf-9ade-3777244f743f","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-07T10:57:12.6408500Z","ExpiryDateTime":"2023-09-07T10:57:12.6408510Z","$type":"RefreshTokenCommand"}
2023-03-07 15:57:12.645 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 36), @p5='?' (Size = 71), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-07 15:57:12.652 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-07 15:57:12.653 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 107.2828ms
2023-03-07 15:57:12.653 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 15:57:12.653 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 700 application/json;+charset=utf-8 114.7619ms
2023-03-07 15:57:36.767 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/1 - -
2023-03-07 15:57:36.818 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.Get (EDSystems.WebApi)'
2023-03-07 15:57:36.824 +05:00 [INF] Route matched with {action = "Get", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchDetails.BranchDetailsVm]] Get(Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 15:57:36.842 +05:00 [INF] NotesRequest: GetBranchDetailsQuery {"Id":1,"$type":"GetBranchDetailsQuery"}
2023-03-07 15:57:36.851 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Address", "b"."City", "b"."Code", "b"."Country", "b"."CreatedBy", "b"."DateCreated", "b"."DateUpdated", "b"."Email", "b"."ModifiedBy", "b"."Name", "b"."Phone"
FROM "Branch" AS "b"
WHERE "b"."Id" = @__request_Id_0
LIMIT 1
2023-03-07 15:57:36.885 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.EDSystems.Queries.Branches.GetBranchDetails.BranchDetailsVm'.
2023-03-07 15:57:36.889 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.Get (EDSystems.WebApi) in 64.9426ms
2023-03-07 15:57:36.889 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.Get (EDSystems.WebApi)'
2023-03-07 15:57:36.889 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/1 - - - 200 431 application/json;+charset=utf-8 124.7308ms
2023-03-07 15:57:46.351 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-07 15:57:46.352 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 15:57:46.359 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 15:57:46.377 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-07 15:57:46.452 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Branch" AS "b"
2023-03-07 15:57:46.462 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Name", "b"."Country", "b"."Code", "b"."City", "b"."Address", "b"."Email", "b"."Phone", "b"."DateCreated", "b"."DateUpdated"
FROM "Branch" AS "b"
ORDER BY "b"."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-07 15:57:46.463 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-07 15:57:46.476 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 116.7418ms
2023-03-07 15:57:46.476 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 15:57:46.476 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 200 892 application/json;+charset=utf-8 124.8457ms
2023-03-07 15:58:29.396 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Status?PageSize=1&PageNumber=2 - -
2023-03-07 15:58:29.402 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

EDSystems.WebApi.Controllers.StatusController.GetAllWithPagination (EDSystems.WebApi)
EDSystems.WebApi.Controllers.StatusController.GetAll (EDSystems.WebApi)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 15:58:29.403 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Status?PageSize=1&PageNumber=2 - - - 500 - text/plain;+charset=utf-8 6.2259ms
2023-03-07 15:58:58.961 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Status?PageSize=1&PageNumber=2 - -
2023-03-07 15:58:58.966 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

EDSystems.WebApi.Controllers.StatusController.GetAllWithPagination (EDSystems.WebApi)
EDSystems.WebApi.Controllers.StatusController.GetAll (EDSystems.WebApi)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 15:58:58.967 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Status?PageSize=1&PageNumber=2 - - - 500 - text/plain;+charset=utf-8 6.3876ms
2023-03-07 15:59:01.849 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 15:59:01.903 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 53.2392ms
2023-03-07 15:59:01.986 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 15:59:02.159 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 173.0959ms
2023-03-07 15:59:24.348 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Status?PageSize=1&PageNumber=2 - -
2023-03-07 15:59:24.353 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

EDSystems.WebApi.Controllers.StatusController.GetAllWithPagination (EDSystems.WebApi)
EDSystems.WebApi.Controllers.StatusController.GetAll (EDSystems.WebApi)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 15:59:24.354 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Status?PageSize=1&PageNumber=2 - - - 500 - text/plain;+charset=utf-8 5.6784ms
2023-03-07 15:59:55.909 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 15:59:56.156 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:59:56.158 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:59:56.158 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:59:56.158 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:59:56.158 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:59:56.158 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:59:56.158 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:59:56.158 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:59:56.158 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:59:56.384 +05:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-07 15:59:56.595 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 15:59:56.711 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:59:56.711 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:59:56.711 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:59:56.711 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:59:56.711 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:59:56.711 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:59:56.711 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:59:56.711 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:59:56.711 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 15:59:56.968 +05:00 [FTL] An error occured while app initialization
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 10: 'disk I/O error'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteNonQuery()
   at Microsoft.Data.Sqlite.SqliteConnectionExtensions.ExecuteNonQuery(SqliteConnection connection, String commandText, SqliteParameter[] parameters)
   at Microsoft.Data.Sqlite.SqliteTransaction..ctor(SqliteConnection connection, IsolationLevel isolationLevel, Boolean deferred)
   at Microsoft.Data.Sqlite.SqliteConnection.BeginTransaction(IsolationLevel isolationLevel, Boolean deferred)
   at Microsoft.Data.Sqlite.SqliteConnection.BeginTransaction(IsolationLevel isolationLevel)
   at Microsoft.Data.Sqlite.SqliteConnection.BeginDbTransaction(IsolationLevel isolationLevel)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.ConnectionBeginTransaction(IsolationLevel isolationLevel)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction(IsolationLevel isolationLevel)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction()
   at Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationCommandExecutor.ExecuteNonQuery(IEnumerable`1 migrationCommands, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTables()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreated()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureCreated()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Persistence/DbInitializer.cs:line 8
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Program.cs:line 54
2023-03-07 15:59:57.060 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 15:59:57.637 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 15:59:57.637 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 15:59:57.638 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 15:59:57.639 +05:00 [INF] Hosting environment: Development
2023-03-07 15:59:57.639 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 15:59:59.071 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 15:59:59.217 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 147.4942ms
2023-03-07 15:59:59.324 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 15:59:59.703 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 379.0090ms
2023-03-07 16:00:27.438 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Status?PageSize=1&PageNumber=2 - -
2023-03-07 16:00:27.507 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

EDSystems.WebApi.Controllers.StatusController.GetAllWithPagination (EDSystems.WebApi)
EDSystems.WebApi.Controllers.StatusController.GetAll (EDSystems.WebApi)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 16:00:27.514 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Status?PageSize=1&PageNumber=2 - - - 500 - text/plain;+charset=utf-8 75.2542ms
2023-03-07 16:00:56.429 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 16:00:56.442 +05:00 [INF] CORS policy execution successful.
2023-03-07 16:00:56.502 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:00:56.528 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 16:00:57.408 +05:00 [ERR] Failed executing DbCommand (2ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-07 16:00:57.421 +05:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EDSystems.Persistence.EDSystemsDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2023-03-07 16:00:57.511 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 978.9746ms
2023-03-07 16:00:57.512 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:00:57.513 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(String email)
   at EDSystems.WebApi.Controllers.AuthenticationController.Login(UserLoginDto request) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Controllers/AuthenticationController.cs:line 120
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 16:00:57.525 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 500 - text/plain;+charset=utf-8 1096.2703ms
2023-03-07 16:01:30.655 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 16:01:30.656 +05:00 [INF] CORS policy execution successful.
2023-03-07 16:01:30.666 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:01:30.667 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 16:01:30.733 +05:00 [ERR] Failed executing DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-07 16:01:30.734 +05:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EDSystems.Persistence.EDSystemsDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2023-03-07 16:01:30.769 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 101.9394ms
2023-03-07 16:01:30.769 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:01:30.770 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(String email)
   at EDSystems.WebApi.Controllers.AuthenticationController.Login(UserLoginDto request) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Controllers/AuthenticationController.cs:line 120
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 16:01:30.774 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 500 - text/plain;+charset=utf-8 119.6055ms
2023-03-07 16:01:49.201 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:01:49.430 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:01:49.431 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:01:49.431 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:01:49.431 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:01:49.431 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:01:49.431 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:01:49.431 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:01:49.431 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:01:49.431 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:01:49.672 +05:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-07 16:01:49.860 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:01:49.986 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:01:49.986 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:01:49.986 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:01:49.986 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:01:49.986 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:01:49.986 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:01:49.986 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:01:49.987 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:01:49.987 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:01:50.210 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-07 16:01:50.210 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:01:50.210 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:01:50.211 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-07 16:01:50.211 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:01:50.211 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:01:50.211 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" decimal(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:01:50.211 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-07 16:01:50.211 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:01:50.211 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:01:50.212 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-07 16:01:50.212 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 16:01:50.212 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:01:50.212 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:01:50.212 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:01:50.212 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:01:50.213 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:01:50.213 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:01:50.213 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:01:50.213 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:01:50.213 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-07 16:01:50.213 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-07 16:01:50.214 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-07 16:01:50.214 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:01:50.214 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:01:50.214 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:01:50.214 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:01:50.214 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:01:50.215 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:01:50.215 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 16:01:50.215 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-07 16:01:50.216 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, 'b80ace38-082d-4a4f-ae7b-2e532366fb48', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '24ba1ad8-91b2-46e0-8dba-13f01cf6b78b', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '48d636cd-515f-46cc-a4d7-cea7074dff1c', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '43226ca8-c090-4277-9809-57e51989d25d', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '2ff8468e-584e-4729-a29a-b07f85cb0b0f', 'Customer', 'CUSTOMER');
2023-03-07 16:01:50.216 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '117dd3ff-16d8-4dd5-8ace-5771c33dd972', '2023-03-07 16:01:49.858764', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEDjFCUzkCJLfKopz2AOqPq9vk7zEeEnugnM9o3lfvwctO0V9dbwnPAkm9DmNKkbZFQ==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '874e4dce-32c5-4caf-8cb5-d40fac56502a', '2023-03-07 16:01:49.858767', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEDjFCUzkCJLfKopz2AOqPq9vk7zEeEnugnM9o3lfvwctO0V9dbwnPAkm9DmNKkbZFQ==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '059716b2-df59-41bc-a372-a2937ee3371b', '2023-03-07 16:01:49.858767', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEDjFCUzkCJLfKopz2AOqPq9vk7zEeEnugnM9o3lfvwctO0V9dbwnPAkm9DmNKkbZFQ==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '8bca4eac-a7fa-47b4-9c3c-7e6c54474250', '2023-03-07 16:01:49.85877', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEDjFCUzkCJLfKopz2AOqPq9vk7zEeEnugnM9o3lfvwctO0V9dbwnPAkm9DmNKkbZFQ==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '9b3af0d4-ffe8-4b9f-80f5-5ec9842eaed3', '2023-03-07 16:01:49.858771', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEDjFCUzkCJLfKopz2AOqPq9vk7zEeEnugnM9o3lfvwctO0V9dbwnPAkm9DmNKkbZFQ==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-07 16:01:50.216 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-07 16:01:49.785003', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-07 16:01:49.785003', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-07 16:01:49.785003', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-07 16:01:49.785004', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-07 16:01:49.785004', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-07 16:01:49.785004', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-07 16:01:50.216 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-07 16:01:49.858793', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-07 16:01:49.858793', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-07 16:01:49.858793', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-07 16:01:49.858793', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-07 16:01:49.858794', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-07 16:01:49.858794', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-07 16:01:49.858794', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-07 16:01:49.858794', NULL, NULL, 'Сомони', 972);
2023-03-07 16:01:50.216 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 16:01:49.78502', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 16:01:49.785021', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 16:01:49.785021', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 16:01:49.785021', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 16:01:49.785021', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 16:01:49.785021', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-07 16:01:49.785021', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-07 16:01:49.785022', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-07 16:01:49.785022', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-07 16:01:49.785022', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-07 16:01:49.785022', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-07 16:01:49.785022', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-07 16:01:49.785023', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-07 16:01:50.216 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-07 16:01:49.858781', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-07 16:01:49.858781', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-07 16:01:49.858781', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-07 16:01:49.858782', NULL, 'Description', NULL, 'Авто');
2023-03-07 16:01:50.217 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 16:01:49.784993', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 16:01:49.784997', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 16:01:49.784997', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 16:01:49.784997', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 16:01:49.784998', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 16:01:49.784998', NULL, 'Выдан', NULL, 'Выдан');
2023-03-07 16:01:50.217 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-07 16:01:49.785007', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-07 16:01:49.785007', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-07 16:01:49.785008', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-07 16:01:49.785008', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-07 16:01:49.785008', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-07 16:01:49.785008', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-07 16:01:49.785008', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-07 16:01:49.785009', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-07 16:01:49.785009', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-07 16:01:49.785009', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-07 16:01:49.78501', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-07 16:01:49.78501', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-07 16:01:50.217 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 2);
2023-03-07 16:01:50.217 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-07 16:01:50.217 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-07 16:01:49.785012', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '30a8f9cc-8d37-4d93-ab2f-774428387e4a', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-07 16:01:49.785013', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-07 16:01:49.785013', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '5a6f1681-c582-46f5-905b-4eb2c222dcf5', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-07 16:01:49.785017', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '3b9d7f21-1d66-4c98-8648-64a68777bccb', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-07 16:01:49.785017', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '0a1e5c27-0b09-4f60-a9c3-8618791a8672', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-07 16:01:49.785018', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852', NULL);
2023-03-07 16:01:50.218 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-07 16:01:50.218 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-07 16:01:50.218 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-07 16:01:50.218 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-07 16:01:50.218 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-07 16:01:50.218 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-07 16:01:50.219 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-07 16:01:50.219 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-07 16:01:50.219 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-07 16:01:50.219 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-07 16:01:50.219 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-07 16:01:50.219 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-07 16:01:50.219 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-07 16:01:50.219 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-07 16:01:50.220 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-07 16:01:50.220 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-07 16:01:50.220 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-07 16:01:50.220 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-07 16:01:50.220 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-07 16:01:50.220 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-07 16:01:50.220 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-07 16:01:50.221 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-07 16:01:50.221 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-07 16:01:50.221 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-07 16:01:50.221 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-07 16:01:50.221 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-07 16:01:50.221 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-07 16:01:50.221 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-07 16:01:50.222 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-07 16:01:50.222 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-07 16:01:50.222 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-07 16:01:50.222 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-07 16:01:50.222 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-07 16:01:50.222 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-07 16:01:50.222 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-07 16:01:50.223 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-07 16:01:50.223 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-07 16:01:50.223 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-07 16:01:50.223 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-07 16:01:50.223 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-07 16:01:50.223 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-07 16:01:50.223 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-07 16:01:50.224 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-07 16:01:50.224 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-07 16:01:50.224 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-07 16:01:50.224 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-07 16:01:50.224 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-07 16:01:50.224 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-07 16:01:50.224 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-07 16:01:50.225 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-07 16:01:50.225 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-07 16:01:50.225 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-07 16:01:50.225 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-07 16:01:50.225 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-07 16:01:50.225 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-07 16:01:50.225 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-07 16:01:50.225 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-07 16:01:50.226 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-07 16:01:50.226 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-07 16:01:50.226 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-07 16:01:50.226 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-07 16:01:50.226 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-07 16:01:50.226 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-07 16:01:50.226 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-07 16:01:50.227 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-07 16:01:50.282 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 16:01:50.824 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 16:01:50.824 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 16:01:50.826 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 16:01:50.826 +05:00 [INF] Hosting environment: Development
2023-03-07 16:01:50.826 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 16:01:52.214 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 16:01:52.367 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 154.5924ms
2023-03-07 16:01:52.479 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 16:01:52.871 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 391.8324ms
2023-03-07 16:02:15.029 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 16:02:15.159 +05:00 [INF] CORS policy execution successful.
2023-03-07 16:02:15.216 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:02:15.238 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 16:02:16.183 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-07 16:02:16.437 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ClaimType", "a"."ClaimValue", "a"."UserId"
FROM "AspNetUserClaims" AS "a"
WHERE "a"."UserId" = @__user_Id_0
2023-03-07 16:02:16.469 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 16:02:16.477 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 13)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-07 16:02:16.493 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."ClaimType", "a"."ClaimValue"
FROM "AspNetRoleClaims" AS "a"
WHERE "a"."RoleId" = @__role_Id_0
2023-03-07 16:02:16.499 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 16:02:16.612 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"PJOIIX40IVH0XXNH5LE0ZMEEC74C5Z07EEK5630b84b-d639-44ff-9e0d-7454d2cd6504","JwtId":"54ba790a-69e9-4aa3-8fa8-da8b796afdc2","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-07T11:02:16.5916370Z","ExpiryDateTime":"2023-09-07T11:02:16.5916900Z","$type":"RefreshTokenCommand"}
2023-03-07 16:02:16.745 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 36), @p5='?' (Size = 71), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-07 16:02:16.815 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-07 16:02:16.841 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1595.5179ms
2023-03-07 16:02:16.842 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:02:16.850 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 550 application/json;+charset=utf-8 1821.4066ms
2023-03-07 16:02:43.225 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Status?PageSize=1&PageNumber=2 - -
2023-03-07 16:02:43.232 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

EDSystems.WebApi.Controllers.StatusController.GetAllWithPagination (EDSystems.WebApi)
EDSystems.WebApi.Controllers.StatusController.GetAll (EDSystems.WebApi)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 16:02:43.265 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Status?PageSize=1&PageNumber=2 - - - 500 - text/plain;+charset=utf-8 40.0123ms
2023-03-07 16:03:01.399 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Plan?PageNumber=1&PageSize=2 - -
2023-03-07 16:03:01.399 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

EDSystems.WebApi.Controllers.PlanController.GetAllWithPagination (EDSystems.WebApi)
EDSystems.WebApi.Controllers.PlanController.GetAll (EDSystems.WebApi)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 16:03:01.401 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Plan?PageNumber=1&PageSize=2 - - - 500 - text/plain;+charset=utf-8 1.8267ms
2023-03-07 16:03:16.229 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-07 16:03:16.308 +05:00 [INF] Authorization failed. These requirements were not met:
ClaimsAuthorizationRequirement:Claim.Type=CanGetAllBranchesWithPagination
2023-03-07 16:03:16.310 +05:00 [INF] AuthenticationScheme: Bearer was forbidden.
2023-03-07 16:03:16.311 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 403 0 - 81.8667ms
2023-03-07 16:04:52.615 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:04:52.911 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:04:52.913 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:04:52.913 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:04:52.913 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:04:52.913 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:04:52.913 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:04:52.913 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:04:52.913 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:04:52.913 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:04:53.181 +05:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-07 16:04:53.416 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:04:53.552 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:04:53.552 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:04:53.552 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:04:53.552 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:04:53.552 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:04:53.552 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:04:53.552 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:04:53.552 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:04:53.552 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:04:53.801 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-07 16:04:53.801 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:04:53.801 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:04:53.802 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-07 16:04:53.802 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:04:53.802 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:04:53.802 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" decimal(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:04:53.802 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-07 16:04:53.803 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:04:53.803 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:04:53.803 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-07 16:04:53.803 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 16:04:53.803 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:04:53.804 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:04:53.804 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:04:53.804 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:04:53.804 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:04:53.805 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:04:53.805 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:04:53.805 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:04:53.805 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-07 16:04:53.805 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-07 16:04:53.806 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-07 16:04:53.806 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:04:53.806 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:04:53.806 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:04:53.807 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:04:53.807 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:04:53.807 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:04:53.807 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 16:04:53.808 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-07 16:04:53.808 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '273ad4bb-b0ed-40fd-bae9-5f090f72a00a', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '2217bb3e-3758-4fbc-8ec6-dd5e21661b25', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, 'de57e0fc-7f1d-4cee-8c60-7c1f95784f40', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '266dfbd9-b959-418a-acbc-74da0de36dc2', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '634243e0-c9d1-4f9a-8aba-1c34537a6d7d', 'Customer', 'CUSTOMER');
2023-03-07 16:04:53.809 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'f9decbd0-b4ee-41bd-9e7a-701338c3956f', '2023-03-07 16:04:53.411469', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEBN3qKBxJzA+kpmorrHZ8GeDx91W1OFJhRTYLq8yH/Yo4twvWG7Um1znL913VvKjTA==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'c319ed33-a3fd-4227-b5cd-3002159cf228', '2023-03-07 16:04:53.411474', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEBN3qKBxJzA+kpmorrHZ8GeDx91W1OFJhRTYLq8yH/Yo4twvWG7Um1znL913VvKjTA==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'd6d45c6c-4428-4fe9-87c6-0bb89797634a', '2023-03-07 16:04:53.411475', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEBN3qKBxJzA+kpmorrHZ8GeDx91W1OFJhRTYLq8yH/Yo4twvWG7Um1znL913VvKjTA==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '325bf81a-ddf8-466e-a902-95f47a9c6f55', '2023-03-07 16:04:53.411499', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEBN3qKBxJzA+kpmorrHZ8GeDx91W1OFJhRTYLq8yH/Yo4twvWG7Um1znL913VvKjTA==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'b9225cf2-f8a1-4c3e-8ea7-40d440df3bc1', '2023-03-07 16:04:53.4115', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEBN3qKBxJzA+kpmorrHZ8GeDx91W1OFJhRTYLq8yH/Yo4twvWG7Um1znL913VvKjTA==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-07 16:04:53.809 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-07 16:04:53.319982', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-07 16:04:53.319983', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-07 16:04:53.319983', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-07 16:04:53.319984', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-07 16:04:53.320003', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-07 16:04:53.320003', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-07 16:04:53.809 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-07 16:04:53.411555', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-07 16:04:53.411555', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-07 16:04:53.411555', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-07 16:04:53.411556', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-07 16:04:53.411556', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-07 16:04:53.411556', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-07 16:04:53.411558', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-07 16:04:53.411558', NULL, NULL, 'Сомони', 972);
2023-03-07 16:04:53.810 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 16:04:53.32004', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 16:04:53.320041', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 16:04:53.320041', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 16:04:53.320041', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 16:04:53.320041', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 16:04:53.320042', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-07 16:04:53.320042', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-07 16:04:53.320042', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-07 16:04:53.320042', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-07 16:04:53.320042', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-07 16:04:53.320043', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-07 16:04:53.320043', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-07 16:04:53.320043', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-07 16:04:53.810 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-07 16:04:53.411546', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-07 16:04:53.411548', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-07 16:04:53.411548', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-07 16:04:53.411548', NULL, 'Description', NULL, 'Авто');
2023-03-07 16:04:53.810 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 16:04:53.319958', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 16:04:53.319975', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 16:04:53.319976', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 16:04:53.319976', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 16:04:53.319976', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 16:04:53.319976', NULL, 'Выдан', NULL, 'Выдан');
2023-03-07 16:04:53.811 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-07 16:04:53.320007', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-07 16:04:53.320007', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-07 16:04:53.320007', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-07 16:04:53.320008', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-07 16:04:53.320008', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-07 16:04:53.320008', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-07 16:04:53.320008', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-07 16:04:53.320018', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-07 16:04:53.320018', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-07 16:04:53.320018', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-07 16:04:53.320019', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-07 16:04:53.320019', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-07 16:04:53.811 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 2);
2023-03-07 16:04:53.811 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-07 16:04:53.811 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-07 16:04:53.320036', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '30a8f9cc-8d37-4d93-ab2f-774428387e4a', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-07 16:04:53.320037', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-07 16:04:53.320037', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '5a6f1681-c582-46f5-905b-4eb2c222dcf5', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-07 16:04:53.320037', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '3b9d7f21-1d66-4c98-8648-64a68777bccb', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-07 16:04:53.320037', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '0a1e5c27-0b09-4f60-a9c3-8618791a8672', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-07 16:04:53.320038', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852', NULL);
2023-03-07 16:04:53.811 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-07 16:04:53.812 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-07 16:04:53.812 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-07 16:04:53.812 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-07 16:04:53.812 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-07 16:04:53.812 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-07 16:04:53.813 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-07 16:04:53.813 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-07 16:04:53.813 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-07 16:04:53.813 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-07 16:04:53.813 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-07 16:04:53.813 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-07 16:04:53.814 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-07 16:04:53.814 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-07 16:04:53.814 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-07 16:04:53.814 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-07 16:04:53.814 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-07 16:04:53.814 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-07 16:04:53.815 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-07 16:04:53.815 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-07 16:04:53.815 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-07 16:04:53.815 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-07 16:04:53.815 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-07 16:04:53.816 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-07 16:04:53.816 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-07 16:04:53.816 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-07 16:04:53.816 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-07 16:04:53.816 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-07 16:04:53.817 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-07 16:04:53.817 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-07 16:04:53.817 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-07 16:04:53.817 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-07 16:04:53.817 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-07 16:04:53.817 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-07 16:04:53.818 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-07 16:04:53.818 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-07 16:04:53.818 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-07 16:04:53.818 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-07 16:04:53.818 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-07 16:04:53.819 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-07 16:04:53.819 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-07 16:04:53.819 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-07 16:04:53.819 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-07 16:04:53.819 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-07 16:04:53.820 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-07 16:04:53.820 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-07 16:04:53.820 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-07 16:04:53.820 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-07 16:04:53.820 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-07 16:04:53.821 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-07 16:04:53.821 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-07 16:04:53.821 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-07 16:04:53.821 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-07 16:04:53.821 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-07 16:04:53.822 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-07 16:04:53.822 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-07 16:04:53.822 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-07 16:04:53.822 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-07 16:04:53.822 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-07 16:04:53.823 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-07 16:04:53.823 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-07 16:04:53.823 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-07 16:04:53.823 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-07 16:04:53.824 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-07 16:04:53.824 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-07 16:04:53.890 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 16:04:54.579 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 16:04:54.579 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 16:04:54.581 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 16:04:54.581 +05:00 [INF] Hosting environment: Development
2023-03-07 16:04:54.581 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 16:04:55.770 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 16:04:55.920 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 151.3884ms
2023-03-07 16:04:56.031 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 16:04:56.410 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 378.8932ms
2023-03-07 16:05:36.704 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 16:05:36.772 +05:00 [INF] CORS policy execution successful.
2023-03-07 16:05:36.840 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:05:36.867 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 16:05:37.806 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-07 16:05:38.082 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ClaimType", "a"."ClaimValue", "a"."UserId"
FROM "AspNetUserClaims" AS "a"
WHERE "a"."UserId" = @__user_Id_0
2023-03-07 16:05:38.137 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 16:05:38.146 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 13)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-07 16:05:38.169 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."ClaimType", "a"."ClaimValue"
FROM "AspNetRoleClaims" AS "a"
WHERE "a"."RoleId" = @__role_Id_0
2023-03-07 16:05:38.174 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 16:05:38.303 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"5UM710E2U0G9JLW6FF1MLBSXGM2VN3DSKC3b92b33cb-0b78-4b42-8f94-593b793a30d7","JwtId":"8a0b9a72-bd59-4311-84b7-f126fe693ad2","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-07T11:05:38.2821070Z","ExpiryDateTime":"2023-09-07T11:05:38.2821640Z","$type":"RefreshTokenCommand"}
2023-03-07 16:05:38.435 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 36), @p5='?' (Size = 71), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-07 16:05:38.500 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-07 16:05:38.526 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1655.0743ms
2023-03-07 16:05:38.527 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:05:38.533 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 550 application/json;+charset=utf-8 1828.9320ms
2023-03-07 16:06:04.809 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-07 16:06:04.882 +05:00 [INF] Authorization failed. These requirements were not met:
ClaimsAuthorizationRequirement:Claim.Type=CanGetAllBranchesWithPagination
2023-03-07 16:06:04.884 +05:00 [INF] AuthenticationScheme: Bearer was forbidden.
2023-03-07 16:06:04.884 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 403 0 - 75.3443ms
2023-03-07 16:17:13.208 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:17:13.486 +05:00 [FTL] An error occured while app initialization
System.InvalidOperationException: The seed entity for entity type 'UserClaim' cannot be added because a non-zero value is required for property 'Id'. Consider providing a negative value to avoid collisions with non-seed data.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Program.cs:line 54
2023-03-07 16:17:13.576 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 16:17:14.089 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 16:17:14.090 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 16:17:14.092 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 16:17:14.092 +05:00 [INF] Hosting environment: Development
2023-03-07 16:17:14.092 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 16:17:15.494 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 16:17:15.684 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 192.6978ms
2023-03-07 16:17:15.794 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 16:17:16.183 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 388.9441ms
2023-03-07 16:18:17.961 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 16:18:18.034 +05:00 [INF] CORS policy execution successful.
2023-03-07 16:18:18.095 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:18:18.120 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 16:18:18.937 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:18:19.122 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 998.6873ms
2023-03-07 16:18:19.124 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:18:19.125 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The seed entity for entity type 'UserClaim' cannot be added because a non-zero value is required for property 'Id'. Consider providing a negative value to avoid collisions with non-seed data.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.Set[TEntity]()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.get_UsersSet()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.get_Users()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByEmailAsync(String normalizedEmail, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(String email)
   at EDSystems.WebApi.Controllers.AuthenticationController.Login(UserLoginDto request) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Controllers/AuthenticationController.cs:line 120
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 16:18:19.138 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 500 - text/plain;+charset=utf-8 1181.1864ms
2023-03-07 16:20:14.697 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:20:14.962 +05:00 [FTL] An error occured while app initialization
System.InvalidOperationException: The seed entity for entity type 'UserClaim' cannot be added because another seed entity with the same key value for {'Id'} has already been added. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Program.cs:line 54
2023-03-07 16:20:15.043 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 16:20:15.554 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 16:20:15.554 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 16:20:15.556 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 16:20:15.557 +05:00 [INF] Hosting environment: Development
2023-03-07 16:20:15.557 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 16:20:16.886 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 16:20:17.041 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 155.9756ms
2023-03-07 16:20:17.147 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 16:20:17.522 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 374.6024ms
2023-03-07 16:20:32.962 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 16:20:33.017 +05:00 [INF] CORS policy execution successful.
2023-03-07 16:20:33.077 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:20:33.097 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 16:20:33.937 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:20:34.134 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1033.0935ms
2023-03-07 16:20:34.136 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:20:34.137 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The seed entity for entity type 'UserClaim' cannot be added because another seed entity with the same key value for {'Id'} has already been added. Consider using 'DbContextOptionsBuilder.EnableSensitiveDataLogging' to see the conflicting key values.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.Set[TEntity]()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.get_UsersSet()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.get_Users()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByEmailAsync(String normalizedEmail, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(String email)
   at EDSystems.WebApi.Controllers.AuthenticationController.Login(UserLoginDto request) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Controllers/AuthenticationController.cs:line 120
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 16:20:34.151 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 500 - text/plain;+charset=utf-8 1188.2310ms
2023-03-07 16:21:24.796 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:21:25.061 +05:00 [FTL] An error occured while app initialization
System.InvalidOperationException: The seed entity for entity type 'UserClaim' cannot be added because a non-zero value is required for property 'Id'. Consider providing a negative value to avoid collisions with non-seed data.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Program.cs:line 54
2023-03-07 16:21:25.144 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 16:21:25.648 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 16:21:25.648 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 16:21:25.649 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 16:21:25.650 +05:00 [INF] Hosting environment: Development
2023-03-07 16:21:25.650 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 16:21:26.903 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 16:21:27.048 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 146.2455ms
2023-03-07 16:21:27.157 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 16:21:27.548 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 391.3747ms
2023-03-07 16:21:45.628 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 16:21:45.712 +05:00 [INF] CORS policy execution successful.
2023-03-07 16:21:45.773 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:21:45.796 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 16:21:46.616 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:21:46.826 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1025.3402ms
2023-03-07 16:21:46.828 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:21:46.829 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The seed entity for entity type 'UserClaim' cannot be added because a non-zero value is required for property 'Id'. Consider providing a negative value to avoid collisions with non-seed data.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.Set[TEntity]()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.get_UsersSet()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.get_Users()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByEmailAsync(String normalizedEmail, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(String email)
   at EDSystems.WebApi.Controllers.AuthenticationController.Login(UserLoginDto request) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Controllers/AuthenticationController.cs:line 120
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 16:21:46.842 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 500 - text/plain;+charset=utf-8 1214.3580ms
2023-03-07 16:22:17.417 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:22:17.641 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:22:17.642 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:22:17.642 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:22:17.642 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:22:17.642 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:22:17.642 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:22:17.642 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:22:17.642 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:22:17.642 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:22:17.868 +05:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-07 16:22:18.064 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:22:18.166 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:22:18.166 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:22:18.166 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:22:18.166 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:22:18.166 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:22:18.166 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:22:18.166 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:22:18.166 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:22:18.166 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:22:18.380 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-07 16:22:18.381 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:22:18.381 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:22:18.381 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-07 16:22:18.381 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:22:18.381 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:22:18.381 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" decimal(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:22:18.382 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-07 16:22:18.382 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:22:18.382 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:22:18.382 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-07 16:22:18.382 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 16:22:18.382 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:22:18.382 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:22:18.383 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:22:18.383 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:22:18.383 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:22:18.383 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:22:18.383 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:22:18.384 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:22:18.384 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-07 16:22:18.384 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-07 16:22:18.384 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-07 16:22:18.384 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:22:18.384 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:22:18.385 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:22:18.385 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:22:18.385 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:22:18.385 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:22:18.385 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 16:22:18.385 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-07 16:22:18.386 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '04eb0aeb-cd0a-48fc-a786-aade6cd961ce', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, 'a9caba90-310f-480c-a7f0-f0ced6970bda', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '47d575d8-3147-4030-8921-1b87c856926c', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '7d0c1529-b62a-4cb5-af8b-1ab9662469e5', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '5108037d-ce12-4e4a-8faa-7e2c80cdea64', 'Customer', 'CUSTOMER');
2023-03-07 16:22:18.386 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '0fdfb031-a001-4133-8b3c-54f3754344c8', '2023-03-07 16:22:18.061136', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAELanDtS/lezoknCHgmJhIefpqitHTN/pajKsBYdt1w9XJfPxM7O45x9FXSccVpsCCw==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '5b330260-a806-45c0-883b-e36cebc30587', '2023-03-07 16:22:18.061141', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAELanDtS/lezoknCHgmJhIefpqitHTN/pajKsBYdt1w9XJfPxM7O45x9FXSccVpsCCw==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '93f26a2b-1667-402b-8eda-c5c19bd573d9', '2023-03-07 16:22:18.061142', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAELanDtS/lezoknCHgmJhIefpqitHTN/pajKsBYdt1w9XJfPxM7O45x9FXSccVpsCCw==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'b2511cbf-d624-400e-a311-c493819c62f8', '2023-03-07 16:22:18.061152', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAELanDtS/lezoknCHgmJhIefpqitHTN/pajKsBYdt1w9XJfPxM7O45x9FXSccVpsCCw==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '5dc7417f-8220-41e1-b1f5-23416a8bf3d0', '2023-03-07 16:22:18.061153', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAELanDtS/lezoknCHgmJhIefpqitHTN/pajKsBYdt1w9XJfPxM7O45x9FXSccVpsCCw==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-07 16:22:18.387 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-07 16:22:17.985942', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-07 16:22:17.985943', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-07 16:22:17.985943', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-07 16:22:17.985943', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-07 16:22:17.985944', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-07 16:22:17.985944', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-07 16:22:18.387 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-07 16:22:18.061203', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-07 16:22:18.061204', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-07 16:22:18.061204', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-07 16:22:18.061204', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-07 16:22:18.061205', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-07 16:22:18.061205', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-07 16:22:18.061206', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-07 16:22:18.061206', NULL, NULL, 'Сомони', 972);
2023-03-07 16:22:18.387 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 16:22:17.985961', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 16:22:17.985961', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 16:22:17.985962', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 16:22:17.985962', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 16:22:17.985962', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 16:22:17.985962', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-07 16:22:17.985962', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-07 16:22:17.985963', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-07 16:22:17.985963', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-07 16:22:17.985963', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-07 16:22:17.985963', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-07 16:22:17.985963', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-07 16:22:17.985964', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-07 16:22:18.387 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-07 16:22:18.061196', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-07 16:22:18.061197', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-07 16:22:18.061198', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-07 16:22:18.061198', NULL, 'Description', NULL, 'Авто');
2023-03-07 16:22:18.387 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 16:22:17.985933', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 16:22:17.985937', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 16:22:17.985937', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 16:22:17.985937', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 16:22:17.985937', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 16:22:17.985937', NULL, 'Выдан', NULL, 'Выдан');
2023-03-07 16:22:18.388 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-07 16:22:17.985951', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-07 16:22:17.985951', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-07 16:22:17.985952', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-07 16:22:17.985952', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-07 16:22:17.985952', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-07 16:22:17.985952', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-07 16:22:17.985953', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-07 16:22:17.985953', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-07 16:22:17.985953', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-07 16:22:17.985954', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-07 16:22:17.985954', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-07 16:22:17.985954', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-07 16:22:18.388 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 2);
2023-03-07 16:22:18.388 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-07 16:22:18.388 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-07 16:22:17.985957', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-07 16:22:17.985957', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-07 16:22:17.985958', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-07 16:22:17.985958', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-07 16:22:17.985958', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-07 16:22:17.985958', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-07 16:22:18.388 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-07 16:22:18.389 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-07 16:22:18.389 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-07 16:22:18.389 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-07 16:22:18.389 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-07 16:22:18.389 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-07 16:22:18.389 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-07 16:22:18.389 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-07 16:22:18.390 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-07 16:22:18.390 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-07 16:22:18.390 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-07 16:22:18.390 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-07 16:22:18.390 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-07 16:22:18.390 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-07 16:22:18.390 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-07 16:22:18.391 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-07 16:22:18.391 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-07 16:22:18.391 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-07 16:22:18.391 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-07 16:22:18.391 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-07 16:22:18.391 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-07 16:22:18.391 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-07 16:22:18.391 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-07 16:22:18.392 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-07 16:22:18.392 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-07 16:22:18.392 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-07 16:22:18.392 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-07 16:22:18.392 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-07 16:22:18.392 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-07 16:22:18.392 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-07 16:22:18.393 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-07 16:22:18.393 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-07 16:22:18.393 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-07 16:22:18.393 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-07 16:22:18.393 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-07 16:22:18.393 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-07 16:22:18.393 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-07 16:22:18.393 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-07 16:22:18.394 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-07 16:22:18.394 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-07 16:22:18.394 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-07 16:22:18.394 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-07 16:22:18.394 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-07 16:22:18.394 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-07 16:22:18.394 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-07 16:22:18.395 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-07 16:22:18.395 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-07 16:22:18.395 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-07 16:22:18.395 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-07 16:22:18.395 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-07 16:22:18.395 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-07 16:22:18.396 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-07 16:22:18.396 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-07 16:22:18.396 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-07 16:22:18.396 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-07 16:22:18.396 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-07 16:22:18.396 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-07 16:22:18.396 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-07 16:22:18.397 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-07 16:22:18.397 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-07 16:22:18.397 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-07 16:22:18.397 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-07 16:22:18.397 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-07 16:22:18.397 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-07 16:22:18.397 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-07 16:22:18.460 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 16:22:19.051 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 16:22:19.051 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 16:22:19.053 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 16:22:19.053 +05:00 [INF] Hosting environment: Development
2023-03-07 16:22:19.053 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 16:22:20.609 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 16:22:20.752 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 144.7833ms
2023-03-07 16:22:20.858 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 16:22:21.232 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 373.8815ms
2023-03-07 16:22:34.712 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 16:22:34.763 +05:00 [INF] CORS policy execution successful.
2023-03-07 16:22:34.829 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:22:34.854 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 16:22:35.751 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-07 16:22:35.993 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ClaimType", "a"."ClaimValue", "a"."UserId"
FROM "AspNetUserClaims" AS "a"
WHERE "a"."UserId" = @__user_Id_0
2023-03-07 16:22:36.023 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 16:22:36.029 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 13)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-07 16:22:36.046 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."ClaimType", "a"."ClaimValue"
FROM "AspNetRoleClaims" AS "a"
WHERE "a"."RoleId" = @__role_Id_0
2023-03-07 16:22:36.050 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 16:22:36.164 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"AUZ2Y98BPOPA8Z5URV24AG5Z5FM5E3UNV1Sadfbe2e0-2728-4c01-b3c6-e0bd9387b88f","JwtId":"55d79d47-d72c-49b1-b970-63d673c93225","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-07T11:22:36.1439280Z","ExpiryDateTime":"2023-09-07T11:22:36.1439990Z","$type":"RefreshTokenCommand"}
2023-03-07 16:22:36.290 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 36), @p5='?' (Size = 71), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-07 16:22:36.349 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-07 16:22:36.374 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1516.455ms
2023-03-07 16:22:36.375 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:22:36.380 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 550 application/json;+charset=utf-8 1668.0205ms
2023-03-07 16:25:09.401 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:25:09.691 +05:00 [FTL] An error occured while app initialization
System.InvalidOperationException: The seed entity for entity type 'UserClaim' cannot be added because a non-zero value is required for property 'Id'. Consider providing a negative value to avoid collisions with non-seed data.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Program.cs:line 54
2023-03-07 16:25:09.779 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 16:25:10.348 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 16:25:10.348 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 16:25:10.350 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 16:25:10.350 +05:00 [INF] Hosting environment: Development
2023-03-07 16:25:10.350 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 16:25:11.716 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 16:25:11.869 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 153.0455ms
2023-03-07 16:25:11.983 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 16:25:12.376 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 392.8807ms
2023-03-07 16:25:24.710 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:25:25.004 +05:00 [FTL] An error occured while app initialization
System.InvalidOperationException: The seed entity for entity type 'UserClaim' cannot be added because a non-zero value is required for property 'Id'. Consider providing a negative value to avoid collisions with non-seed data.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSiteMain(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure<System.IServiceProvider>.get_Instance()
   at Microsoft.EntityFrameworkCore.Infrastructure.Internal.InfrastructureExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService[TService](IInfrastructure`1 accessor)
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.get_Dependencies()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Program.cs:line 54
2023-03-07 16:25:25.085 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 16:25:25.602 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 16:25:25.602 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 16:25:25.604 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 16:25:25.604 +05:00 [INF] Hosting environment: Development
2023-03-07 16:25:25.604 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 16:25:27.008 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 16:25:27.167 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 154.0988ms
2023-03-07 16:25:27.272 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 16:25:27.649 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 377.0852ms
2023-03-07 16:25:36.696 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 16:25:36.752 +05:00 [INF] CORS policy execution successful.
2023-03-07 16:25:36.815 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:25:36.840 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 16:25:37.660 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:25:37.854 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1009.6641ms
2023-03-07 16:25:37.856 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:25:37.857 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: The seed entity for entity type 'UserClaim' cannot be added because a non-zero value is required for property 'Id'. Consider providing a negative value to avoid collisions with non-seed data.
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.ValidateData(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.RelationalModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Sqlite.Infrastructure.Internal.SqliteModelValidator.Validate(IModel model, IDiagnosticsLogger`1 logger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelRuntimeInitializer.Initialize(IModel model, Boolean designTime, IDiagnosticsLogger`1 validationLogger)
   at Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(DbContext context, ModelCreationDependencies modelCreationDependencies, Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.CreateModel(Boolean designTime)
   at Microsoft.EntityFrameworkCore.Internal.DbContextServices.get_Model()
   at Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.<>c.<TryAddCoreServices>b__8_4(IServiceProvider p)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitFactory(FactoryCallSite factoryCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.get_ContextServices()
   at Microsoft.EntityFrameworkCore.DbContext.get_InternalServiceProvider()
   at Microsoft.EntityFrameworkCore.DbContext.get_DbContextDependencies()
   at Microsoft.EntityFrameworkCore.DbContext.Set[TEntity]()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.get_UsersSet()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.get_Users()
   at Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByEmailAsync(String normalizedEmail, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(String email)
   at EDSystems.WebApi.Controllers.AuthenticationController.Login(UserLoginDto request) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Controllers/AuthenticationController.cs:line 120
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 16:25:37.870 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 500 - text/plain;+charset=utf-8 1174.0408ms
2023-03-07 16:26:05.576 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:26:05.835 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:26:05.837 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:26:05.837 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:26:05.837 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:26:05.837 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:26:05.837 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:26:05.837 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:26:05.837 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:26:05.837 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:26:06.064 +05:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-07 16:26:06.259 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:26:06.360 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:26:06.360 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:26:06.360 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:26:06.360 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:26:06.360 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:26:06.361 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:26:06.361 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:26:06.361 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:26:06.361 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:26:06.575 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-07 16:26:06.575 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:26:06.576 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:26:06.576 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-07 16:26:06.576 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:26:06.576 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:26:06.576 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" decimal(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:26:06.576 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-07 16:26:06.576 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:26:06.577 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:26:06.577 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-07 16:26:06.577 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 16:26:06.577 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:26:06.577 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:26:06.577 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:26:06.578 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:26:06.578 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:26:06.578 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:26:06.578 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:26:06.578 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:26:06.578 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-07 16:26:06.579 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-07 16:26:06.579 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-07 16:26:06.579 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:26:06.579 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:26:06.579 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:26:06.579 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:26:06.580 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:26:06.580 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:26:06.580 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 16:26:06.580 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-07 16:26:06.581 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '88f00a55-5c9a-4e9c-ab5c-d52791fabca8', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, 'ba555506-e8f8-43b3-9f36-2a339b3b5368', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, 'a2d7176f-2836-449b-ae28-0f1283302790', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, 'fe40a3b7-5934-46fc-9522-9fb5d56e3609', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '48b8120a-6c8c-4339-b215-dc3832116291', 'Customer', 'CUSTOMER');
2023-03-07 16:26:06.581 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '8868bf56-888d-4dc7-b07a-ee3030ed3868', '2023-03-07 16:26:06.254271', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEOBNUZyav8SNI4LLYFO5wVeY+RSQYOR/80+4zdrzI3K6PlR7VbR6/pLzEhpk2FbsgQ==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'efe7dd1c-cdc5-46c3-bfa0-a13863e073aa', '2023-03-07 16:26:06.254276', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEOBNUZyav8SNI4LLYFO5wVeY+RSQYOR/80+4zdrzI3K6PlR7VbR6/pLzEhpk2FbsgQ==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '7076c06f-95ec-4384-b6bd-092f81bfb184', '2023-03-07 16:26:06.254277', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEOBNUZyav8SNI4LLYFO5wVeY+RSQYOR/80+4zdrzI3K6PlR7VbR6/pLzEhpk2FbsgQ==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'ebb7b2f6-da2f-4974-aef1-88d393505dc9', '2023-03-07 16:26:06.254286', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEOBNUZyav8SNI4LLYFO5wVeY+RSQYOR/80+4zdrzI3K6PlR7VbR6/pLzEhpk2FbsgQ==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '9eae3195-376c-489a-84a5-21158bfbce8e', '2023-03-07 16:26:06.254287', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEOBNUZyav8SNI4LLYFO5wVeY+RSQYOR/80+4zdrzI3K6PlR7VbR6/pLzEhpk2FbsgQ==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-07 16:26:06.581 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-07 16:26:06.179416', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-07 16:26:06.179417', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-07 16:26:06.179418', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-07 16:26:06.179418', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-07 16:26:06.179418', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-07 16:26:06.179418', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-07 16:26:06.581 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-07 16:26:06.254396', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-07 16:26:06.254397', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-07 16:26:06.254397', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-07 16:26:06.254397', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-07 16:26:06.254398', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-07 16:26:06.254398', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-07 16:26:06.2544', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-07 16:26:06.2544', NULL, NULL, 'Сомони', 972);
2023-03-07 16:26:06.582 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 16:26:06.179435', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 16:26:06.179436', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 16:26:06.179436', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 16:26:06.179436', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 16:26:06.179436', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 16:26:06.179437', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-07 16:26:06.179437', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-07 16:26:06.179437', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-07 16:26:06.179437', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-07 16:26:06.179438', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-07 16:26:06.179438', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-07 16:26:06.179438', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-07 16:26:06.179438', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-07 16:26:06.582 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-07 16:26:06.254388', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-07 16:26:06.25439', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-07 16:26:06.25439', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-07 16:26:06.25439', NULL, 'Description', NULL, 'Авто');
2023-03-07 16:26:06.582 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 16:26:06.179407', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 16:26:06.17941', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 16:26:06.179411', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 16:26:06.179411', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 16:26:06.179411', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 16:26:06.179411', NULL, 'Выдан', NULL, 'Выдан');
2023-03-07 16:26:06.582 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-07 16:26:06.179421', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-07 16:26:06.179422', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-07 16:26:06.179422', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-07 16:26:06.179422', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-07 16:26:06.179423', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-07 16:26:06.179423', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-07 16:26:06.179423', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-07 16:26:06.179424', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-07 16:26:06.179424', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-07 16:26:06.179424', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-07 16:26:06.179424', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-07 16:26:06.179425', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-07 16:26:06.583 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-07 16:26:06.583 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-07 16:26:06.583 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-07 16:26:06.179431', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-07 16:26:06.179432', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-07 16:26:06.179432', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-07 16:26:06.179433', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-07 16:26:06.179433', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-07 16:26:06.179433', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-07 16:26:06.584 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-07 16:26:06.584 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-07 16:26:06.584 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-07 16:26:06.584 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-07 16:26:06.584 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-07 16:26:06.584 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-07 16:26:06.584 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-07 16:26:06.585 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-07 16:26:06.585 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-07 16:26:06.585 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-07 16:26:06.585 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-07 16:26:06.585 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-07 16:26:06.585 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-07 16:26:06.585 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-07 16:26:06.585 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-07 16:26:06.586 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-07 16:26:06.586 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-07 16:26:06.586 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-07 16:26:06.586 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-07 16:26:06.586 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-07 16:26:06.586 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-07 16:26:06.586 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-07 16:26:06.587 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-07 16:26:06.587 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-07 16:26:06.587 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-07 16:26:06.587 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-07 16:26:06.587 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-07 16:26:06.587 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-07 16:26:06.587 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-07 16:26:06.587 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-07 16:26:06.588 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-07 16:26:06.588 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-07 16:26:06.588 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-07 16:26:06.588 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-07 16:26:06.588 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-07 16:26:06.588 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-07 16:26:06.588 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-07 16:26:06.588 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-07 16:26:06.589 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-07 16:26:06.589 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-07 16:26:06.589 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-07 16:26:06.589 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-07 16:26:06.589 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-07 16:26:06.589 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-07 16:26:06.589 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-07 16:26:06.590 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-07 16:26:06.590 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-07 16:26:06.590 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-07 16:26:06.590 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-07 16:26:06.590 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-07 16:26:06.590 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-07 16:26:06.590 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-07 16:26:06.591 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-07 16:26:06.591 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-07 16:26:06.591 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-07 16:26:06.591 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-07 16:26:06.591 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-07 16:26:06.591 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-07 16:26:06.591 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-07 16:26:06.591 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-07 16:26:06.592 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-07 16:26:06.592 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-07 16:26:06.592 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-07 16:26:06.592 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-07 16:26:06.592 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-07 16:26:06.654 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 16:26:07.249 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 16:26:07.249 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 16:26:07.251 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 16:26:07.251 +05:00 [INF] Hosting environment: Development
2023-03-07 16:26:07.251 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 16:26:08.874 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 16:26:09.017 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 144.3432ms
2023-03-07 16:26:09.124 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 16:26:09.489 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 365.1151ms
2023-03-07 16:26:20.778 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 16:26:20.849 +05:00 [INF] CORS policy execution successful.
2023-03-07 16:26:20.916 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:26:20.941 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 16:26:21.838 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-07 16:26:22.083 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ClaimType", "a"."ClaimValue", "a"."UserId"
FROM "AspNetUserClaims" AS "a"
WHERE "a"."UserId" = @__user_Id_0
2023-03-07 16:26:22.115 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 16:26:22.121 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 13)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-07 16:26:22.137 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."ClaimType", "a"."ClaimValue"
FROM "AspNetRoleClaims" AS "a"
WHERE "a"."RoleId" = @__role_Id_0
2023-03-07 16:26:22.141 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 16:26:22.256 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"IHGXMZ6Y6LC7EAYIQ9G3VILSL03W5CBFAY0064f96bd-eacd-46ce-b39e-1843e7d1bb07","JwtId":"f4fc328e-d83a-4a14-9043-293fb51511e8","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-07T11:26:22.2357160Z","ExpiryDateTime":"2023-09-07T11:26:22.2358380Z","$type":"RefreshTokenCommand"}
2023-03-07 16:26:22.378 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 36), @p5='?' (Size = 71), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-07 16:26:22.439 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-07 16:26:22.464 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1519.2354ms
2023-03-07 16:26:22.465 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:26:22.472 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 2412 application/json;+charset=utf-8 1694.1751ms
2023-03-07 16:26:41.541 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Account?PageNumber=1&PageSize=2 - -
2023-03-07 16:26:41.547 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

EDSystems.WebApi.Controllers.AccountController.GetAll (EDSystems.WebApi)
EDSystems.WebApi.Controllers.AccountController.GetAllWithPagination (EDSystems.WebApi)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 16:26:41.597 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Account?PageNumber=1&PageSize=2 - - - 500 - text/plain;+charset=utf-8 56.0081ms
2023-03-07 16:27:27.490 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:27:27.762 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:27:27.763 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:27:27.764 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:27:27.764 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:27:27.764 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:27:27.764 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:27:27.764 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:27:27.764 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:27:27.764 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:27:28.027 +05:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-07 16:27:28.233 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:27:28.347 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:27:28.347 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:27:28.347 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:27:28.347 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:27:28.347 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:27:28.347 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:27:28.347 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:27:28.347 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:27:28.347 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:27:28.568 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-07 16:27:28.569 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:27:28.569 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:27:28.569 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-07 16:27:28.569 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:27:28.569 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:27:28.569 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" decimal(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:27:28.570 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-07 16:27:28.570 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:27:28.570 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:27:28.570 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-07 16:27:28.570 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 16:27:28.570 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:27:28.571 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:27:28.571 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:27:28.571 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:27:28.571 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:27:28.571 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:27:28.571 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:27:28.572 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:27:28.572 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-07 16:27:28.572 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-07 16:27:28.572 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-07 16:27:28.572 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:27:28.572 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:27:28.573 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:27:28.573 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:27:28.573 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:27:28.573 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:27:28.573 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 16:27:28.574 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-07 16:27:28.574 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '0dffcef6-fe69-4fda-bf93-a6dc7f6dc539', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '97230d24-5c2b-4853-9b5d-e9e076ef55d2', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, 'b76ff3ae-47d1-4df9-8d63-2f1fa750ff86', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '666ce667-42fb-41e1-a28c-80833d9e11f1', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '7eeeea19-1aac-494d-a44f-bb310ee90040', 'Customer', 'CUSTOMER');
2023-03-07 16:27:28.575 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'c5f7611a-8bbe-4b68-8c59-07f02791399b', '2023-03-07 16:27:28.22911', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEPKjKgCFm4PSUD/1oDOAVPo5qUCn2XXjkg57xBbIqsXIGc3fr6Po+tn4oGMYTeN6kA==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'd90de941-c702-4e84-90e9-79e652eb2512', '2023-03-07 16:27:28.229115', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEPKjKgCFm4PSUD/1oDOAVPo5qUCn2XXjkg57xBbIqsXIGc3fr6Po+tn4oGMYTeN6kA==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '874af3dc-bbcf-4f71-a0e6-909cd547d84a', '2023-03-07 16:27:28.229116', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEPKjKgCFm4PSUD/1oDOAVPo5qUCn2XXjkg57xBbIqsXIGc3fr6Po+tn4oGMYTeN6kA==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'c0bc51cc-54f5-4bdc-889b-e70b85ea18b4', '2023-03-07 16:27:28.229123', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEPKjKgCFm4PSUD/1oDOAVPo5qUCn2XXjkg57xBbIqsXIGc3fr6Po+tn4oGMYTeN6kA==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '88c99076-54d6-4c58-9cfc-1283eeaf6a97', '2023-03-07 16:27:28.229126', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEPKjKgCFm4PSUD/1oDOAVPo5qUCn2XXjkg57xBbIqsXIGc3fr6Po+tn4oGMYTeN6kA==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-07 16:27:28.575 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-07 16:27:28.148539', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-07 16:27:28.14854', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-07 16:27:28.14854', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-07 16:27:28.14854', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-07 16:27:28.14854', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-07 16:27:28.148541', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-07 16:27:28.575 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-07 16:27:28.22924', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-07 16:27:28.22924', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-07 16:27:28.22924', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-07 16:27:28.229241', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-07 16:27:28.229241', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-07 16:27:28.229241', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-07 16:27:28.229243', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-07 16:27:28.229243', NULL, NULL, 'Сомони', 972);
2023-03-07 16:27:28.575 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 16:27:28.148559', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 16:27:28.148559', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 16:27:28.148559', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 16:27:28.14856', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 16:27:28.14856', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 16:27:28.14856', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-07 16:27:28.14856', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-07 16:27:28.14856', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-07 16:27:28.148561', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-07 16:27:28.148561', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-07 16:27:28.148561', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-07 16:27:28.148561', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-07 16:27:28.148561', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-07 16:27:28.576 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-07 16:27:28.229231', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-07 16:27:28.229233', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-07 16:27:28.229233', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-07 16:27:28.229233', NULL, 'Description', NULL, 'Авто');
2023-03-07 16:27:28.576 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 16:27:28.148529', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 16:27:28.148533', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 16:27:28.148533', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 16:27:28.148533', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 16:27:28.148533', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 16:27:28.148534', NULL, 'Выдан', NULL, 'Выдан');
2023-03-07 16:27:28.576 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-07 16:27:28.148544', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-07 16:27:28.148544', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-07 16:27:28.148544', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-07 16:27:28.148545', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-07 16:27:28.148545', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-07 16:27:28.148545', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-07 16:27:28.148545', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-07 16:27:28.148546', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-07 16:27:28.148546', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-07 16:27:28.148546', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-07 16:27:28.148546', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-07 16:27:28.148547', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-07 16:27:28.577 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-07 16:27:28.577 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-07 16:27:28.577 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-07 16:27:28.148555', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-07 16:27:28.148555', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-07 16:27:28.148556', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-07 16:27:28.148556', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-07 16:27:28.148556', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-07 16:27:28.148556', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-07 16:27:28.577 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-07 16:27:28.577 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-07 16:27:28.577 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-07 16:27:28.577 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-07 16:27:28.578 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-07 16:27:28.578 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-07 16:27:28.578 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-07 16:27:28.578 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-07 16:27:28.578 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-07 16:27:28.578 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-07 16:27:28.578 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-07 16:27:28.579 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-07 16:27:28.579 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-07 16:27:28.579 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-07 16:27:28.579 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-07 16:27:28.579 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-07 16:27:28.580 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-07 16:27:28.580 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-07 16:27:28.580 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-07 16:27:28.580 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-07 16:27:28.580 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-07 16:27:28.581 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-07 16:27:28.581 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-07 16:27:28.581 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-07 16:27:28.581 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-07 16:27:28.581 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-07 16:27:28.581 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-07 16:27:28.581 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-07 16:27:28.581 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-07 16:27:28.582 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-07 16:27:28.582 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-07 16:27:28.582 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-07 16:27:28.582 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-07 16:27:28.582 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-07 16:27:28.582 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-07 16:27:28.582 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-07 16:27:28.583 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-07 16:27:28.583 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-07 16:27:28.583 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-07 16:27:28.583 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-07 16:27:28.583 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-07 16:27:28.583 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-07 16:27:28.583 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-07 16:27:28.584 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-07 16:27:28.584 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-07 16:27:28.584 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-07 16:27:28.584 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-07 16:27:28.584 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-07 16:27:28.584 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-07 16:27:28.584 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-07 16:27:28.584 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-07 16:27:28.585 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-07 16:27:28.585 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-07 16:27:28.585 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-07 16:27:28.585 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-07 16:27:28.585 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-07 16:27:28.586 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-07 16:27:28.586 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-07 16:27:28.586 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-07 16:27:28.586 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-07 16:27:28.586 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-07 16:27:28.586 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-07 16:27:28.586 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-07 16:27:28.587 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-07 16:27:28.587 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-07 16:27:28.651 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 16:27:29.234 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 16:27:29.234 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 16:27:29.236 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 16:27:29.236 +05:00 [INF] Hosting environment: Development
2023-03-07 16:27:29.236 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 16:27:30.629 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 16:27:30.767 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 139.3976ms
2023-03-07 16:27:30.875 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 16:27:31.247 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 371.9256ms
2023-03-07 16:27:53.106 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 16:27:53.189 +05:00 [INF] CORS policy execution successful.
2023-03-07 16:27:53.252 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:27:53.277 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 16:27:54.292 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-07 16:27:54.548 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ClaimType", "a"."ClaimValue", "a"."UserId"
FROM "AspNetUserClaims" AS "a"
WHERE "a"."UserId" = @__user_Id_0
2023-03-07 16:27:54.580 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 16:27:54.587 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 13)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-07 16:27:54.603 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."ClaimType", "a"."ClaimValue"
FROM "AspNetRoleClaims" AS "a"
WHERE "a"."RoleId" = @__role_Id_0
2023-03-07 16:27:54.606 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 16:27:54.720 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"CXGVYLNFPLNK0KNQIWAMGNY04B58WGPTC9Y4d435c3d-1d9e-4c0e-95e9-af9be86a7779","JwtId":"744e7ec4-8c0b-4a28-9773-93c302f59be8","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-07T11:27:54.6992340Z","ExpiryDateTime":"2023-09-07T11:27:54.6992860Z","$type":"RefreshTokenCommand"}
2023-03-07 16:27:54.840 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 36), @p5='?' (Size = 71), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-07 16:27:54.903 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-07 16:27:54.928 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1647.2857ms
2023-03-07 16:27:54.929 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:27:54.937 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 2412 application/json;+charset=utf-8 1830.9155ms
2023-03-07 16:28:11.660 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Account?PageNumber=1&PageSize=2 - -
2023-03-07 16:28:11.730 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AccountController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 16:28:11.737 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Accounts.GetAccountList.AccountListVm]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.AccountController (EDSystems.WebApi).
2023-03-07 16:28:11.773 +05:00 [INF] NotesRequest: GetAccountListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetAccountListWithPaginationQuery"}
2023-03-07 16:28:12.016 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AccountController.GetAllWithPagination (EDSystems.WebApi) in 278.035ms
2023-03-07 16:28:12.016 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AccountController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 16:28:12.018 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Missing map from EDSystems.Domain.Entities.Account to EDSystems.Application.EDSystems.Queries.Accounts.GetAccountListWithPagination.AccountLookupDtoWithPagination. Create using CreateMap<Account, AccountLookupDtoWithPagination>.
   at AutoMapper.QueryableExtensions.Impl.ProjectionBuilder.CreateProjection(ProjectionRequest& request, LetPropertyMaps letPropertyMaps)
   at AutoMapper.QueryableExtensions.Impl.ProjectionBuilder.CreateProjection(ProjectionRequest request)
   at AutoMapper.Internal.LockingConcurrentDictionary`2.<>c__DisplayClass2_1.<.ctor>b__1()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at AutoMapper.Internal.LockingConcurrentDictionary`2.GetOrAdd(TKey& key)
   at AutoMapper.QueryableExtensions.Impl.ProjectionBuilder.GetProjection(Type sourceType, Type destinationType, Object parameters, MemberPath[] membersToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ToCore(IQueryable source, Type destinationType, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ToCore[TResult](IQueryable source, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Object parameters, Expression`1[] membersToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Expression`1[] membersToExpand)
   at EDSystems.Application.EDSystems.Queries.Accounts.GetAccountListWithPagination.GetAccountListWithPaginationQueryHandler.Handle(GetAccountListWithPaginationQuery request, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Application/EDSystems/Queries/Accounts/GetAccountListWithPagination/GetAccountListWithPaginationQueryHandler.cs:line 26
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.AccountController.GetAllWithPagination(Int32 PageNumber, Int32 PageSize) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Controllers/AccountController.cs:line 86
   at lambda_method898(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 16:28:12.074 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Account?PageNumber=1&PageSize=2 - - - 500 - text/plain;+charset=utf-8 413.6770ms
2023-03-07 16:28:55.820 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/1 - -
2023-03-07 16:28:55.826 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.Get (EDSystems.WebApi)'
2023-03-07 16:28:55.831 +05:00 [INF] Route matched with {action = "Get", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchDetails.BranchDetailsVm]] Get(Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 16:28:55.839 +05:00 [INF] NotesRequest: GetBranchDetailsQuery {"Id":1,"$type":"GetBranchDetailsQuery"}
2023-03-07 16:28:55.849 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Address", "b"."City", "b"."Code", "b"."Country", "b"."CreatedBy", "b"."DateCreated", "b"."DateUpdated", "b"."Email", "b"."ModifiedBy", "b"."Name", "b"."Phone"
FROM "Branch" AS "b"
WHERE "b"."Id" = @__request_Id_0
LIMIT 1
2023-03-07 16:28:55.885 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.EDSystems.Queries.Branches.GetBranchDetails.BranchDetailsVm'.
2023-03-07 16:28:55.890 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.Get (EDSystems.WebApi) in 59.3238ms
2023-03-07 16:28:55.890 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.Get (EDSystems.WebApi)'
2023-03-07 16:28:55.891 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/1 - - - 200 431 application/json;+charset=utf-8 70.7871ms
2023-03-07 16:29:02.729 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-07 16:29:02.731 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 16:29:02.737 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 16:29:02.746 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-07 16:29:02.814 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Branch" AS "b"
2023-03-07 16:29:02.824 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Name", "b"."Country", "b"."Code", "b"."City", "b"."Address", "b"."Email", "b"."Phone", "b"."DateCreated", "b"."DateUpdated"
FROM "Branch" AS "b"
ORDER BY "b"."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-07 16:29:02.826 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-07 16:29:02.838 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 101.0951ms
2023-03-07 16:29:02.838 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 16:29:02.838 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 200 891 application/json;+charset=utf-8 108.8995ms
2023-03-07 16:29:31.444 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Status?PageSize=1&PageNumber=2 - -
2023-03-07 16:29:31.446 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.AspNetCore.Routing.Matching.AmbiguousMatchException: The request matched multiple endpoints. Matches: 

EDSystems.WebApi.Controllers.StatusController.GetAllWithPagination (EDSystems.WebApi)
EDSystems.WebApi.Controllers.StatusController.GetAll (EDSystems.WebApi)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ReportAmbiguity(CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DefaultEndpointSelector.ProcessFinalCandidates(HttpContext httpContext, CandidateState[] candidateState)
   at Microsoft.AspNetCore.Routing.Matching.DfaMatcher.MatchAsync(HttpContext httpContext)
   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.StaticFiles.StaticFileMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 16:29:31.447 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Status?PageSize=1&PageNumber=2 - - - 500 - text/plain;+charset=utf-8 2.9406ms
2023-03-07 16:30:33.778 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:30:34.050 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:30:34.052 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:30:34.052 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:30:34.052 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:30:34.052 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:30:34.052 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:30:34.052 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:30:34.052 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:30:34.052 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:30:34.304 +05:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-07 16:30:34.588 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:30:34.706 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:30:34.706 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:30:34.706 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:30:34.706 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:30:34.706 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:30:34.706 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:30:34.706 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:30:34.706 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:30:34.706 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:30:34.986 +05:00 [FTL] An error occured while app initialization
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 10: 'disk I/O error'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteNonQuery()
   at Microsoft.Data.Sqlite.SqliteConnectionExtensions.ExecuteNonQuery(SqliteConnection connection, String commandText, SqliteParameter[] parameters)
   at Microsoft.Data.Sqlite.SqliteTransaction..ctor(SqliteConnection connection, IsolationLevel isolationLevel, Boolean deferred)
   at Microsoft.Data.Sqlite.SqliteConnection.BeginTransaction(IsolationLevel isolationLevel, Boolean deferred)
   at Microsoft.Data.Sqlite.SqliteConnection.BeginTransaction(IsolationLevel isolationLevel)
   at Microsoft.Data.Sqlite.SqliteConnection.BeginDbTransaction(IsolationLevel isolationLevel)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.ConnectionBeginTransaction(IsolationLevel isolationLevel)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction(IsolationLevel isolationLevel)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction()
   at Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationCommandExecutor.ExecuteNonQuery(IEnumerable`1 migrationCommands, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTables()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreated()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureCreated()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Persistence/DbInitializer.cs:line 8
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Program.cs:line 54
2023-03-07 16:30:35.079 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 16:30:35.755 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 16:30:35.756 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 16:30:35.758 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 16:30:35.758 +05:00 [INF] Hosting environment: Development
2023-03-07 16:30:35.758 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 16:30:37.109 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 16:30:37.268 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 160.2509ms
2023-03-07 16:30:37.374 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 16:30:37.760 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 386.5563ms
2023-03-07 16:37:52.114 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:37:52.349 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:37:52.350 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:37:52.350 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:37:52.350 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:37:52.350 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:37:52.350 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:37:52.350 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:37:52.350 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:37:52.350 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:37:52.572 +05:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-07 16:37:52.756 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:37:52.867 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:37:52.867 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:37:52.867 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:37:52.867 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:37:52.867 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:37:52.867 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:37:52.867 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:37:52.867 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:37:52.867 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:37:53.120 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-07 16:37:53.120 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:37:53.121 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:37:53.121 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-07 16:37:53.121 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:37:53.121 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:37:53.121 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" decimal(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:37:53.121 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-07 16:37:53.121 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:37:53.122 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-07 16:37:53.122 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-07 16:37:53.122 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 16:37:53.122 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:37:53.122 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:37:53.122 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:37:53.123 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:37:53.123 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:37:53.123 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:37:53.123 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:37:53.123 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:37:53.123 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-07 16:37:53.124 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-07 16:37:53.124 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-07 16:37:53.124 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:37:53.124 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:37:53.124 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:37:53.124 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:37:53.125 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 16:37:53.125 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 16:37:53.125 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 16:37:53.125 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-07 16:37:53.126 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '708c814b-0c78-4f74-b599-d2aa13fa4ef1', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '8894f06f-0075-4154-86b4-8e76e6887ee8', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '59e2b741-492e-4b93-84cd-211db34bd43c', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '73fd243e-00a7-4817-958b-55e3c49c11af', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '5e04fb82-0b08-41e3-b476-961d8157e18b', 'Customer', 'CUSTOMER');
2023-03-07 16:37:53.126 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '8eca02e9-537d-4cd4-96ab-f8f069b71b68', '2023-03-07 16:37:52.754328', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEL1Y+6NZ6ArqjKiddzZ8G3duFk24MtLvPk7vpi8wUShsBQJONg6O6oydtmCdV5luIw==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '01bd9381-d8ef-4704-9843-1f29b1bc65b4', '2023-03-07 16:37:52.754332', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEL1Y+6NZ6ArqjKiddzZ8G3duFk24MtLvPk7vpi8wUShsBQJONg6O6oydtmCdV5luIw==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '8e00b2a0-cb2f-4e10-aafe-8319492c3297', '2023-03-07 16:37:52.754333', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEL1Y+6NZ6ArqjKiddzZ8G3duFk24MtLvPk7vpi8wUShsBQJONg6O6oydtmCdV5luIw==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '27fca07d-e11b-417a-83d3-88b1116161ae', '2023-03-07 16:37:52.754336', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEL1Y+6NZ6ArqjKiddzZ8G3duFk24MtLvPk7vpi8wUShsBQJONg6O6oydtmCdV5luIw==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '40a680ea-c133-4048-93b7-1a5f999924e1', '2023-03-07 16:37:52.754336', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEL1Y+6NZ6ArqjKiddzZ8G3duFk24MtLvPk7vpi8wUShsBQJONg6O6oydtmCdV5luIw==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-07 16:37:53.126 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-07 16:37:52.680416', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-07 16:37:52.680417', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-07 16:37:52.680417', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-07 16:37:52.680417', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-07 16:37:52.680417', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-07 16:37:52.680418', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-07 16:37:53.126 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-07 16:37:52.754371', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-07 16:37:52.754371', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-07 16:37:52.754372', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-07 16:37:52.754372', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-07 16:37:52.754372', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-07 16:37:52.754372', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-07 16:37:52.754372', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-07 16:37:52.754373', NULL, NULL, 'Сомони', 972);
2023-03-07 16:37:53.127 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 16:37:52.680433', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 16:37:52.680434', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 16:37:52.680434', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 16:37:52.680434', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 16:37:52.680434', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 16:37:52.680434', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-07 16:37:52.680435', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-07 16:37:52.680435', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-07 16:37:52.680435', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-07 16:37:52.680435', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-07 16:37:52.680435', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-07 16:37:52.680436', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-07 16:37:52.680436', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-07 16:37:53.127 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-07 16:37:52.754367', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-07 16:37:52.754367', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-07 16:37:52.754367', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-07 16:37:52.754368', NULL, 'Description', NULL, 'Авто');
2023-03-07 16:37:53.127 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-07 16:37:52.680407', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-07 16:37:52.68041', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-07 16:37:52.680411', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-07 16:37:52.680411', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-07 16:37:52.680411', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-07 16:37:52.680411', NULL, 'Выдан', NULL, 'Выдан');
2023-03-07 16:37:53.128 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-07 16:37:52.68042', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-07 16:37:52.680421', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-07 16:37:52.680421', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-07 16:37:52.680421', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-07 16:37:52.680421', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-07 16:37:52.680421', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-07 16:37:52.680422', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-07 16:37:52.680422', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-07 16:37:52.680422', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-07 16:37:52.680426', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-07 16:37:52.680427', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-07 16:37:52.680427', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-07 16:37:53.128 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-07 16:37:53.128 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-07 16:37:53.128 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-07 16:37:52.680429', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-07 16:37:52.68043', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-07 16:37:52.68043', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-07 16:37:52.68043', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-07 16:37:52.680431', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-07 16:37:52.680431', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-07 16:37:53.129 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-07 16:37:53.129 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-07 16:37:53.129 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-07 16:37:53.129 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-07 16:37:53.129 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-07 16:37:53.129 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-07 16:37:53.130 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-07 16:37:53.130 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-07 16:37:53.130 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-07 16:37:53.130 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-07 16:37:53.130 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-07 16:37:53.130 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-07 16:37:53.130 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-07 16:37:53.130 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-07 16:37:53.131 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-07 16:37:53.131 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-07 16:37:53.131 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-07 16:37:53.131 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-07 16:37:53.131 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-07 16:37:53.131 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-07 16:37:53.131 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-07 16:37:53.132 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-07 16:37:53.132 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-07 16:37:53.132 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-07 16:37:53.132 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-07 16:37:53.132 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-07 16:37:53.132 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-07 16:37:53.132 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-07 16:37:53.133 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-07 16:37:53.133 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-07 16:37:53.133 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-07 16:37:53.133 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-07 16:37:53.133 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-07 16:37:53.133 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-07 16:37:53.134 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-07 16:37:53.134 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-07 16:37:53.134 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-07 16:37:53.134 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-07 16:37:53.134 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-07 16:37:53.134 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-07 16:37:53.134 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-07 16:37:53.135 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-07 16:37:53.135 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-07 16:37:53.135 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-07 16:37:53.135 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-07 16:37:53.135 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-07 16:37:53.135 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-07 16:37:53.135 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-07 16:37:53.136 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-07 16:37:53.136 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-07 16:37:53.136 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-07 16:37:53.136 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-07 16:37:53.136 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-07 16:37:53.136 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-07 16:37:53.136 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-07 16:37:53.137 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-07 16:37:53.137 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-07 16:37:53.137 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-07 16:37:53.137 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-07 16:37:53.137 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-07 16:37:53.137 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-07 16:37:53.137 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-07 16:37:53.138 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-07 16:37:53.138 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-07 16:37:53.138 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-07 16:37:53.199 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 16:37:53.829 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 16:37:53.829 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 16:37:53.831 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 16:37:53.831 +05:00 [INF] Hosting environment: Development
2023-03-07 16:37:53.831 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 16:37:55.133 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 16:37:55.286 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 154.9703ms
2023-03-07 16:37:55.396 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 16:37:55.786 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 390.1393ms
2023-03-07 16:39:02.047 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 16:39:02.088 +05:00 [INF] CORS policy execution successful.
2023-03-07 16:39:02.143 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:39:02.164 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 16:39:03.072 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-07 16:39:03.315 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ClaimType", "a"."ClaimValue", "a"."UserId"
FROM "AspNetUserClaims" AS "a"
WHERE "a"."UserId" = @__user_Id_0
2023-03-07 16:39:03.345 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 16:39:03.352 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 13)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-07 16:39:03.369 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."ClaimType", "a"."ClaimValue"
FROM "AspNetRoleClaims" AS "a"
WHERE "a"."RoleId" = @__role_Id_0
2023-03-07 16:39:03.372 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-07 16:39:03.482 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"VS0WWFK78H95WEZJ0SVNLYJDOWV5835Q5GS012f2c71-2fb9-4609-bd5f-2f8ae937a517","JwtId":"684e1d3b-8f5a-492e-a067-ee1944c5c532","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-07T11:39:03.4622360Z","ExpiryDateTime":"2023-09-07T11:39:03.4622880Z","$type":"RefreshTokenCommand"}
2023-03-07 16:39:03.598 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 36), @p5='?' (Size = 71), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-07 16:39:03.661 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-07 16:39:03.690 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1520.8445ms
2023-03-07 16:39:03.690 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 16:39:03.695 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 2412 application/json;+charset=utf-8 1647.5943ms
2023-03-07 16:39:23.872 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Account/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-07 16:39:23.989 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AccountController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 16:39:23.999 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Account"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Accounts.GetAccountList.AccountListVm]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.AccountController (EDSystems.WebApi).
2023-03-07 16:39:24.037 +05:00 [INF] NotesRequest: GetAccountListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetAccountListWithPaginationQuery"}
2023-03-07 16:39:24.301 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AccountController.GetAllWithPagination (EDSystems.WebApi) in 302.6691ms
2023-03-07 16:39:24.302 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AccountController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 16:39:24.303 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Missing map from EDSystems.Domain.Entities.Account to EDSystems.Application.EDSystems.Queries.Accounts.GetAccountListWithPagination.AccountLookupDtoWithPagination. Create using CreateMap<Account, AccountLookupDtoWithPagination>.
   at AutoMapper.QueryableExtensions.Impl.ProjectionBuilder.CreateProjection(ProjectionRequest& request, LetPropertyMaps letPropertyMaps)
   at AutoMapper.QueryableExtensions.Impl.ProjectionBuilder.CreateProjection(ProjectionRequest request)
   at AutoMapper.Internal.LockingConcurrentDictionary`2.<>c__DisplayClass2_1.<.ctor>b__1()
   at System.Lazy`1.ViaFactory(LazyThreadSafetyMode mode)
   at System.Lazy`1.ExecutionAndPublication(LazyHelper executionAndPublication, Boolean useDefaultConstructor)
   at System.Lazy`1.CreateValue()
   at System.Lazy`1.get_Value()
   at AutoMapper.Internal.LockingConcurrentDictionary`2.GetOrAdd(TKey& key)
   at AutoMapper.QueryableExtensions.Impl.ProjectionBuilder.GetProjection(Type sourceType, Type destinationType, Object parameters, MemberPath[] membersToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ToCore(IQueryable source, Type destinationType, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ToCore[TResult](IQueryable source, IConfigurationProvider configuration, Object parameters, IEnumerable`1 memberPathsToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Object parameters, Expression`1[] membersToExpand)
   at AutoMapper.QueryableExtensions.Extensions.ProjectTo[TDestination](IQueryable source, IConfigurationProvider configuration, Expression`1[] membersToExpand)
   at EDSystems.Application.EDSystems.Queries.Accounts.GetAccountListWithPagination.GetAccountListWithPaginationQueryHandler.Handle(GetAccountListWithPaginationQuery request, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Application/EDSystems/Queries/Accounts/GetAccountListWithPagination/GetAccountListWithPaginationQueryHandler.cs:line 26
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.AccountController.GetAllWithPagination(Int32 PageNumber, Int32 PageSize) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CDInt/EDSystems.WebApi/Controllers/AccountController.cs:line 86
   at lambda_method898(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-07 16:39:24.356 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Account/WithPagination?PageNumber=1&PageSize=2 - - - 500 - text/plain;+charset=utf-8 483.3285ms
2023-03-07 16:39:36.040 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-07 16:39:36.046 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 16:39:36.053 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-07 16:39:36.064 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-07 16:39:36.135 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Branch" AS "b"
2023-03-07 16:39:36.143 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Name", "b"."Country", "b"."Code", "b"."City", "b"."Address", "b"."Email", "b"."Phone", "b"."DateCreated", "b"."DateUpdated"
FROM "Branch" AS "b"
ORDER BY "b"."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-07 16:39:36.147 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-07 16:39:36.161 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 107.4524ms
2023-03-07 16:39:36.161 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 16:39:36.162 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 200 892 application/json;+charset=utf-8 121.2097ms
2023-03-07 16:39:47.621 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Plan/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-07 16:39:47.623 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.PlanController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 16:39:47.629 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Plan"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Plans.GetPlanListWithPagination.PlanListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.PlanController (EDSystems.WebApi).
2023-03-07 16:39:47.638 +05:00 [INF] NotesRequest: GetPlanListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetPlanListWithPaginationQuery"}
2023-03-07 16:39:47.648 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Plan" AS "p"
2023-03-07 16:39:47.653 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "p"."Id", "p"."Name", "p"."Cost", "p"."Description", "p"."DateCreated", "p"."DateUpdated"
FROM "Plan" AS "p"
ORDER BY "p"."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-07 16:39:47.655 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Plans.GetPlanListWithPagination.PlanLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-07 16:39:47.661 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.PlanController.GetAllWithPagination (EDSystems.WebApi) in 31.3844ms
2023-03-07 16:39:47.661 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.PlanController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 16:39:47.661 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Plan/WithPagination?PageNumber=1&PageSize=2 - - - 200 372 application/json;+charset=utf-8 39.7621ms
2023-03-07 16:39:58.525 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/RoleManager/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-07 16:39:58.526 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.RoleManagerController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 16:39:58.532 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "RoleManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Roles.Queries.GetRoleListWithPagination.RoleListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.RoleManagerController (EDSystems.WebApi).
2023-03-07 16:39:58.540 +05:00 [INF] NotesRequest: GetRoleListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetRoleListWithPaginationQuery"}
2023-03-07 16:39:58.552 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "AspNetRoles" AS "a"
2023-03-07 16:39:58.556 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CAST("a"."Id" AS TEXT) AS "Id", "a"."Name"
FROM "AspNetRoles" AS "a"
ORDER BY "a"."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-07 16:39:58.557 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.Roles.Queries.GetRoleListWithPagination.RoleListLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-07 16:39:58.560 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.RoleManagerController.GetAllWithPagination (EDSystems.WebApi) in 28.121ms
2023-03-07 16:39:58.560 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.RoleManagerController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 16:39:58.560 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/RoleManager/WithPagination?PageNumber=1&PageSize=2 - - - 200 161 application/json;+charset=utf-8 34.6421ms
2023-03-07 16:40:03.485 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/RoleManager/WithPagination?PageNumber=1&PageSize=3 - -
2023-03-07 16:40:03.487 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.RoleManagerController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 16:40:03.487 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "RoleManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Roles.Queries.GetRoleListWithPagination.RoleListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.RoleManagerController (EDSystems.WebApi).
2023-03-07 16:40:03.488 +05:00 [INF] NotesRequest: GetRoleListWithPaginationQuery {"PageNumber":1,"PageSize":3,"$type":"GetRoleListWithPaginationQuery"}
2023-03-07 16:40:03.492 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "AspNetRoles" AS "a"
2023-03-07 16:40:03.492 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT CAST("a"."Id" AS TEXT) AS "Id", "a"."Name"
FROM "AspNetRoles" AS "a"
ORDER BY "a"."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-07 16:40:03.492 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.Roles.Queries.GetRoleListWithPagination.RoleListLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-07 16:40:03.493 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.RoleManagerController.GetAllWithPagination (EDSystems.WebApi) in 5.7338ms
2023-03-07 16:40:03.493 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.RoleManagerController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 16:40:03.493 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/RoleManager/WithPagination?PageNumber=1&PageSize=3 - - - 200 187 application/json;+charset=utf-8 8.0077ms
2023-03-07 16:40:12.420 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/RoleManager/3 - -
2023-03-07 16:40:12.420 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.RoleManagerController.Get (EDSystems.WebApi)'
2023-03-07 16:40:12.424 +05:00 [INF] Route matched with {action = "Get", controller = "RoleManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Roles.Queries.GetRoleDetails.RoleDetailsVm]] Get(System.String) on controller EDSystems.WebApi.Controllers.RoleManagerController (EDSystems.WebApi).
2023-03-07 16:40:12.427 +05:00 [INF] NotesRequest: GetRoleDetailsQuery {"Id":"3","Name":null,"$type":"GetRoleDetailsQuery"}
2023-03-07 16:40:12.435 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__roleId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."Id" = @__roleId_0
LIMIT 1
2023-03-07 16:40:12.437 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Roles.Queries.GetRoleDetails.RoleDetailsVm'.
2023-03-07 16:40:12.439 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.RoleManagerController.Get (EDSystems.WebApi) in 14.7599ms
2023-03-07 16:40:12.439 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.RoleManagerController.Get (EDSystems.WebApi)'
2023-03-07 16:40:12.439 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/RoleManager/3 - - - 200 25 application/json;+charset=utf-8 19.3004ms
2023-03-07 16:40:19.659 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Status/WithPagination?PageSize=2&PageNumber=3 - -
2023-03-07 16:40:19.660 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.StatusController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 16:40:19.668 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Status"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Statuses.GetStatusListWithPagination.StatusListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.StatusController (EDSystems.WebApi).
2023-03-07 16:40:19.675 +05:00 [INF] NotesRequest: GetStatusListWithPaginationQuery {"PageNumber":3,"PageSize":2,"$type":"GetStatusListWithPaginationQuery"}
2023-03-07 16:40:19.681 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Status" AS "s"
2023-03-07 16:40:19.686 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "s"."Id", "s"."Name", "s"."Description", "s"."DateCreated", "s"."DateUpdated"
FROM "Status" AS "s"
ORDER BY "s"."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-07 16:40:19.687 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Statuses.GetStatusListWithPagination.StatusLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-07 16:40:19.691 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.StatusController.GetAllWithPagination (EDSystems.WebApi) in 23.2985ms
2023-03-07 16:40:19.691 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.StatusController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 16:40:19.691 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Status/WithPagination?PageSize=2&PageNumber=3 - - - 200 351 application/json;+charset=utf-8 32.0874ms
2023-03-07 16:43:10.141 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:43:10.353 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:43:10.354 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:43:10.354 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:43:10.354 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:43:10.354 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:43:10.354 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:43:10.354 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:43:10.354 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:43:10.354 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:43:10.683 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:43:10.784 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:43:10.784 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:43:10.784 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:43:10.784 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:43:10.785 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:43:10.785 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:43:10.785 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:43:10.785 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:43:10.785 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:53:27.511 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 16:53:27.753 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:53:27.754 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:53:27.755 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:53:27.755 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:53:27.755 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:53:27.755 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:53:27.755 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:53:27.755 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:53:27.760 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 16:53:29.918 +05:00 [INF] Executed DbCommand (210ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-03-07 16:53:31.238 +05:00 [INF] Executed DbCommand (197ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2023-03-07 16:53:32.491 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-03-07 16:53:33.229 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-03-07 16:53:33.247 +05:00 [INF] Applying migration '20230307114310_myMigration01'.
2023-03-07 17:13:11.422 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 17:13:11.654 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 17:13:11.656 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 17:13:11.656 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 17:13:11.656 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 17:13:11.656 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 17:13:11.656 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 17:13:11.656 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 17:13:11.656 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 17:13:11.656 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 17:13:13.711 +05:00 [INF] Executed DbCommand (203ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-03-07 17:13:14.987 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-03-07 17:13:15.711 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-03-07 17:13:15.729 +05:00 [INF] Applying migration '20230307114310_myMigration01'.
2023-03-07 22:26:35.368 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 22:26:35.456 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:26:35.457 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:26:35.457 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:26:35.457 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:26:35.457 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:26:35.457 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:26:35.457 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:26:35.457 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:26:35.457 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:21.663 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 22:30:21.760 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:21.761 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:21.761 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:21.761 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:21.761 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:21.761 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:21.761 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:21.761 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:21.761 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:21.953 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 22:30:21.991 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:21.991 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:21.991 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:21.991 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:21.991 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:21.991 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:21.991 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:21.991 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:21.991 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:30:22.123 +05:00 [INF] Executed DbCommand (87ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE edsystemsdatabase;
2023-03-07 22:30:22.162 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2023-03-07 22:30:22.172 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-03-07 22:30:22.175 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-03-07 22:30:22.180 +05:00 [INF] Applying migration '20230307114310_myMigration01'.
2023-03-07 22:34:32.587 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 22:34:32.676 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:32.677 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:32.677 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:32.677 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:32.677 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:32.677 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:32.677 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:32.677 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:32.677 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:32.818 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 22:34:32.856 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:32.857 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:32.857 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:32.857 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:32.857 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:32.857 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:32.857 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:32.857 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:32.857 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:59.692 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 22:34:59.789 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:59.789 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:59.789 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:59.789 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:59.789 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:59.789 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:59.789 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:59.789 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:59.789 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:34:59.949 +05:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-03-07 22:34:59.962 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-03-07 22:34:59.972 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-03-07 22:34:59.978 +05:00 [INF] Applying migration '20230307173432_myMigration01'.
2023-03-07 22:35:00.054 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-03-07 22:35:00.057 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" text NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-03-07 22:35:00.060 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Currency" PRIMARY KEY ("Id")
);
2023-03-07 22:35:00.062 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT "PK_Expenses" PRIMARY KEY ("Id")
);
2023-03-07 22:35:00.064 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ExpenseType" PRIMARY KEY ("Id")
);
2023-03-07 22:35:00.067 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Parcel" PRIMARY KEY ("Id")
);
2023-03-07 22:35:00.070 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Cost" numeric(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Plan" PRIMARY KEY ("Id")
);
2023-03-07 22:35:00.073 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "Token" text NULL,
    "JwtId" text NULL,
    "IsUsed" boolean NOT NULL,
    "IsRevoked" boolean NOT NULL,
    "AddedDateTime" timestamp without time zone NOT NULL,
    "ExpiryDateTime" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_RefreshToken" PRIMARY KEY ("Id")
);
2023-03-07 22:35:00.074 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Status" PRIMARY KEY ("Id")
);
2023-03-07 22:35:00.076 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TokenId" text NULL,
    "RefreshToken" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Tokens" PRIMARY KEY ("Id")
);
2023-03-07 22:35:00.077 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:00.078 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric(18,3) NOT NULL,
    "BranchId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Account" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:00.080 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ToBranchId" integer NOT NULL,
    "FromBranchId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelBranch" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:00.081 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StateDeliveryToBranch" boolean NOT NULL,
    "StatePickingUp" boolean NOT NULL,
    "StateDeliveryToPoint" boolean NOT NULL,
    "StateBuyout" boolean NOT NULL,
    "CostPickingUp" numeric(18,3) NOT NULL,
    "CostDeliveryToPoint" numeric(18,3) NOT NULL,
    "CostDeliveryToBranch" numeric(18,3) NOT NULL,
    "CostBuyout" numeric NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelCost" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:00.082 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Description" varchar NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelDescription" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:00.083 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelImage" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:00.085 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" text NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelItem" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:00.086 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Cost" numeric(18,3) NOT NULL,
    "CourierId" text NULL,
    "JobType" varchar NULL,
    "ParcelId" integer NOT NULL,
    "PaymentState" boolean NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelJob" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:00.087 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Weight" numeric(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSize" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:00.088 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSound" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:00.089 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PlanId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelPlan" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-07 22:35:00.090 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StatusId" integer NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelStatus" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-07 22:35:00.091 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NULL,
    "LastName" text NULL,
    "Address" text NULL,
    "UserNameT" text NULL,
    "ChatId" bigint NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "ParcelJobId" integer NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-07 22:35:00.093 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "PayerId" text NULL,
    "PayerId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_AccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:00.094 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:00.095 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:00.096 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" integer NOT NULL,
    "RoleId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:00.097 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" integer NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:00.098 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SenderId" text NULL,
    "SenderId1" integer NULL,
    "RecepientId" text NULL,
    "RecepientId1" integer NULL,
    "RecepientStaffId" text NULL,
    "RecepientStaffId1" integer NULL,
    "SenderStaffId" text NULL,
    "SenderStaffId1" integer NULL,
    "RecepientCourierId" text NULL,
    "RecepientCourierId1" integer NULL,
    "SenderCourierId" text NULL,
    "SenderCourierId1" integer NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelOwners" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:00.100 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccount" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:00.101 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:00.102 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '62d65bae-26fe-4478-8c5a-028912ed52f8', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '745a2a87-3eec-4831-9648-ff3e0ca27f5f', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, 'ca38d0cc-67c2-4fcb-83fa-9ecdd0ee6130', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '18be39b6-69fa-4303-acb2-13c9ad627d6e', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '3072d295-e268-445f-9aae-2c5c58501d87', 'Customer', 'CUSTOMER');
2023-03-07 22:35:00.103 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '537ead06-91c5-4e77-9d74-8a4c24c98c0c', TIMESTAMP '2023-03-07 22:34:32.818126', NULL, 'administrator@gmail.com', FALSE, 'EDSystem', 'Administrator', FALSE, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998970000675', FALSE, NULL, FALSE, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '4d518d26-2c13-460b-b918-30d018a73dce', TIMESTAMP '2023-03-07 22:34:32.818127', NULL, 'hayrulloh@gmail.com', FALSE, 'EDTashkent', 'Hayrulloh', FALSE, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998935788886', FALSE, NULL, FALSE, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '99484c3d-c5a9-40b4-996f-43b88d4fd06e', TIMESTAMP '2023-03-07 22:34:32.818128', NULL, 'Nodir@gmail.com', FALSE, 'EDTashkent', 'Nodir', FALSE, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998909046605', FALSE, NULL, FALSE, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '7dfa1f3d-3dfb-4990-b102-f2254a385477', TIMESTAMP '2023-03-07 22:34:32.818131', NULL, 'Javohir@gmail.com', FALSE, 'EDTashkent', 'Javohir', FALSE, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998931710966', FALSE, NULL, FALSE, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '97a5ddd0-0a30-4208-af4d-79f82fe2dbcd', TIMESTAMP '2023-03-07 22:34:32.818132', NULL, 'Ismoil@gmail.com', FALSE, 'EDTashkent', 'Ismoil', FALSE, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998977093262', FALSE, NULL, FALSE, 'ismoil', 'UserName');
2023-03-07 22:35:00.103 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, TIMESTAMP '2023-03-07 22:34:32.786015', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, TIMESTAMP '2023-03-07 22:34:32.786015', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, TIMESTAMP '2023-03-07 22:34:32.786015', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, TIMESTAMP '2023-03-07 22:34:32.786016', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, TIMESTAMP '2023-03-07 22:34:32.786016', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, TIMESTAMP '2023-03-07 22:34:32.786016', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-07 22:35:00.103 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, TIMESTAMP '2023-03-07 22:34:32.818142', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, TIMESTAMP '2023-03-07 22:34:32.818142', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, TIMESTAMP '2023-03-07 22:34:32.818142', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, TIMESTAMP '2023-03-07 22:34:32.818142', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, TIMESTAMP '2023-03-07 22:34:32.818143', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, TIMESTAMP '2023-03-07 22:34:32.818143', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, TIMESTAMP '2023-03-07 22:34:32.818143', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, TIMESTAMP '2023-03-07 22:34:32.818143', NULL, NULL, 'Сомони', 972);
2023-03-07 22:35:00.107 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-07 22:34:32.786024', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-07 22:34:32.786024', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-07 22:35:00.108 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, 7.0, NULL, TIMESTAMP '2023-03-07 22:34:32.81814', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, 12.0, NULL, TIMESTAMP '2023-03-07 22:34:32.81814', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, 30.0, NULL, TIMESTAMP '2023-03-07 22:34:32.81814', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, 5.0, NULL, TIMESTAMP '2023-03-07 22:34:32.818141', NULL, 'Description', NULL, 'Авто');
2023-03-07 22:35:00.108 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-07 22:34:32.786002', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-07 22:34:32.786006', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-07 22:34:32.786006', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-07 22:34:32.786007', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-07 22:34:32.786007', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-07 22:34:32.786007', NULL, 'Выдан', NULL, 'Выдан');
2023-03-07 22:35:00.109 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 0.0, 1, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 0.0, 1, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 0.0, 2, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 0.0, 2, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 0.0, 3, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 0.0, 3, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.786019', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 0.0, 4, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786019', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 0.0, 4, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.786019', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, 0.0, 5, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.78602', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, 0.0, 5, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.78602', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, 0.0, 6, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.78602', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, 0.0, 6, NULL, 5, TIMESTAMP '2023-03-07 22:34:32.78602', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-07 22:35:00.110 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-07 22:35:00.110 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-07 22:35:00.110 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786022', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786022', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786022', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786023', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786023', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786023', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-07 22:35:00.111 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-07 22:35:00.111 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-07 22:35:00.111 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-07 22:35:00.112 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-07 22:35:00.112 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-07 22:35:00.113 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-07 22:35:00.113 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-07 22:35:00.113 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-07 22:35:00.114 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-07 22:35:00.114 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-07 22:35:00.115 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-07 22:35:00.115 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-07 22:35:00.116 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-07 22:35:00.116 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-07 22:35:00.116 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-07 22:35:00.117 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-07 22:35:00.117 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-07 22:35:00.117 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-07 22:35:00.118 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-07 22:35:00.118 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-07 22:35:00.118 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-07 22:35:00.119 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-07 22:35:00.119 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-07 22:35:00.119 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-07 22:35:00.120 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-07 22:35:00.120 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-07 22:35:00.121 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-07 22:35:00.121 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-07 22:35:00.121 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-07 22:35:00.122 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-07 22:35:00.122 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-07 22:35:00.122 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-07 22:35:00.123 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-07 22:35:00.123 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-07 22:35:00.124 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-07 22:35:00.124 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-07 22:35:00.124 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-07 22:35:00.125 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-07 22:35:00.125 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-07 22:35:00.126 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-07 22:35:00.126 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-07 22:35:00.126 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-07 22:35:00.127 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-07 22:35:00.127 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-07 22:35:00.128 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-07 22:35:00.128 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-07 22:35:00.128 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-07 22:35:00.129 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-07 22:35:00.129 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-07 22:35:00.129 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-07 22:35:00.130 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-07 22:35:00.130 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-07 22:35:00.131 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-07 22:35:00.131 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-07 22:35:00.131 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-07 22:35:00.132 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-07 22:35:00.132 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-07 22:35:00.132 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-07 22:35:00.133 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-07 22:35:00.133 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-07 22:35:00.133 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-07 22:35:00.134 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-07 22:35:00.134 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-07 22:35:00.135 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-07 22:35:00.135 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-07 22:35:00.136 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT setval(
    pg_get_serial_sequence('"AspNetRoles"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetRoles") + 1,
        nextval(pg_get_serial_sequence('"AspNetRoles"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUsers"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUsers") + 1,
        nextval(pg_get_serial_sequence('"AspNetUsers"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Branch"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Branch") + 1,
        nextval(pg_get_serial_sequence('"Branch"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Currency"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Currency") + 1,
        nextval(pg_get_serial_sequence('"Currency"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ExpenseType"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ExpenseType") + 1,
        nextval(pg_get_serial_sequence('"ExpenseType"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Plan"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Plan") + 1,
        nextval(pg_get_serial_sequence('"Plan"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Status"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Status") + 1,
        nextval(pg_get_serial_sequence('"Status"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Account"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Account") + 1,
        nextval(pg_get_serial_sequence('"Account"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUserClaims"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUserClaims") + 1,
        nextval(pg_get_serial_sequence('"AspNetUserClaims"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"UserAccount"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "UserAccount") + 1,
        nextval(pg_get_serial_sequence('"UserAccount"', 'Id'))),
    false);
2023-03-07 22:35:00.137 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20230307173432_myMigration01', '7.0.3');
2023-03-07 22:35:49.107 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 22:35:49.200 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:35:49.200 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:35:49.200 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:35:49.200 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:35:49.200 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:35:49.200 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:35:49.200 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:35:49.200 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:35:49.200 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:35:51.496 +05:00 [INF] Executed DbCommand (201ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-03-07 22:35:52.767 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-03-07 22:35:53.531 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-03-07 22:35:53.548 +05:00 [INF] Applying migration '20230307173432_myMigration01'.
2023-03-07 22:35:54.357 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-03-07 22:35:54.535 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" text NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-03-07 22:35:54.715 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Currency" PRIMARY KEY ("Id")
);
2023-03-07 22:35:54.892 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT "PK_Expenses" PRIMARY KEY ("Id")
);
2023-03-07 22:35:55.069 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ExpenseType" PRIMARY KEY ("Id")
);
2023-03-07 22:35:55.245 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Parcel" PRIMARY KEY ("Id")
);
2023-03-07 22:35:55.422 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Cost" numeric(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Plan" PRIMARY KEY ("Id")
);
2023-03-07 22:35:55.599 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "Token" text NULL,
    "JwtId" text NULL,
    "IsUsed" boolean NOT NULL,
    "IsRevoked" boolean NOT NULL,
    "AddedDateTime" timestamp without time zone NOT NULL,
    "ExpiryDateTime" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_RefreshToken" PRIMARY KEY ("Id")
);
2023-03-07 22:35:55.781 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Status" PRIMARY KEY ("Id")
);
2023-03-07 22:35:55.957 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TokenId" text NULL,
    "RefreshToken" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Tokens" PRIMARY KEY ("Id")
);
2023-03-07 22:35:56.138 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:56.317 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric(18,3) NOT NULL,
    "BranchId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Account" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:56.495 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ToBranchId" integer NOT NULL,
    "FromBranchId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelBranch" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:56.675 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StateDeliveryToBranch" boolean NOT NULL,
    "StatePickingUp" boolean NOT NULL,
    "StateDeliveryToPoint" boolean NOT NULL,
    "StateBuyout" boolean NOT NULL,
    "CostPickingUp" numeric(18,3) NOT NULL,
    "CostDeliveryToPoint" numeric(18,3) NOT NULL,
    "CostDeliveryToBranch" numeric(18,3) NOT NULL,
    "CostBuyout" numeric NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelCost" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:56.853 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Description" varchar NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelDescription" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:57.030 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelImage" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:57.216 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" text NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelItem" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:57.398 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Cost" numeric(18,3) NOT NULL,
    "CourierId" text NULL,
    "JobType" varchar NULL,
    "ParcelId" integer NOT NULL,
    "PaymentState" boolean NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelJob" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:57.577 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Weight" numeric(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSize" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:57.755 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSound" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:57.934 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PlanId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelPlan" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-07 22:35:58.113 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StatusId" integer NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelStatus" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-07 22:35:58.294 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NULL,
    "LastName" text NULL,
    "Address" text NULL,
    "UserNameT" text NULL,
    "ChatId" bigint NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "ParcelJobId" integer NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-07 22:35:58.475 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "PayerId" text NULL,
    "PayerId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_AccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:58.654 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:58.831 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:59.008 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" integer NOT NULL,
    "RoleId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:59.184 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" integer NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:59.363 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SenderId" text NULL,
    "SenderId1" integer NULL,
    "RecepientId" text NULL,
    "RecepientId1" integer NULL,
    "RecepientStaffId" text NULL,
    "RecepientStaffId1" integer NULL,
    "SenderStaffId" text NULL,
    "SenderStaffId1" integer NULL,
    "RecepientCourierId" text NULL,
    "RecepientCourierId1" integer NULL,
    "SenderCourierId" text NULL,
    "SenderCourierId1" integer NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelOwners" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:59.541 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccount" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:59.721 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-07 22:35:59.962 +05:00 [INF] Executed DbCommand (241ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '62d65bae-26fe-4478-8c5a-028912ed52f8', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '745a2a87-3eec-4831-9648-ff3e0ca27f5f', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, 'ca38d0cc-67c2-4fcb-83fa-9ecdd0ee6130', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '18be39b6-69fa-4303-acb2-13c9ad627d6e', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '3072d295-e268-445f-9aae-2c5c58501d87', 'Customer', 'CUSTOMER');
2023-03-07 22:36:00.140 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '537ead06-91c5-4e77-9d74-8a4c24c98c0c', TIMESTAMP '2023-03-07 22:34:32.818126', NULL, 'administrator@gmail.com', FALSE, 'EDSystem', 'Administrator', FALSE, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998970000675', FALSE, NULL, FALSE, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '4d518d26-2c13-460b-b918-30d018a73dce', TIMESTAMP '2023-03-07 22:34:32.818127', NULL, 'hayrulloh@gmail.com', FALSE, 'EDTashkent', 'Hayrulloh', FALSE, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998935788886', FALSE, NULL, FALSE, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '99484c3d-c5a9-40b4-996f-43b88d4fd06e', TIMESTAMP '2023-03-07 22:34:32.818128', NULL, 'Nodir@gmail.com', FALSE, 'EDTashkent', 'Nodir', FALSE, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998909046605', FALSE, NULL, FALSE, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '7dfa1f3d-3dfb-4990-b102-f2254a385477', TIMESTAMP '2023-03-07 22:34:32.818131', NULL, 'Javohir@gmail.com', FALSE, 'EDTashkent', 'Javohir', FALSE, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998931710966', FALSE, NULL, FALSE, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '97a5ddd0-0a30-4208-af4d-79f82fe2dbcd', TIMESTAMP '2023-03-07 22:34:32.818132', NULL, 'Ismoil@gmail.com', FALSE, 'EDTashkent', 'Ismoil', FALSE, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998977093262', FALSE, NULL, FALSE, 'ismoil', 'UserName');
2023-03-07 22:36:00.318 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, TIMESTAMP '2023-03-07 22:34:32.786015', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, TIMESTAMP '2023-03-07 22:34:32.786015', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, TIMESTAMP '2023-03-07 22:34:32.786015', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, TIMESTAMP '2023-03-07 22:34:32.786016', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, TIMESTAMP '2023-03-07 22:34:32.786016', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, TIMESTAMP '2023-03-07 22:34:32.786016', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-07 22:36:00.493 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, TIMESTAMP '2023-03-07 22:34:32.818142', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, TIMESTAMP '2023-03-07 22:34:32.818142', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, TIMESTAMP '2023-03-07 22:34:32.818142', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, TIMESTAMP '2023-03-07 22:34:32.818142', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, TIMESTAMP '2023-03-07 22:34:32.818143', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, TIMESTAMP '2023-03-07 22:34:32.818143', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, TIMESTAMP '2023-03-07 22:34:32.818143', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, TIMESTAMP '2023-03-07 22:34:32.818143', NULL, NULL, 'Сомони', 972);
2023-03-07 22:36:00.673 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-07 22:34:32.786024', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-07 22:34:32.786024', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-07 22:36:00.855 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, 7.0, NULL, TIMESTAMP '2023-03-07 22:34:32.81814', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, 12.0, NULL, TIMESTAMP '2023-03-07 22:34:32.81814', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, 30.0, NULL, TIMESTAMP '2023-03-07 22:34:32.81814', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, 5.0, NULL, TIMESTAMP '2023-03-07 22:34:32.818141', NULL, 'Description', NULL, 'Авто');
2023-03-07 22:36:01.035 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-07 22:34:32.786002', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-07 22:34:32.786006', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-07 22:34:32.786006', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-07 22:34:32.786007', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-07 22:34:32.786007', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-07 22:34:32.786007', NULL, 'Выдан', NULL, 'Выдан');
2023-03-07 22:36:01.215 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 0.0, 1, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 0.0, 1, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 0.0, 2, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 0.0, 2, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 0.0, 3, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 0.0, 3, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.786019', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 0.0, 4, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786019', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 0.0, 4, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.786019', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, 0.0, 5, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.78602', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, 0.0, 5, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.78602', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, 0.0, 6, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.78602', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, 0.0, 6, NULL, 5, TIMESTAMP '2023-03-07 22:34:32.78602', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-07 22:36:01.393 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-07 22:36:01.569 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-07 22:36:01.758 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786022', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786022', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786022', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786023', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786023', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786023', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-07 22:36:01.934 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-07 22:36:02.112 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-07 22:36:02.287 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-07 22:36:02.463 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-07 22:36:02.641 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-07 22:36:02.816 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-07 22:36:02.992 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-07 22:36:03.168 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-07 22:36:03.346 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-07 22:36:03.522 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-07 22:36:03.697 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-07 22:36:03.873 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-07 22:36:04.049 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-07 22:36:04.225 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-07 22:36:04.401 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-07 22:36:04.576 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-07 22:36:04.752 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-07 22:36:04.934 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-07 22:36:05.112 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-07 22:36:05.288 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-07 22:36:05.463 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-07 22:36:05.639 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-07 22:36:05.815 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-07 22:36:05.993 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-07 22:36:06.169 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-07 22:36:06.344 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-07 22:36:06.519 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-07 22:36:06.695 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-07 22:36:06.871 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-07 22:36:07.047 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-07 22:36:07.222 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-07 22:36:07.400 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-07 22:36:07.575 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-07 22:36:07.763 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-07 22:36:07.938 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-07 22:36:08.116 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-07 22:36:08.291 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-07 22:36:08.469 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-07 22:36:08.644 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-07 22:36:08.822 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-07 22:36:08.998 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-07 22:36:09.176 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-07 22:36:09.355 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-07 22:36:09.530 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-07 22:36:09.707 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-07 22:36:09.884 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-07 22:36:10.064 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-07 22:36:10.246 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-07 22:36:10.422 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-07 22:36:10.598 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-07 22:36:10.774 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-07 22:36:10.950 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-07 22:36:11.125 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-07 22:36:11.301 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-07 22:36:11.478 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-07 22:36:11.653 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-07 22:36:11.833 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-07 22:36:12.009 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-07 22:36:12.187 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-07 22:36:12.363 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-07 22:36:12.538 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-07 22:36:12.715 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-07 22:36:12.898 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-07 22:36:13.073 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-07 22:36:13.250 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-07 22:36:13.444 +05:00 [INF] Executed DbCommand (194ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT setval(
    pg_get_serial_sequence('"AspNetRoles"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetRoles") + 1,
        nextval(pg_get_serial_sequence('"AspNetRoles"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUsers"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUsers") + 1,
        nextval(pg_get_serial_sequence('"AspNetUsers"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Branch"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Branch") + 1,
        nextval(pg_get_serial_sequence('"Branch"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Currency"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Currency") + 1,
        nextval(pg_get_serial_sequence('"Currency"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ExpenseType"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ExpenseType") + 1,
        nextval(pg_get_serial_sequence('"ExpenseType"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Plan"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Plan") + 1,
        nextval(pg_get_serial_sequence('"Plan"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Status"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Status") + 1,
        nextval(pg_get_serial_sequence('"Status"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Account"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Account") + 1,
        nextval(pg_get_serial_sequence('"Account"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUserClaims"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUserClaims") + 1,
        nextval(pg_get_serial_sequence('"AspNetUserClaims"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"UserAccount"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "UserAccount") + 1,
        nextval(pg_get_serial_sequence('"UserAccount"', 'Id'))),
    false);
2023-03-07 22:36:13.619 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20230307173432_myMigration01', '7.0.3');
2023-03-07 22:37:24.840 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 22:37:24.935 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:37:24.936 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:37:24.936 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:37:24.936 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:37:24.936 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:37:24.936 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:37:24.936 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:37:24.936 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:37:24.936 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:37:27.241 +05:00 [INF] Executed DbCommand (219ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
REVOKE CONNECT ON DATABASE newdatabasemine FROM PUBLIC;
SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE datname = 'newdatabasemine';
2023-03-07 22:37:27.482 +05:00 [INF] Executed DbCommand (240ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE newdatabasemine;
2023-03-07 22:37:28.149 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-07 22:37:28.191 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:37:28.191 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:37:28.191 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:37:28.191 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:37:28.191 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:37:28.191 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:37:28.191 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:37:28.191 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:37:28.191 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-07 22:37:29.135 +05:00 [INF] Executed DbCommand (385ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE newdatabasemine;
2023-03-07 22:37:30.719 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-03-07 22:37:30.906 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" text NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-03-07 22:37:31.092 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Currency" PRIMARY KEY ("Id")
);
2023-03-07 22:37:31.275 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT "PK_Expenses" PRIMARY KEY ("Id")
);
2023-03-07 22:37:31.460 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ExpenseType" PRIMARY KEY ("Id")
);
2023-03-07 22:37:31.644 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Parcel" PRIMARY KEY ("Id")
);
2023-03-07 22:37:31.827 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Cost" numeric(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Plan" PRIMARY KEY ("Id")
);
2023-03-07 22:37:32.010 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "Token" text NULL,
    "JwtId" text NULL,
    "IsUsed" boolean NOT NULL,
    "IsRevoked" boolean NOT NULL,
    "AddedDateTime" timestamp without time zone NOT NULL,
    "ExpiryDateTime" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_RefreshToken" PRIMARY KEY ("Id")
);
2023-03-07 22:37:32.193 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Status" PRIMARY KEY ("Id")
);
2023-03-07 22:37:32.375 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TokenId" text NULL,
    "RefreshToken" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Tokens" PRIMARY KEY ("Id")
);
2023-03-07 22:37:32.561 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-07 22:37:32.745 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric(18,3) NOT NULL,
    "BranchId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Account" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 22:37:32.927 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ToBranchId" integer NOT NULL,
    "FromBranchId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelBranch" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:37:33.110 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StateDeliveryToBranch" boolean NOT NULL,
    "StatePickingUp" boolean NOT NULL,
    "StateDeliveryToPoint" boolean NOT NULL,
    "StateBuyout" boolean NOT NULL,
    "CostPickingUp" numeric(18,3) NOT NULL,
    "CostDeliveryToPoint" numeric(18,3) NOT NULL,
    "CostDeliveryToBranch" numeric(18,3) NOT NULL,
    "CostBuyout" numeric NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelCost" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:37:33.296 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Description" varchar NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelDescription" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:37:33.480 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelImage" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:37:33.665 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" text NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelItem" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:37:33.852 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Cost" numeric(18,3) NOT NULL,
    "CourierId" text NULL,
    "JobType" varchar NULL,
    "ParcelId" integer NOT NULL,
    "PaymentState" boolean NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelJob" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:37:34.039 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Weight" numeric(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSize" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:37:34.220 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSound" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:37:34.403 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PlanId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelPlan" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-07 22:37:34.587 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StatusId" integer NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelStatus" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-07 22:37:34.769 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NULL,
    "LastName" text NULL,
    "Address" text NULL,
    "UserNameT" text NULL,
    "ChatId" bigint NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "ParcelJobId" integer NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-07 22:37:34.953 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "PayerId" text NULL,
    "PayerId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_AccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:37:35.135 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 22:37:35.317 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 22:37:35.501 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" integer NOT NULL,
    "RoleId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 22:37:35.684 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" integer NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-07 22:37:35.869 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SenderId" text NULL,
    "SenderId1" integer NULL,
    "RecepientId" text NULL,
    "RecepientId1" integer NULL,
    "RecepientStaffId" text NULL,
    "RecepientStaffId1" integer NULL,
    "SenderStaffId" text NULL,
    "SenderStaffId1" integer NULL,
    "RecepientCourierId" text NULL,
    "RecepientCourierId1" integer NULL,
    "SenderCourierId" text NULL,
    "SenderCourierId1" integer NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelOwners" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-07 22:37:36.051 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccount" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-07 22:37:36.235 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-07 22:37:36.417 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '29028b82-7b63-4f91-8c53-e6190bde6b67', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '03cdbd46-02b7-4ec8-8eda-765e65adde77', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '19cd4cf7-0761-4439-9703-f31cd84d91b4', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '6ec8907f-a9f5-4b49-a94f-f51d7eedb66c', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '4a00654e-9896-46b1-b213-afb6d11c7517', 'Customer', 'CUSTOMER');
2023-03-07 22:37:36.601 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'eb6129ec-ea2d-4b9f-b8ba-d2073c42efdb', TIMESTAMP '2023-03-07 22:37:28.148817', NULL, 'administrator@gmail.com', FALSE, 'EDSystem', 'Administrator', FALSE, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEBWnz1ej7csYu618tMG791jhWxZK5xFbQZr5ZhHubBhz00fLrvhU00PaR4B0nuoH5w==', '998970000675', FALSE, NULL, FALSE, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '2c76e6a2-d036-4788-a187-110188e7e502', TIMESTAMP '2023-03-07 22:37:28.14882', NULL, 'hayrulloh@gmail.com', FALSE, 'EDTashkent', 'Hayrulloh', FALSE, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEBWnz1ej7csYu618tMG791jhWxZK5xFbQZr5ZhHubBhz00fLrvhU00PaR4B0nuoH5w==', '998935788886', FALSE, NULL, FALSE, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'cc75cc63-4e86-4f4f-bc5d-7a49ea6cde30', TIMESTAMP '2023-03-07 22:37:28.148821', NULL, 'Nodir@gmail.com', FALSE, 'EDTashkent', 'Nodir', FALSE, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEBWnz1ej7csYu618tMG791jhWxZK5xFbQZr5ZhHubBhz00fLrvhU00PaR4B0nuoH5w==', '998909046605', FALSE, NULL, FALSE, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'f3c9d45c-377b-4598-8688-afd21976ca21', TIMESTAMP '2023-03-07 22:37:28.148822', NULL, 'Javohir@gmail.com', FALSE, 'EDTashkent', 'Javohir', FALSE, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEBWnz1ej7csYu618tMG791jhWxZK5xFbQZr5ZhHubBhz00fLrvhU00PaR4B0nuoH5w==', '998931710966', FALSE, NULL, FALSE, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'c43e6c21-70f8-4ada-a8a6-101d17284dbb', TIMESTAMP '2023-03-07 22:37:28.148823', NULL, 'Ismoil@gmail.com', FALSE, 'EDTashkent', 'Ismoil', FALSE, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEBWnz1ej7csYu618tMG791jhWxZK5xFbQZr5ZhHubBhz00fLrvhU00PaR4B0nuoH5w==', '998977093262', FALSE, NULL, FALSE, 'ismoil', 'UserName');
2023-03-07 22:37:36.782 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, TIMESTAMP '2023-03-07 22:37:28.116068', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, TIMESTAMP '2023-03-07 22:37:28.116068', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, TIMESTAMP '2023-03-07 22:37:28.116068', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, TIMESTAMP '2023-03-07 22:37:28.116069', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, TIMESTAMP '2023-03-07 22:37:28.116069', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, TIMESTAMP '2023-03-07 22:37:28.116069', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-07 22:37:36.962 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, TIMESTAMP '2023-03-07 22:37:28.148847', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, TIMESTAMP '2023-03-07 22:37:28.148847', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, TIMESTAMP '2023-03-07 22:37:28.148847', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, TIMESTAMP '2023-03-07 22:37:28.148847', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, TIMESTAMP '2023-03-07 22:37:28.148848', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, TIMESTAMP '2023-03-07 22:37:28.148848', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, TIMESTAMP '2023-03-07 22:37:28.148848', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, TIMESTAMP '2023-03-07 22:37:28.148848', NULL, NULL, 'Сомони', 972);
2023-03-07 22:37:37.144 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-07 22:37:28.116079', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-07 22:37:28.11608', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-07 22:37:28.11608', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-07 22:37:28.11608', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-07 22:37:28.11608', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-07 22:37:28.11608', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, TIMESTAMP '2023-03-07 22:37:28.11608', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, TIMESTAMP '2023-03-07 22:37:28.116081', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, TIMESTAMP '2023-03-07 22:37:28.116081', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, TIMESTAMP '2023-03-07 22:37:28.116081', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, TIMESTAMP '2023-03-07 22:37:28.116081', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, TIMESTAMP '2023-03-07 22:37:28.116081', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, TIMESTAMP '2023-03-07 22:37:28.116081', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-07 22:37:37.325 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, 7.0, NULL, TIMESTAMP '2023-03-07 22:37:28.148844', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, 12.0, NULL, TIMESTAMP '2023-03-07 22:37:28.148845', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, 30.0, NULL, TIMESTAMP '2023-03-07 22:37:28.148845', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, 5.0, NULL, TIMESTAMP '2023-03-07 22:37:28.148845', NULL, 'Description', NULL, 'Авто');
2023-03-07 22:37:37.506 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-07 22:37:28.11606', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-07 22:37:28.116062', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-07 22:37:28.116063', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-07 22:37:28.116063', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-07 22:37:28.116064', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-07 22:37:28.116064', NULL, 'Выдан', NULL, 'Выдан');
2023-03-07 22:37:37.690 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 0.0, 1, NULL, 1, TIMESTAMP '2023-03-07 22:37:28.116071', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 0.0, 1, NULL, 2, TIMESTAMP '2023-03-07 22:37:28.116071', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 0.0, 2, NULL, 1, TIMESTAMP '2023-03-07 22:37:28.116072', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 0.0, 2, NULL, 2, TIMESTAMP '2023-03-07 22:37:28.116072', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 0.0, 3, NULL, 1, TIMESTAMP '2023-03-07 22:37:28.116072', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 0.0, 3, NULL, 2, TIMESTAMP '2023-03-07 22:37:28.116072', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 0.0, 4, NULL, 1, TIMESTAMP '2023-03-07 22:37:28.116072', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 0.0, 4, NULL, 2, TIMESTAMP '2023-03-07 22:37:28.116073', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, 0.0, 5, NULL, 1, TIMESTAMP '2023-03-07 22:37:28.116073', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, 0.0, 5, NULL, 2, TIMESTAMP '2023-03-07 22:37:28.116073', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, 0.0, 6, NULL, 1, TIMESTAMP '2023-03-07 22:37:28.116073', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, 0.0, 6, NULL, 5, TIMESTAMP '2023-03-07 22:37:28.116073', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-07 22:37:37.883 +05:00 [INF] Executed DbCommand (193ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-07 22:37:38.066 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-07 22:37:38.246 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:37:28.116075', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:37:28.116075', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:37:28.116077', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:37:28.116077', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:37:28.116078', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:37:28.116078', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-07 22:37:38.430 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-07 22:37:38.612 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-07 22:37:38.792 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-07 22:37:38.973 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-07 22:37:39.155 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-07 22:37:39.335 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-07 22:37:39.516 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-07 22:37:39.696 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-07 22:37:39.876 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-07 22:37:40.057 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-07 22:37:40.238 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-07 22:37:40.418 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-07 22:37:40.600 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-07 22:37:40.780 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-07 22:37:40.961 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-07 22:37:41.141 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-07 22:37:41.323 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-07 22:37:41.502 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-07 22:37:41.687 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-07 22:37:41.871 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-07 22:37:42.054 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-07 22:37:42.234 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-07 22:37:42.418 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-07 22:37:42.605 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-07 22:37:42.785 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-07 22:37:42.966 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-07 22:37:43.152 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-07 22:37:43.333 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-07 22:37:43.515 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-07 22:37:43.697 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-07 22:37:43.879 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-07 22:37:44.059 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-07 22:37:44.245 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-07 22:37:44.426 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-07 22:37:44.611 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-07 22:37:44.791 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-07 22:37:44.973 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-07 22:37:45.156 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-07 22:37:45.336 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-07 22:37:45.516 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-07 22:37:45.697 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-07 22:37:45.878 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-07 22:37:46.060 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-07 22:37:46.241 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-07 22:37:46.423 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-07 22:37:46.605 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-07 22:37:46.784 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-07 22:37:46.970 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-07 22:37:47.152 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-07 22:37:47.334 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-07 22:37:47.515 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-07 22:37:47.696 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-07 22:37:47.876 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-07 22:37:48.056 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-07 22:37:48.237 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-07 22:37:48.430 +05:00 [INF] Executed DbCommand (193ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-07 22:37:48.610 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-07 22:37:48.792 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-07 22:37:48.975 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-07 22:37:49.155 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-07 22:37:49.335 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-07 22:37:49.519 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-07 22:37:49.699 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-07 22:37:49.880 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-07 22:37:50.061 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-07 22:37:50.246 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT setval(
    pg_get_serial_sequence('"AspNetRoles"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetRoles") + 1,
        nextval(pg_get_serial_sequence('"AspNetRoles"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUsers"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUsers") + 1,
        nextval(pg_get_serial_sequence('"AspNetUsers"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Branch"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Branch") + 1,
        nextval(pg_get_serial_sequence('"Branch"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Currency"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Currency") + 1,
        nextval(pg_get_serial_sequence('"Currency"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ExpenseType"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ExpenseType") + 1,
        nextval(pg_get_serial_sequence('"ExpenseType"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Plan"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Plan") + 1,
        nextval(pg_get_serial_sequence('"Plan"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Status"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Status") + 1,
        nextval(pg_get_serial_sequence('"Status"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Account"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Account") + 1,
        nextval(pg_get_serial_sequence('"Account"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUserClaims"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUserClaims") + 1,
        nextval(pg_get_serial_sequence('"AspNetUserClaims"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"UserAccount"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "UserAccount") + 1,
        nextval(pg_get_serial_sequence('"UserAccount"', 'Id'))),
    false);
2023-03-07 22:37:50.497 +05:00 [INF] User profile is available. Using '/Users/a_ashurov/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-07 22:37:50.751 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-07 22:37:50.751 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-07 22:37:50.776 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-07 22:37:50.776 +05:00 [INF] Hosting environment: Development
2023-03-07 22:37:50.776 +05:00 [INF] Content root path: /Users/a_ashurov/Desktop/MyFutureProjects/EDSystems.CICD.CDInt/EDSystems.WebApi
2023-03-07 22:37:51.882 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger - -
2023-03-07 22:37:51.905 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger - - - 301 0 - 23.2297ms
2023-03-07 22:37:51.933 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-07 22:37:51.965 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 32.1130ms
2023-03-07 22:37:51.972 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/swagger-ui.css - -
2023-03-07 22:37:51.972 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/swagger-ui-bundle.js - -
2023-03-07 22:37:52.072 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/swagger-ui-standalone-preset.js - -
2023-03-07 22:37:52.080 +05:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-03-07 22:37:52.080 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/swagger-ui.css - - - 200 144929 text/css 108.0160ms
2023-03-07 22:37:52.134 +05:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2023-03-07 22:37:52.134 +05:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-03-07 22:37:52.136 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/swagger-ui-standalone-preset.js - - - 200 312163 text/javascript 63.9574ms
2023-03-07 22:37:52.136 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/swagger-ui-bundle.js - - - 200 1061536 text/javascript 163.7681ms
2023-03-07 22:37:52.212 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-07 22:37:52.219 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/favicon-32x32.png - -
2023-03-07 22:37:52.219 +05:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-03-07 22:37:52.219 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/favicon-32x32.png - - - 200 628 image/png 0.2194ms
2023-03-07 22:37:52.470 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 258.2635ms
2023-03-07 22:38:43.590 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-07 22:38:43.619 +05:00 [INF] CORS policy execution successful.
2023-03-07 22:38:43.641 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 22:38:43.650 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-07 22:38:45.248 +05:00 [INF] Executed DbCommand (217ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
FROM "AspNetUsers" AS a
WHERE a."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-07 22:38:46.177 +05:00 [INF] Executed DbCommand (190ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2023-03-07 22:38:46.956 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2023-03-07 22:38:47.727 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-07 22:38:48.504 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a."ClaimType", a."ClaimValue"
FROM "AspNetRoleClaims" AS a
WHERE a."RoleId" = @__role_Id_0
2023-03-07 22:38:49.258 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2023-03-07 22:38:49.344 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"66MQJW2B8YUNPQVU1MH0QM7KCXPFYHI8NRAc0041f97-676d-45e4-a75b-54953dd41265","JwtId":"fae13d66-42c7-466d-90ed-7d1919ece802","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-07T17:38:49.3361500Z","ExpiryDateTime":"2023-09-07T17:38:49.3361750Z","$type":"RefreshTokenCommand"}
2023-03-07 22:38:50.138 +05:00 [INF] Executed DbCommand (197ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-07 22:38:50.206 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-07 22:38:50.219 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 6567.2825ms
2023-03-07 22:38:50.220 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-07 22:38:50.222 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 2412 application/json;+charset=utf-8 6632.2061ms
2023-03-07 22:40:04.042 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination - -
2023-03-07 22:40:04.060 +05:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
ClaimsAuthorizationRequirement:Claim.Type=CanGetAllBranchesWithPagination
2023-03-07 22:40:04.062 +05:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-03-07 22:40:04.062 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination - - - 401 0 - 19.8632ms
2023-03-07 22:40:10.038 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-07 22:40:10.046 +05:00 [INF] Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
ClaimsAuthorizationRequirement:Claim.Type=CanGetAllBranchesWithPagination
2023-03-07 22:40:10.046 +05:00 [INF] AuthenticationScheme: Bearer was challenged.
2023-03-07 22:40:10.047 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 401 0 - 8.3964ms
2023-03-07 22:41:13.214 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/1 - -
2023-03-07 22:41:13.251 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-07 22:41:13.254 +05:00 [INF] Route matched with {action = "Get", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm]] Get(Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-07 22:41:13.257 +05:00 [INF] NotesRequest: GetUserDetailsQuery {"Id":1,"$type":"GetUserDetailsQuery"}
2023-03-07 22:41:14.632 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Address", t."ChatId", t."ConcurrencyStamp", t."DateCreated", t."DateUpdated", t."Email", t."EmailConfirmed", t."FirstName", t."LastName", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."ParcelJobId", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."UserNameT", t0."UserId", t0."RoleId", t0."Id", t0."ConcurrencyStamp", t0."Name", t0."NormalizedName"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__request_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT a0."UserId", a0."RoleId", a1."Id", a1."ConcurrencyStamp", a1."Name", a1."NormalizedName"
    FROM "AspNetUserRoles" AS a0
    INNER JOIN "AspNetRoles" AS a1 ON a0."RoleId" = a1."Id"
) AS t0 ON t."Id" = t0."UserId"
ORDER BY t."Id", t0."UserId", t0."RoleId"
2023-03-07 22:41:14.674 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm'.
2023-03-07 22:41:14.682 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi) in 1427.9442ms
2023-03-07 22:41:14.682 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-07 22:41:14.682 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/1 - - - 200 303 application/json;+charset=utf-8 1468.4714ms
2023-03-07 22:41:19.776 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - -
2023-03-07 22:41:19.782 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-07 22:41:19.783 +05:00 [INF] Route matched with {action = "Get", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm]] Get(Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-07 22:41:19.785 +05:00 [INF] NotesRequest: GetUserDetailsQuery {"Id":2,"$type":"GetUserDetailsQuery"}
2023-03-07 22:41:20.502 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Address", t."ChatId", t."ConcurrencyStamp", t."DateCreated", t."DateUpdated", t."Email", t."EmailConfirmed", t."FirstName", t."LastName", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."ParcelJobId", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."UserNameT", t0."UserId", t0."RoleId", t0."Id", t0."ConcurrencyStamp", t0."Name", t0."NormalizedName"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__request_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT a0."UserId", a0."RoleId", a1."Id", a1."ConcurrencyStamp", a1."Name", a1."NormalizedName"
    FROM "AspNetUserRoles" AS a0
    INNER JOIN "AspNetRoles" AS a1 ON a0."RoleId" = a1."Id"
) AS t0 ON t."Id" = t0."UserId"
ORDER BY t."Id", t0."UserId", t0."RoleId"
2023-03-07 22:41:20.512 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm'.
2023-03-07 22:41:20.513 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi) in 730.1831ms
2023-03-07 22:41:20.513 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-07 22:41:20.514 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - - - 200 294 application/json;+charset=utf-8 737.8120ms
2023-03-07 22:41:48.551 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-07 22:41:48.552 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 22:41:48.554 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserListWithPagination.UserListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-07 22:41:48.569 +05:00 [INF] NotesRequest: GetUserListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetUserListWithPaginationQuery"}
2023-03-07 22:41:49.667 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "AspNetUsers" AS a
2023-03-07 22:41:50.428 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.c, t."FirstName", t."LastName", t."Address", t."PhoneNumber", t."Id", t0."UserId", t0."RoleId", t0."Id", t0."ConcurrencyStamp", t0."Name", t0."NormalizedName", t."DateCreated", t."DateUpdated"
FROM (
    SELECT a."Id"::text AS c, a."FirstName", a."LastName", a."Address", a."PhoneNumber", a."DateCreated", a."DateUpdated", a."Id"
    FROM "AspNetUsers" AS a
    ORDER BY a."DateCreated"
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT a0."UserId", a0."RoleId", a1."Id", a1."ConcurrencyStamp", a1."Name", a1."NormalizedName"
    FROM "AspNetUserRoles" AS a0
    INNER JOIN "AspNetRoles" AS a1 ON a0."RoleId" = a1."Id"
) AS t0 ON t."Id" = t0."UserId"
ORDER BY t."DateCreated", t."Id", t0."UserId", t0."RoleId"
2023-03-07 22:41:50.448 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.Users.Queries.GetUserListWithPagination.UserLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-07 22:41:50.461 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.GetAllWithPagination (EDSystems.WebApi) in 1907.0697ms
2023-03-07 22:41:50.462 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 22:41:50.462 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/WithPagination?PageNumber=1&PageSize=2 - - - 200 690 application/json;+charset=utf-8 1911.4986ms
2023-03-07 22:41:59.819 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/WithPagination?PageNumber=1&PageSize=5 - -
2023-03-07 22:41:59.820 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 22:41:59.820 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserListWithPagination.UserListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-07 22:41:59.822 +05:00 [INF] NotesRequest: GetUserListWithPaginationQuery {"PageNumber":1,"PageSize":5,"$type":"GetUserListWithPaginationQuery"}
2023-03-07 22:42:00.562 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "AspNetUsers" AS a
2023-03-07 22:42:01.297 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.c, t."FirstName", t."LastName", t."Address", t."PhoneNumber", t."Id", t0."UserId", t0."RoleId", t0."Id", t0."ConcurrencyStamp", t0."Name", t0."NormalizedName", t."DateCreated", t."DateUpdated"
FROM (
    SELECT a."Id"::text AS c, a."FirstName", a."LastName", a."Address", a."PhoneNumber", a."DateCreated", a."DateUpdated", a."Id"
    FROM "AspNetUsers" AS a
    ORDER BY a."DateCreated"
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT a0."UserId", a0."RoleId", a1."Id", a1."ConcurrencyStamp", a1."Name", a1."NormalizedName"
    FROM "AspNetUserRoles" AS a0
    INNER JOIN "AspNetRoles" AS a1 ON a0."RoleId" = a1."Id"
) AS t0 ON t."Id" = t0."UserId"
ORDER BY t."DateCreated", t."Id", t0."UserId", t0."RoleId"
2023-03-07 22:42:01.299 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.Users.Queries.GetUserListWithPagination.UserLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-07 22:42:01.301 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.GetAllWithPagination (EDSystems.WebApi) in 1480.3518ms
2023-03-07 22:42:01.301 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 22:42:01.302 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/WithPagination?PageNumber=1&PageSize=5 - - - 200 1456 application/json;+charset=utf-8 1482.6923ms
2023-03-07 22:42:32.229 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserAccount/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-07 22:42:32.232 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserAccountController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 22:42:32.241 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "UserAccount"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.UserAccounts.GetUserAccountListWithPagination.UserAccountListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.UserAccountController (EDSystems.WebApi).
2023-03-07 22:42:32.244 +05:00 [INF] NotesRequest: GetUserAccountListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetUserAccountListWithPaginationQuery"}
2023-03-07 22:42:33.249 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "UserAccount" AS u
2023-03-07 22:42:34.019 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."Number", t."Name", t."Balance", a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT", c."Id", c."Code", c."Country", c."CreatedBy", c."DateCreated", c."DateUpdated", c."ModifiedBy", c."Name", c."Number", t."DateCreated", t."DateUpdated"
FROM (
    SELECT u."Id", u."Balance", u."CurrencyId", u."DateCreated", u."DateUpdated", u."Name", u."Number", u."UserId1"
    FROM "UserAccount" AS u
    ORDER BY u."Id"
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN "AspNetUsers" AS a ON t."UserId1" = a."Id"
INNER JOIN "Currency" AS c ON t."CurrencyId" = c."Id"
ORDER BY t."Id"
2023-03-07 22:42:34.043 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.UserAccounts.GetUserAccountListWithPagination.UserAccountLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-07 22:42:34.073 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserAccountController.GetAllWithPagination (EDSystems.WebApi) in 1831.5995ms
2023-03-07 22:42:34.073 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserAccountController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-07 22:42:34.073 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserAccount/WithPagination?PageNumber=1&PageSize=2 - - - 200 949 application/json;+charset=utf-8 1843.7950ms
