2023-01-04 10:39:33.428 +05:00 [INF] Executed DbCommand (94ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-01-04 10:39:34.134 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-01-04 10:39:34.135 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NOT NULL,
    "Country" TEXT NOT NULL,
    "Code" TEXT NULL,
    "City" TEXT NOT NULL,
    "Address" TEXT NOT NULL,
    "Email" TEXT NOT NULL,
    "Phone" string NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 10:39:34.136 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" string NULL,
    "Code" string NULL,
    "Number" INTEGER NOT NULL,
    "Country" string NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 10:39:34.136 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-01-04 10:39:34.136 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 10:39:34.137 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 10:39:34.137 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Cost" decimal(18,3) NOT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 10:39:34.137 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" TEXT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-01-04 10:39:34.137 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 10:39:34.137 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 10:39:34.137 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" TEXT NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-01-04 10:39:34.137 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" TEXT NULL,
    "Name" TEXT NULL,
    "Balance" TEXT NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-01-04 10:39:34.138 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 10:39:34.138 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 10:39:34.138 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" string NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 10:39:34.138 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" string NULL,
    "ImageBytes" string NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 10:39:34.138 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "Cost" TEXT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 10:39:34.138 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" TEXT NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" TEXT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 10:39:34.138 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 10:39:34.139 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" string NULL,
    "SoundBytes" string NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 10:39:34.139 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-01-04 10:39:34.139 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-01-04 10:39:34.139 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-01-04 10:39:34.139 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId" FOREIGN KEY ("PayerId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 10:39:34.139 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" TEXT NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    "Discriminator" TEXT NOT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 10:39:34.140 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" TEXT NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 10:39:34.140 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" TEXT NOT NULL,
    "RoleId" TEXT NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 10:39:34.140 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" TEXT NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 10:39:34.141 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "RecepientId" TEXT NULL,
    "RecepientStaffId" TEXT NULL,
    "SenderStaffId" TEXT NULL,
    "RecepientCourierId" TEXT NULL,
    "SenderCourierId" TEXT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId" FOREIGN KEY ("RecepientCourierId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId" FOREIGN KEY ("RecepientId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId" FOREIGN KEY ("RecepientStaffId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId" FOREIGN KEY ("SenderCourierId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId" FOREIGN KEY ("SenderId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId" FOREIGN KEY ("SenderStaffId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 10:39:34.141 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" TEXT NULL,
    "Name" TEXT NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-01-04 10:39:34.141 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-01-04 10:39:34.142 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('2c5e174e-3b0e-446f-86af-483d56fd7210', '65715e8a-d0d4-4e6b-a29a-97ba18cb68fa', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('336b1b38-f4c9-4844-8dcb-b59a0d7f0533', 'f01cbec8-7df7-4fbc-aa46-2c79bba65aef', 'Customer', 'CUSTOMER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'b410c35b-50be-4ac9-ad2d-f13b5ed80f87', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('5919c97a-b888-4858-bbbe-0123a1952624', 'f48f3748-28b2-4520-83db-44b7c4b3f72c', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '9261b902-b7f8-4904-a6e5-dd102c523ce8', 'Manager', 'MANAGER');
2023-01-04 10:39:34.143 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('0a1e5c27-0b09-4f60-a9c3-8618791a8672', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '99914d77-2587-421a-b740-a352306098db', '2023-01-04 10:39:33.6099473', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEA4ANn3tyH9ChG2wbGUWA5qhP5X1bKkphAs4sGODE1BAzG82TaBEeqbXpfARkewHsQ==', '998977093262', 0, '965c2f6e-d711-49db-96bd-4c3311482ac0', 0, 'ismoil', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('11fafeb4-c7c1-463c-bb1e-55203e68dfdf', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'f094564b-ed9c-490e-b19e-70bfbf15127b', '2023-01-04 10:39:33.6099648', NULL, 'Umar@gmail.com', 0, 'EDMoscow', 'Umar', 0, NULL, 'UMAR@GMAIL.COM', 'UMAR', NULL, 'AQAAAAIAAYagAAAAEA4ANn3tyH9ChG2wbGUWA5qhP5X1bKkphAs4sGODE1BAzG82TaBEeqbXpfARkewHsQ==', '79963321030', 0, '768122d3-3da5-432e-beb4-cfe1c81250fa', 0, 'umar', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('131d5dd1-6bf1-4f52-be90-00815000fb57', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '11b331b0-51b4-44f6-b1f0-d04b606c048f', '2023-01-04 10:39:33.6099501', NULL, 'Khikmatillo@gmail.com', 0, 'EDTashkent', 'Khikmatillo', 0, NULL, 'KHIKMATILLO@GMAIL.COM', 'KHIKMATILLO', NULL, 'AQAAAAIAAYagAAAAEA4ANn3tyH9ChG2wbGUWA5qhP5X1bKkphAs4sGODE1BAzG82TaBEeqbXpfARkewHsQ==', '998974468090', 0, '6f6c0053-7611-4bec-b66f-d0267434c652', 0, 'khikmatillo', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('221c0048-08c9-4e72-8f5c-ddf4039f9488', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '83487433-0751-4486-9f2c-5fd29740ecd8', '2023-01-04 10:39:33.6099511', NULL, 'Abbos@gmail.com', 0, 'EDTashkent', 'Abbos', 0, NULL, 'ABBOS@GMAIL.COM', 'ABBOS', NULL, 'AQAAAAIAAYagAAAAEA4ANn3tyH9ChG2wbGUWA5qhP5X1bKkphAs4sGODE1BAzG82TaBEeqbXpfARkewHsQ==', '998903550022', 0, '100187c7-7be5-4531-97f1-cae3720a8313', 0, 'abbos', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('30a8f9cc-8d37-4d93-ab2f-774428387e4a', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '0c081286-4b71-4b17-a149-281526dd6188', '2023-01-04 10:39:33.6099419', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEA4ANn3tyH9ChG2wbGUWA5qhP5X1bKkphAs4sGODE1BAzG82TaBEeqbXpfARkewHsQ==', '998970000675', 0, '7d90b195-a83e-443a-91e1-ea716a04f380', 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('34a0eb9b-6797-40f7-a84c-aa31cdd4cdc6', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '733e0e49-887e-4524-a8e1-773131a4408c', '2023-01-04 10:39:33.6099491', NULL, 'Ubaydulla@gmail.com', 0, 'EDTashkent', 'Ubaydulla', 0, NULL, 'UBAYDULLA@GMAIL.COM', 'UBAYDULLA', NULL, 'AQAAAAIAAYagAAAAEA4ANn3tyH9ChG2wbGUWA5qhP5X1bKkphAs4sGODE1BAzG82TaBEeqbXpfARkewHsQ==', '998990500033', 0, 'fe811011-12a4-49c3-8540-12f1d9060d6c', 0, 'ubaydulla', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('3b9d7f21-1d66-4c98-8648-64a68777bccb', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '3d7c5913-1e00-4b9d-b9c6-ef1ea0b49992', '2023-01-04 10:39:33.6099465', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEA4ANn3tyH9ChG2wbGUWA5qhP5X1bKkphAs4sGODE1BAzG82TaBEeqbXpfARkewHsQ==', '998931710966', 0, 'fd496243-63cc-4bf4-b813-c8b3a4b7ba68', 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('4ff7819d-8e17-4aa8-a0da-964c2db21591', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '3422d3b1-8548-43dc-b313-611cf139f695', '2023-01-04 10:39:33.6099537', NULL, 'Ulugbek@gmail.com', 0, 'EDMoscow', 'Ulugbek', 0, NULL, 'ULUGBEK@GMAIL.COM', 'ULUGBEK', NULL, 'AQAAAAIAAYagAAAAEA4ANn3tyH9ChG2wbGUWA5qhP5X1bKkphAs4sGODE1BAzG82TaBEeqbXpfARkewHsQ==', '79777403487', 0, '7e0809c3-e0b7-4c4c-9d81-077c242e708a', 0, 'ulugbek', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('5a6f1681-c582-46f5-905b-4eb2c222dcf5', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '5bf8c2a2-65cb-4857-8275-c4a37de6bafc', '2023-01-04 10:39:33.6099453', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEA4ANn3tyH9ChG2wbGUWA5qhP5X1bKkphAs4sGODE1BAzG82TaBEeqbXpfARkewHsQ==', '998909046605', 0, '40dce617-6f37-48e1-9f25-86d73c0a77c1', 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('92b7c777-0d3e-4026-844f-20164bb0f97e', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '9e18b83b-53d2-4917-9ce0-ac4900e68358', '2023-01-04 10:39:33.6099658', NULL, 'Abror@gmail.com', 0, 'EDMoscow', 'Abror', 0, NULL, 'ABROR@GMAIL.COM', 'ABROR', NULL, 'AQAAAAIAAYagAAAAEA4ANn3tyH9ChG2wbGUWA5qhP5X1bKkphAs4sGODE1BAzG82TaBEeqbXpfARkewHsQ==', '79296800899', 0, 'b6fa5512-a3ca-425a-942b-8f0f9aed6205', 0, 'abror', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('92db214d-cd73-4fbc-8b34-1dc0709ba0b2', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '71f343f9-278d-4d18-9dbd-55f9e539bf7a', '2023-01-04 10:39:33.6099615', NULL, 'Abdulaziz@gmail.com', 0, 'EDMoscow', 'Abdulaziz', 0, NULL, 'ABDULAZIZ@GMAIL.COM', 'ABDULAZIZ', NULL, 'AQAAAAIAAYagAAAAEA4ANn3tyH9ChG2wbGUWA5qhP5X1bKkphAs4sGODE1BAzG82TaBEeqbXpfARkewHsQ==', '79691799000', 0, 'c038dc85-30a2-4e53-85df-9acd998e1999', 0, 'abdulaziz', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('9c57fadd-110a-4b45-aa89-69aa141564c6', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'b5c7178e-c609-431d-b7d9-8a357c0eea1c', '2023-01-04 10:39:33.6099625', NULL, 'Doniyor@gmail.com', 0, 'EDMoscow', 'Doniyor', 0, NULL, 'DONIYOR@GMAIL.COM', 'DONIYOR', NULL, 'AQAAAAIAAYagAAAAEA4ANn3tyH9ChG2wbGUWA5qhP5X1bKkphAs4sGODE1BAzG82TaBEeqbXpfARkewHsQ==', '79777601654', 0, '1c3840f8-7691-4732-ad6e-e4356451311a', 0, 'doniyor', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('cadaa51d-ddb3-4564-a8c5-79e80c98a032', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '3c15d35d-428e-41a1-a3d1-a768f0e607be', '2023-01-04 10:39:33.6099445', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEA4ANn3tyH9ChG2wbGUWA5qhP5X1bKkphAs4sGODE1BAzG82TaBEeqbXpfARkewHsQ==', '998935788886', 0, 'e33e531c-74d0-42e7-8afd-a7a23cf4279a', 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('e0c3bef9-fd70-421e-b07b-055c38b6d77c', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '72ddf3d5-1d50-4ced-9076-fc394c475973', '2023-01-04 10:39:33.6099529', NULL, 'Shohruh@gmail.com', 0, 'EDMoscow', 'Shohruh', 0, NULL, 'SHOHRUH@GMAIL.COM', 'SHOHRUH', NULL, 'AQAAAAIAAYagAAAAEA4ANn3tyH9ChG2wbGUWA5qhP5X1bKkphAs4sGODE1BAzG82TaBEeqbXpfARkewHsQ==', '79060470085', 0, 'cd9d0455-fa69-4608-9faf-e72d50606bc9', 0, 'shohruh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('e13b576b-afbe-4b4c-aaad-64fd9bee3852', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '18d55b2c-f2fc-42b2-8e5f-a2818e93507b', '2023-01-04 10:39:33.6099482', NULL, 'Sadulla@gmail.com', 0, 'EDTashkent', 'Sadulla', 0, NULL, 'SADULLA@GMAIL.COM', 'SADULLA', NULL, 'AQAAAAIAAYagAAAAEA4ANn3tyH9ChG2wbGUWA5qhP5X1bKkphAs4sGODE1BAzG82TaBEeqbXpfARkewHsQ==', '998994885995', 0, 'f3f04871-9eb4-4ce5-b51f-415cbe328033', 0, 'sadulla', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('eb6a85b0-a7fb-4f8e-9bea-03825e6f020f', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'b81e0cf2-8ed5-40ae-82f1-50ea7bcd8875', '2023-01-04 10:39:33.6099634', NULL, 'Shaxzod@gmail.com', 0, 'EDMoscow', 'Shaxzod', 0, NULL, 'SHAXZOD@GMAIL.COM', 'SHAXZOD', NULL, 'AQAAAAIAAYagAAAAEA4ANn3tyH9ChG2wbGUWA5qhP5X1bKkphAs4sGODE1BAzG82TaBEeqbXpfARkewHsQ==', '79163870009', 0, 'df02c6d6-67f1-4f4d-9874-0da22e1a8cee', 0, 'shaxzod', 'UserName');
2023-01-04 10:39:34.143 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-01-04 10:39:33.5471895', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-01-04 10:39:33.5471897', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-01-04 10:39:33.5471899', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-01-04 10:39:33.54719', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-01-04 10:39:33.5471902', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-01-04 10:39:33.5471904', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-01-04 10:39:34.143 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-01-04 10:39:33.6099902', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-01-04 10:39:33.6099904', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-01-04 10:39:33.6099906', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-01-04 10:39:33.6099907', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-01-04 10:39:33.6099909', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-01-04 10:39:33.609991', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-01-04 10:39:33.6099911', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-01-04 10:39:33.6099914', NULL, NULL, 'Сомони', 972);
2023-01-04 10:39:34.143 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-01-04 10:39:33.5471984', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-01-04 10:39:33.5471986', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-01-04 10:39:33.5471987', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-01-04 10:39:33.5471988', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-01-04 10:39:33.5471988', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-01-04 10:39:33.5471991', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-01-04 10:39:33.5471992', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-01-04 10:39:33.5471993', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-01-04 10:39:33.5471994', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-01-04 10:39:33.5471994', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-01-04 10:39:33.5471995', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-01-04 10:39:33.5471996', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-01-04 10:39:33.5471997', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-01-04 10:39:34.144 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-01-04 10:39:33.609986', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-01-04 10:39:33.6099864', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-01-04 10:39:33.6099866', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-01-04 10:39:33.6099867', NULL, 'Description', NULL, 'Авто');
2023-01-04 10:39:34.144 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-01-04 10:39:33.5471807', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-01-04 10:39:33.5471821', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-01-04 10:39:33.5471822', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-01-04 10:39:33.5471823', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-01-04 10:39:33.5471849', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-01-04 10:39:33.547185', NULL, 'Выдан', NULL, 'Выдан');
2023-01-04 10:39:34.144 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-01-04 10:39:33.5471926', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-01-04 10:39:33.5471928', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-01-04 10:39:33.547193', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-01-04 10:39:33.5471932', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-01-04 10:39:33.5471934', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-01-04 10:39:33.5471935', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-01-04 10:39:33.5471936', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-01-04 10:39:33.5471938', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-01-04 10:39:33.5471939', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-01-04 10:39:33.5471941', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-01-04 10:39:33.5471941', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-01-04 10:39:33.5471942', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-01-04 10:39:34.144 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "Discriminator", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 'UserClaim', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "Discriminator", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 'UserClaim', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
2023-01-04 10:39:34.144 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '0a1e5c27-0b09-4f60-a9c3-8618791a8672');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '11fafeb4-c7c1-463c-bb1e-55203e68dfdf');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '131d5dd1-6bf1-4f52-be90-00815000fb57');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '221c0048-08c9-4e72-8f5c-ddf4039f9488');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('2c5e174e-3b0e-446f-86af-483d56fd7210', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '34a0eb9b-6797-40f7-a84c-aa31cdd4cdc6');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '3b9d7f21-1d66-4c98-8648-64a68777bccb');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '4ff7819d-8e17-4aa8-a0da-964c2db21591');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '5a6f1681-c582-46f5-905b-4eb2c222dcf5');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '92b7c777-0d3e-4026-844f-20164bb0f97e');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '92db214d-cd73-4fbc-8b34-1dc0709ba0b2');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '9c57fadd-110a-4b45-aa89-69aa141564c6');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'e0c3bef9-fd70-421e-b07b-055c38b6d77c');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'eb6a85b0-a7fb-4f8e-9bea-03825e6f020f');
2023-01-04 10:39:34.144 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (1, '0.0', NULL, 1, '2023-01-04 10:39:33.547196', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (2, '0.0', NULL, 1, '2023-01-04 10:39:33.5471963', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (3, '0.0', NULL, 1, '2023-01-04 10:39:33.5471965', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '5a6f1681-c582-46f5-905b-4eb2c222dcf5');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (4, '0.0', NULL, 1, '2023-01-04 10:39:33.5471966', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '3b9d7f21-1d66-4c98-8648-64a68777bccb');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (5, '0.0', NULL, 1, '2023-01-04 10:39:33.5471967', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '0a1e5c27-0b09-4f60-a9c3-8618791a8672');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (6, '0.0', NULL, 1, '2023-01-04 10:39:33.5471968', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852');
2023-01-04 10:39:34.144 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-01-04 10:39:34.145 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-01-04 10:39:34.145 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-01-04 10:39:34.145 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-01-04 10:39:34.145 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-01-04 10:39:34.145 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-01-04 10:39:34.145 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-01-04 10:39:34.145 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId" ON "AccountHistory" ("PayerId");
2023-01-04 10:39:34.145 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-01-04 10:39:34.146 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-01-04 10:39:34.146 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-01-04 10:39:34.146 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-01-04 10:39:34.146 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-01-04 10:39:34.146 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-01-04 10:39:34.146 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-01-04 10:39:34.146 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-01-04 10:39:34.146 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-01-04 10:39:34.146 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-01-04 10:39:34.147 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-01-04 10:39:34.147 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-01-04 10:39:34.147 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-01-04 10:39:34.147 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-01-04 10:39:34.147 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-01-04 10:39:34.147 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-01-04 10:39:34.147 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-01-04 10:39:34.147 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-01-04 10:39:34.147 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-01-04 10:39:34.148 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-01-04 10:39:34.148 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-01-04 10:39:34.148 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-01-04 10:39:34.148 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-01-04 10:39:34.148 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-01-04 10:39:34.148 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-01-04 10:39:34.148 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-01-04 10:39:34.148 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-01-04 10:39:34.148 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-01-04 10:39:34.149 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-01-04 10:39:34.149 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-01-04 10:39:34.149 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId" ON "ParcelOwners" ("RecepientCourierId");
2023-01-04 10:39:34.149 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId" ON "ParcelOwners" ("RecepientId");
2023-01-04 10:39:34.149 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId" ON "ParcelOwners" ("RecepientStaffId");
2023-01-04 10:39:34.149 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId" ON "ParcelOwners" ("SenderCourierId");
2023-01-04 10:39:34.149 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId" ON "ParcelOwners" ("SenderId");
2023-01-04 10:39:34.149 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId" ON "ParcelOwners" ("SenderStaffId");
2023-01-04 10:39:34.149 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-01-04 10:39:34.150 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-01-04 10:39:34.150 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-01-04 10:39:34.150 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-01-04 10:39:34.150 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-01-04 10:39:34.150 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-01-04 10:39:34.150 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-01-04 10:39:34.150 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-01-04 10:39:34.150 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-01-04 10:39:34.150 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-01-04 10:39:34.150 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-01-04 10:39:34.151 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-01-04 10:39:34.151 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-01-04 10:39:34.151 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-01-04 10:39:34.151 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId" ON "UserAccount" ("UserId");
2023-01-04 10:39:34.151 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-01-04 10:39:34.151 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-01-04 10:39:34.151 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-01-04 10:39:34.152 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-01-04 10:39:34.152 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId" ON "UserAccountHistory" ("UserId");
2023-01-04 10:39:34.302 +05:00 [INF] User profile is available. Using 'C:\Users\ashz\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-04 10:39:34.424 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-01-04 10:39:34.425 +05:00 [INF] Hosting environment: Development
2023-01-04 10:39:34.425 +05:00 [INF] Content root path: D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi
2023-01-04 10:39:34.451 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger - -
2023-01-04 10:39:34.569 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/index.html - -
2023-01-04 10:39:34.576 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger - - - 301 - - 125.9545ms
2023-01-04 10:39:34.871 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/index.html - - - 200 - text/html;charset=utf-8 301.5339ms
2023-01-04 10:39:34.880 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/swagger-ui-bundle.js - -
2023-01-04 10:39:34.880 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/swagger-ui-standalone-preset.js - -
2023-01-04 10:39:34.880 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/swagger-ui.css - -
2023-01-04 10:39:34.912 +05:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-01-04 10:39:34.912 +05:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2023-01-04 10:39:34.920 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - -
2023-01-04 10:39:34.921 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/swagger-ui.css - - - 200 143943 text/css 41.5458ms
2023-01-04 10:39:34.923 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/swagger-ui-standalone-preset.js - - - 200 339486 text/javascript 42.6276ms
2023-01-04 10:39:34.924 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - - - 200 12002 application/javascript;+charset=utf-8 3.3175ms
2023-01-04 10:39:34.927 +05:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-01-04 10:39:34.931 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_vs/browserLink - -
2023-01-04 10:39:34.961 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/swagger-ui-bundle.js - - - 200 1096145 text/javascript 85.6499ms
2023-01-04 10:39:35.012 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 81.3566ms
2023-01-04 10:39:35.215 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - -
2023-01-04 10:39:35.243 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/favicon-32x32.png - -
2023-01-04 10:39:35.243 +05:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-01-04 10:39:35.244 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/favicon-32x32.png - - - 200 628 image/png 0.9532ms
2023-01-04 10:39:35.505 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 289.9318ms
2023-01-04 10:41:12.982 +05:00 [FTL] An error occured while app initialization
System.ArgumentException: Connection string keyword 'user id' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteDatabaseCreator.Exists()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Persistence\DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Program.cs:line 54
2023-01-04 10:41:13.070 +05:00 [INF] User profile is available. Using 'C:\Users\ashz\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-04 10:41:13.164 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-01-04 10:41:13.171 +05:00 [INF] Hosting environment: Development
2023-01-04 10:41:13.171 +05:00 [INF] Content root path: D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi
2023-01-04 10:41:13.193 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/index.html - -
2023-01-04 10:41:13.419 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/index.html - - - 200 - text/html;charset=utf-8 224.9850ms
2023-01-04 10:41:13.419 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - -
2023-01-04 10:41:13.431 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - - - 200 12002 application/javascript;+charset=utf-8 5.0155ms
2023-01-04 10:41:13.442 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_vs/browserLink - -
2023-01-04 10:41:13.490 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 42.0526ms
2023-01-04 10:41:13.678 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - -
2023-01-04 10:41:14.010 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 331.8943ms
2023-01-04 10:41:19.385 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/api/Branch - -
2023-01-04 10:41:19.438 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 10:41:19.453 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-01-04 10:41:19.890 +05:00 [INF] Executing action method EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) - Validation state: "Valid"
2023-01-04 10:41:19.911 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-01-04 10:41:20.137 +05:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EDSystems.Persistence.EDSystemsDbContext'.
System.ArgumentException: Connection string keyword 'user id' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetPoolGroup(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnection.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.ArgumentException: Connection string keyword 'user id' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetPoolGroup(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnection.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2023-01-04 10:41:20.263 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 808.3662ms
2023-01-04 10:41:20.265 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 10:41:20.267 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Connection string keyword 'user id' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetPoolGroup(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnection.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.GetBranchListQueryHandler.Handle(GetBranchListQuery request, CancellationToken cancellationToken) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Application\EDSystems\Queries\Branches\GetBranchList\GetBranchListQueryHandler.cs:line 20
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Application\Common\Behaviors\LoggingBehavior.cs:line 18
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at EDSystems.WebApi.Controllers.BranchController.GetAll() in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Controllers\BranchController.cs:line 53
   at lambda_method247(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-01-04 10:41:20.277 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/api/Branch - - - 500 - text/plain;+charset=utf-8 891.5136ms
2023-01-04 10:41:49.531 +05:00 [FTL] An error occured while app initialization
System.ArgumentException: Connection string keyword 'username' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteDatabaseCreator.Exists()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Persistence\DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Program.cs:line 54
2023-01-04 10:41:49.631 +05:00 [INF] User profile is available. Using 'C:\Users\ashz\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-04 10:41:49.730 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-01-04 10:41:49.735 +05:00 [INF] Hosting environment: Development
2023-01-04 10:41:49.735 +05:00 [INF] Content root path: D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi
2023-01-04 10:41:49.758 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/index.html - -
2023-01-04 10:41:49.980 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/index.html - - - 200 - text/html;charset=utf-8 222.9322ms
2023-01-04 10:41:49.987 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - -
2023-01-04 10:41:50.002 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - - - 200 12002 application/javascript;+charset=utf-8 7.2076ms
2023-01-04 10:41:50.003 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_vs/browserLink - -
2023-01-04 10:41:50.045 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 41.3785ms
2023-01-04 10:41:50.122 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - -
2023-01-04 10:41:50.403 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 280.7795ms
2023-01-04 10:41:54.753 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/api/Branch - -
2023-01-04 10:41:54.819 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 10:41:54.829 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-01-04 10:41:55.240 +05:00 [INF] Executing action method EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) - Validation state: "Valid"
2023-01-04 10:41:55.260 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-01-04 10:41:55.475 +05:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EDSystems.Persistence.EDSystemsDbContext'.
System.ArgumentException: Connection string keyword 'username' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetPoolGroup(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnection.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.ArgumentException: Connection string keyword 'username' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetPoolGroup(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnection.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2023-01-04 10:41:55.592 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 759.6918ms
2023-01-04 10:41:55.594 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 10:41:55.597 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Connection string keyword 'username' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetPoolGroup(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnection.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.GetBranchListQueryHandler.Handle(GetBranchListQuery request, CancellationToken cancellationToken) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Application\EDSystems\Queries\Branches\GetBranchList\GetBranchListQueryHandler.cs:line 20
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Application\Common\Behaviors\LoggingBehavior.cs:line 18
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at EDSystems.WebApi.Controllers.BranchController.GetAll() in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Controllers\BranchController.cs:line 53
   at lambda_method247(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-01-04 10:41:55.606 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/api/Branch - - - 500 - text/plain;+charset=utf-8 853.8666ms
2023-01-04 10:43:36.154 +05:00 [FTL] An error occured while app initialization
System.ArgumentException: Connection string keyword 'userid' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteDatabaseCreator.Exists()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Persistence\DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Program.cs:line 54
2023-01-04 10:43:36.247 +05:00 [INF] User profile is available. Using 'C:\Users\ashz\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-04 10:43:36.336 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-01-04 10:43:36.342 +05:00 [INF] Hosting environment: Development
2023-01-04 10:43:36.342 +05:00 [INF] Content root path: D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi
2023-01-04 10:43:36.364 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/index.html - -
2023-01-04 10:43:36.605 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/index.html - - - 200 - text/html;charset=utf-8 240.1811ms
2023-01-04 10:43:36.623 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - -
2023-01-04 10:43:36.633 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - - - 200 12002 application/javascript;+charset=utf-8 3.2496ms
2023-01-04 10:43:36.653 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_vs/browserLink - -
2023-01-04 10:43:36.695 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 41.6167ms
2023-01-04 10:43:36.767 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - -
2023-01-04 10:43:37.051 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 284.6935ms
2023-01-04 10:45:51.205 +05:00 [FTL] An error occured while app initialization
System.ArgumentException: Connection string keyword 'localhost;port' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteDatabaseCreator.Exists()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Persistence\DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Program.cs:line 54
2023-01-04 10:45:51.294 +05:00 [INF] User profile is available. Using 'C:\Users\ashz\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-04 10:45:51.378 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-01-04 10:45:51.383 +05:00 [INF] Hosting environment: Development
2023-01-04 10:45:51.383 +05:00 [INF] Content root path: D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi
2023-01-04 10:45:51.407 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/index.html - -
2023-01-04 10:45:51.628 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/index.html - - - 200 - text/html;charset=utf-8 220.6777ms
2023-01-04 10:45:51.678 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_vs/browserLink - -
2023-01-04 10:45:51.678 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - -
2023-01-04 10:45:51.687 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - - - 200 12002 application/javascript;+charset=utf-8 7.9009ms
2023-01-04 10:45:51.729 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 50.6148ms
2023-01-04 10:45:51.772 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - -
2023-01-04 10:45:52.037 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 264.9177ms
2023-01-04 10:45:58.960 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/api/Branch - -
2023-01-04 10:45:59.015 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 10:45:59.027 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-01-04 10:45:59.425 +05:00 [INF] Executing action method EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) - Validation state: "Valid"
2023-01-04 10:45:59.445 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-01-04 10:45:59.643 +05:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EDSystems.Persistence.EDSystemsDbContext'.
System.ArgumentException: Connection string keyword 'localhost;port' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetPoolGroup(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnection.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.ArgumentException: Connection string keyword 'localhost;port' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetPoolGroup(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnection.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2023-01-04 10:45:59.756 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 726.2557ms
2023-01-04 10:45:59.757 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 10:45:59.759 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Connection string keyword 'localhost;port' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetPoolGroup(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnection.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.GetBranchListQueryHandler.Handle(GetBranchListQuery request, CancellationToken cancellationToken) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Application\EDSystems\Queries\Branches\GetBranchList\GetBranchListQueryHandler.cs:line 20
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Application\Common\Behaviors\LoggingBehavior.cs:line 18
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at EDSystems.WebApi.Controllers.BranchController.GetAll() in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Controllers\BranchController.cs:line 53
   at lambda_method247(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-01-04 10:45:59.768 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/api/Branch - - - 500 - text/plain;+charset=utf-8 807.7705ms
2023-01-04 10:46:38.275 +05:00 [FTL] An error occured while app initialization
System.ArgumentException: Connection string keyword 'server' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteDatabaseCreator.Exists()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Persistence\DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Program.cs:line 54
2023-01-04 10:46:38.360 +05:00 [INF] User profile is available. Using 'C:\Users\ashz\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-04 10:46:38.445 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-01-04 10:46:38.451 +05:00 [INF] Hosting environment: Development
2023-01-04 10:46:38.451 +05:00 [INF] Content root path: D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi
2023-01-04 10:46:38.471 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/index.html - -
2023-01-04 10:46:38.683 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/index.html - - - 200 - text/html;charset=utf-8 212.1024ms
2023-01-04 10:46:38.711 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - -
2023-01-04 10:46:38.711 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_vs/browserLink - -
2023-01-04 10:46:38.725 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - - - 200 12002 application/javascript;+charset=utf-8 8.0690ms
2023-01-04 10:46:38.761 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 49.9539ms
2023-01-04 10:46:38.819 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - -
2023-01-04 10:46:39.099 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 279.9190ms
2023-01-04 10:46:43.373 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/api/Branch - -
2023-01-04 10:46:43.436 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 10:46:43.448 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-01-04 10:46:43.877 +05:00 [INF] Executing action method EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) - Validation state: "Valid"
2023-01-04 10:46:43.897 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-01-04 10:46:44.097 +05:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EDSystems.Persistence.EDSystemsDbContext'.
System.ArgumentException: Connection string keyword 'server' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetPoolGroup(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnection.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.ArgumentException: Connection string keyword 'server' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetPoolGroup(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnection.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2023-01-04 10:46:44.207 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 756.056ms
2023-01-04 10:46:44.207 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 10:46:44.210 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Connection string keyword 'server' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetPoolGroup(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnection.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.GetBranchListQueryHandler.Handle(GetBranchListQuery request, CancellationToken cancellationToken) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Application\EDSystems\Queries\Branches\GetBranchList\GetBranchListQueryHandler.cs:line 20
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Application\Common\Behaviors\LoggingBehavior.cs:line 18
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at EDSystems.WebApi.Controllers.BranchController.GetAll() in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Controllers\BranchController.cs:line 53
   at lambda_method247(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-01-04 10:46:44.220 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/api/Branch - - - 500 - text/plain;+charset=utf-8 847.4040ms
2023-01-04 10:47:03.474 +05:00 [FTL] An error occured while app initialization
System.ArgumentException: Connection string keyword 'host' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteDatabaseCreator.Exists()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Persistence\DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Program.cs:line 54
2023-01-04 10:47:03.559 +05:00 [INF] User profile is available. Using 'C:\Users\ashz\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-04 10:47:03.651 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-01-04 10:47:03.651 +05:00 [INF] Hosting environment: Development
2023-01-04 10:47:03.651 +05:00 [INF] Content root path: D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi
2023-01-04 10:47:03.673 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/index.html - -
2023-01-04 10:47:03.884 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/index.html - - - 200 - text/html;charset=utf-8 210.9998ms
2023-01-04 10:47:03.885 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - -
2023-01-04 10:47:03.897 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - - - 200 12002 application/javascript;+charset=utf-8 5.6106ms
2023-01-04 10:47:03.908 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_vs/browserLink - -
2023-01-04 10:47:03.954 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 46.4661ms
2023-01-04 10:47:04.023 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - -
2023-01-04 10:47:04.298 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 274.6920ms
2023-01-04 10:47:08.157 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/api/Branch - -
2023-01-04 10:47:08.216 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 10:47:08.228 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-01-04 10:47:08.637 +05:00 [INF] Executing action method EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) - Validation state: "Valid"
2023-01-04 10:47:08.662 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-01-04 10:47:08.859 +05:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EDSystems.Persistence.EDSystemsDbContext'.
System.ArgumentException: Connection string keyword 'host' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetPoolGroup(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnection.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.ArgumentException: Connection string keyword 'host' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetPoolGroup(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnection.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2023-01-04 10:47:08.972 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 741.3544ms
2023-01-04 10:47:08.973 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 10:47:08.976 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Connection string keyword 'host' is not supported. For a possible alternative, see https://go.microsoft.com/fwlink/?linkid=2142181.
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.GetIndex(String keyword)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnectionStringBuilder..ctor(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnectionFactory.GetPoolGroup(String connectionString)
   at Microsoft.Data.Sqlite.SqliteConnection.set_ConnectionString(String value)
   at Microsoft.Data.Sqlite.SqliteConnection..ctor(String connectionString)
   at Microsoft.EntityFrameworkCore.Sqlite.Storage.Internal.SqliteRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.GetBranchListQueryHandler.Handle(GetBranchListQuery request, CancellationToken cancellationToken) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Application\EDSystems\Queries\Branches\GetBranchList\GetBranchListQueryHandler.cs:line 20
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Application\Common\Behaviors\LoggingBehavior.cs:line 18
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at EDSystems.WebApi.Controllers.BranchController.GetAll() in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Controllers\BranchController.cs:line 53
   at lambda_method247(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-01-04 10:47:08.984 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/api/Branch - - - 500 - text/plain;+charset=utf-8 827.5732ms
2023-01-04 10:49:54.333 +05:00 [FTL] An error occured while app initialization
System.ArgumentException: Couldn't set protocol (Parameter 'protocol')
 ---> System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at Npgsql.NpgsqlConnectionStringBuilder.GeneratedSetter(String keyword, Object value)
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   --- End of inner exception stack trace ---
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnectionStringBuilder..ctor(String connectionString)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.Exists(Boolean async, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.Exists()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Persistence\DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Program.cs:line 54
2023-01-04 10:49:54.412 +05:00 [INF] User profile is available. Using 'C:\Users\ashz\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-04 10:49:54.495 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-01-04 10:49:54.500 +05:00 [INF] Hosting environment: Development
2023-01-04 10:49:54.500 +05:00 [INF] Content root path: D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi
2023-01-04 10:49:54.522 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/index.html - -
2023-01-04 10:49:54.727 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/index.html - - - 200 - text/html;charset=utf-8 204.5028ms
2023-01-04 10:49:54.777 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - -
2023-01-04 10:49:54.777 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_vs/browserLink - -
2023-01-04 10:49:54.787 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - - - 200 12002 application/javascript;+charset=utf-8 7.9494ms
2023-01-04 10:49:54.830 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 52.2011ms
2023-01-04 10:49:54.879 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - -
2023-01-04 10:49:55.159 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 280.0324ms
2023-01-04 10:50:03.871 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/api/Branch - -
2023-01-04 10:50:03.926 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 10:50:03.937 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-01-04 10:50:04.306 +05:00 [INF] Executing action method EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) - Validation state: "Valid"
2023-01-04 10:50:04.329 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-01-04 10:50:04.530 +05:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EDSystems.Persistence.EDSystemsDbContext'.
System.ArgumentException: Couldn't set protocol (Parameter 'protocol')
 ---> System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at Npgsql.NpgsqlConnectionStringBuilder.GeneratedSetter(String keyword, Object value)
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   --- End of inner exception stack trace ---
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnectionStringBuilder..ctor(String connectionString)
   at Npgsql.NpgsqlConnection.SetupDataSource()
   at Npgsql.NpgsqlConnection.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnection..ctor(String connectionString)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.ArgumentException: Couldn't set protocol (Parameter 'protocol')
 ---> System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at Npgsql.NpgsqlConnectionStringBuilder.GeneratedSetter(String keyword, Object value)
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   --- End of inner exception stack trace ---
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnectionStringBuilder..ctor(String connectionString)
   at Npgsql.NpgsqlConnection.SetupDataSource()
   at Npgsql.NpgsqlConnection.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnection..ctor(String connectionString)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2023-01-04 10:50:04.661 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 721.6784ms
2023-01-04 10:50:04.662 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 10:50:04.665 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Couldn't set protocol (Parameter 'protocol')
 ---> System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at Npgsql.NpgsqlConnectionStringBuilder.GeneratedSetter(String keyword, Object value)
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   --- End of inner exception stack trace ---
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnectionStringBuilder..ctor(String connectionString)
   at Npgsql.NpgsqlConnection.SetupDataSource()
   at Npgsql.NpgsqlConnection.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnection..ctor(String connectionString)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.GetBranchListQueryHandler.Handle(GetBranchListQuery request, CancellationToken cancellationToken) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Application\EDSystems\Queries\Branches\GetBranchList\GetBranchListQueryHandler.cs:line 20
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Application\Common\Behaviors\LoggingBehavior.cs:line 18
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at EDSystems.WebApi.Controllers.BranchController.GetAll() in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Controllers\BranchController.cs:line 53
   at lambda_method248(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-01-04 10:50:04.675 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/api/Branch - - - 500 - text/plain;+charset=utf-8 803.5990ms
2023-01-04 10:50:28.419 +05:00 [FTL] An error occured while app initialization
System.ArgumentException: Couldn't set ssl (Parameter 'ssl')
 ---> System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at Npgsql.NpgsqlConnectionStringBuilder.GeneratedSetter(String keyword, Object value)
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   --- End of inner exception stack trace ---
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnectionStringBuilder..ctor(String connectionString)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.Exists(Boolean async, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.Exists()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Persistence\DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Program.cs:line 54
2023-01-04 10:50:28.502 +05:00 [INF] User profile is available. Using 'C:\Users\ashz\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-04 10:50:28.587 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-01-04 10:50:28.594 +05:00 [INF] Hosting environment: Development
2023-01-04 10:50:28.594 +05:00 [INF] Content root path: D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi
2023-01-04 10:50:28.617 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/index.html - -
2023-01-04 10:50:28.847 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/index.html - - - 200 - text/html;charset=utf-8 228.9301ms
2023-01-04 10:50:28.858 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - -
2023-01-04 10:50:28.877 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_vs/browserLink - -
2023-01-04 10:50:28.877 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - - - 200 12002 application/javascript;+charset=utf-8 5.1095ms
2023-01-04 10:50:28.919 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 42.3288ms
2023-01-04 10:50:28.987 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - -
2023-01-04 10:50:29.266 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 279.1360ms
2023-01-04 10:50:34.682 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/api/Branch - -
2023-01-04 10:50:34.737 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 10:50:34.749 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-01-04 10:50:35.150 +05:00 [INF] Executing action method EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) - Validation state: "Valid"
2023-01-04 10:50:35.170 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-01-04 10:50:35.366 +05:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EDSystems.Persistence.EDSystemsDbContext'.
System.ArgumentException: Couldn't set ssl (Parameter 'ssl')
 ---> System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at Npgsql.NpgsqlConnectionStringBuilder.GeneratedSetter(String keyword, Object value)
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   --- End of inner exception stack trace ---
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnectionStringBuilder..ctor(String connectionString)
   at Npgsql.NpgsqlConnection.SetupDataSource()
   at Npgsql.NpgsqlConnection.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnection..ctor(String connectionString)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.ArgumentException: Couldn't set ssl (Parameter 'ssl')
 ---> System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at Npgsql.NpgsqlConnectionStringBuilder.GeneratedSetter(String keyword, Object value)
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   --- End of inner exception stack trace ---
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnectionStringBuilder..ctor(String connectionString)
   at Npgsql.NpgsqlConnection.SetupDataSource()
   at Npgsql.NpgsqlConnection.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnection..ctor(String connectionString)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2023-01-04 10:50:35.483 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 729.5922ms
2023-01-04 10:50:35.484 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 10:50:35.487 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Couldn't set ssl (Parameter 'ssl')
 ---> System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at Npgsql.NpgsqlConnectionStringBuilder.GeneratedSetter(String keyword, Object value)
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   --- End of inner exception stack trace ---
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnectionStringBuilder..ctor(String connectionString)
   at Npgsql.NpgsqlConnection.SetupDataSource()
   at Npgsql.NpgsqlConnection.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnection..ctor(String connectionString)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.GetBranchListQueryHandler.Handle(GetBranchListQuery request, CancellationToken cancellationToken) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Application\EDSystems\Queries\Branches\GetBranchList\GetBranchListQueryHandler.cs:line 20
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Application\Common\Behaviors\LoggingBehavior.cs:line 18
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at EDSystems.WebApi.Controllers.BranchController.GetAll() in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Controllers\BranchController.cs:line 53
   at lambda_method248(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-01-04 10:50:35.499 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/api/Branch - - - 500 - text/plain;+charset=utf-8 817.8316ms
2023-01-04 10:50:48.498 +05:00 [INF] Executed DbCommand (171ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE edsystemsdatabase;
2023-01-04 10:50:48.868 +05:00 [FTL] An error occured while app initialization
System.InvalidCastException: 'timestamp with time zone' literal cannot be generated for Local DateTime: a UTC DateTime is required
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTzTypeMapping.GenerateLiteralCore(Object value)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.Mapping.NpgsqlTimestampTzTypeMapping.GenerateNonNullSqlLiteral(Object value)
   at Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.GenerateProviderValueSqlLiteral(Object value)
   at Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendSqlLiteral(StringBuilder commandStringBuilder, IColumnModification modification, String tableName, String schema)
   at Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.<>c.<AppendValues>b__24_0(StringBuilder sb, IColumnModification o, ValueTuple`3 p)
   at System.Text.StringBuilderExtensions.AppendJoin[T,TParam](StringBuilder stringBuilder, IEnumerable`1 values, TParam param, Action`3 joinAction, String separator)
   at Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendValues(StringBuilder commandStringBuilder, String name, String schema, IReadOnlyList`1 operations)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlUpdateSqlGenerator.AppendInsertCommand(StringBuilder commandStringBuilder, String name, String schema, IReadOnlyList`1 writeOperations, IReadOnlyList`1 readOperations, Boolean overridingSystemValue)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Update.Internal.NpgsqlUpdateSqlGenerator.AppendInsertOperation(StringBuilder commandStringBuilder, IReadOnlyModificationCommand command, Int32 commandPosition, Boolean overridingSystemValue, Boolean& requiresTransaction)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(InsertDataOperation operation, IModel model, MigrationCommandListBuilder builder, Boolean terminate)
   at Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGenerator.<>c.<.cctor>b__82_28(MigrationsSqlGenerator g, MigrationOperation o, IModel m, MigrationCommandListBuilder b)
   at Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGenerator.Generate(MigrationOperation operation, IModel model, MigrationCommandListBuilder builder)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(MigrationOperation operation, IModel model, MigrationCommandListBuilder builder)
   at Microsoft.EntityFrameworkCore.Migrations.MigrationsSqlGenerator.Generate(IReadOnlyList`1 operations, IModel model, MigrationsSqlGenerationOptions options)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Migrations.NpgsqlMigrationsSqlGenerator.Generate(IReadOnlyList`1 operations, IModel model, MigrationsSqlGenerationOptions options)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.CreateTables()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreated()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureCreated()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Persistence\DbInitializer.cs:line 8
   at Program.<Main>$(String[] args) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Program.cs:line 54
2023-01-04 10:50:48.926 +05:00 [INF] User profile is available. Using 'C:\Users\ashz\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-04 10:50:49.015 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-01-04 10:50:49.015 +05:00 [INF] Hosting environment: Development
2023-01-04 10:50:49.015 +05:00 [INF] Content root path: D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi
2023-01-04 10:50:49.040 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/index.html - -
2023-01-04 10:50:49.252 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/index.html - - - 200 - text/html;charset=utf-8 212.2633ms
2023-01-04 10:50:49.254 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - -
2023-01-04 10:50:49.267 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - - - 200 12002 application/javascript;+charset=utf-8 12.9282ms
2023-01-04 10:50:49.276 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_vs/browserLink - -
2023-01-04 10:50:49.316 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 40.1832ms
2023-01-04 10:50:49.386 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - -
2023-01-04 10:50:49.659 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 273.4383ms
2023-01-04 10:50:53.645 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/api/Branch - -
2023-01-04 10:50:53.692 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 10:50:53.704 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-01-04 10:50:54.085 +05:00 [INF] Executing action method EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) - Validation state: "Valid"
2023-01-04 10:50:54.103 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-01-04 10:50:54.476 +05:00 [ERR] Failed executing DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Name", b."Country", b."Code", b."City", b."Address", b."Email", b."Phone", b."DateCreated", b."DateUpdated"
FROM "Branch" AS b
2023-01-04 10:50:54.487 +05:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EDSystems.Persistence.EDSystemsDbContext'.
Npgsql.PostgresException (0x80004005): 42P01: отношение "Branch" не существует

POSITION: 133
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|226_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ОШИБКА
    SqlState: 42P01
    MessageText: отношение "Branch" не существует
    Position: 133
    File: parse_relation.c
    Line: 1395
    Routine: parserOpenTable
Npgsql.PostgresException (0x80004005): 42P01: отношение "Branch" не существует

POSITION: 133
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|226_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
  Exception data:
    Severity: ОШИБКА
    SqlState: 42P01
    MessageText: отношение "Branch" не существует
    Position: 133
    File: parse_relation.c
    Line: 1395
    Routine: parserOpenTable
2023-01-04 10:50:54.674 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 968.1164ms
2023-01-04 10:50:54.675 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 10:50:54.678 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Npgsql.PostgresException (0x80004005): 42P01: отношение "Branch" не существует

POSITION: 133
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|226_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync[TSource](IQueryable`1 source, CancellationToken cancellationToken)
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.GetBranchListQueryHandler.Handle(GetBranchListQuery request, CancellationToken cancellationToken) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Application\EDSystems\Queries\Branches\GetBranchList\GetBranchListQueryHandler.cs:line 20
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Application\Common\Behaviors\LoggingBehavior.cs:line 18
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken)
   at EDSystems.WebApi.Controllers.BranchController.GetAll() in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Controllers\BranchController.cs:line 53
   at lambda_method485(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
  Exception data:
    Severity: ОШИБКА
    SqlState: 42P01
    MessageText: отношение "Branch" не существует
    Position: 133
    File: parse_relation.c
    Line: 1395
    Routine: parserOpenTable
2023-01-04 10:50:54.692 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/api/Branch - - - 500 - text/plain;+charset=utf-8 1047.2860ms
2023-01-04 10:53:53.532 +05:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 10:53:53.705 +05:00 [INF] Executed DbCommand (26ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2023-01-04 10:53:53.785 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 10:53:53.828 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-01-04 10:53:53.839 +05:00 [INF] Applying migration '20230104055335_aa'.
2023-01-04 11:03:47.036 +05:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:03:47.230 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:03:47.279 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-01-04 11:03:47.290 +05:00 [INF] Applying migration '20230104055335_aa'.
2023-01-04 11:07:15.660 +05:00 [INF] Executed DbCommand (28ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
REVOKE CONNECT ON DATABASE edsystemsdatabase FROM PUBLIC;
SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE datname = 'edsystemsdatabase';
2023-01-04 11:07:16.151 +05:00 [INF] Executed DbCommand (467ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE edsystemsdatabase;
2023-01-04 11:07:16.801 +05:00 [INF] Executed DbCommand (155ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE edsystemsdatabase;
2023-01-04 11:07:17.180 +05:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-01-04 11:07:17.186 +05:00 [ERR] Failed executing DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(255) NOT NULL,
    "Country" character varying(255) NOT NULL,
    "Code" text NULL,
    "City" character varying(255) NOT NULL,
    "Address" character varying(500) NOT NULL,
    "Email" character varying(500) NOT NULL,
    "Phone" string NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-01-04 11:07:17.208 +05:00 [FTL] An error occured while app initialization
Npgsql.PostgresException (0x80004005): 42704: тип "string" не существует

POSITION: 345
   at Npgsql.Internal.NpgsqlConnector.<ReadMessage>g__ReadMessageLong|226_0(NpgsqlConnector connector, Boolean async, DataRowLoadingMode dataRowLoadingMode, Boolean readingNotifications, Boolean isReadingPrependedMessage)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming, CancellationToken cancellationToken)
   at Npgsql.NpgsqlDataReader.NextResult()
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlCommand.ExecuteNonQuery()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteNonQuery(RelationalCommandParameterObject parameterObject)
   at Microsoft.EntityFrameworkCore.Migrations.MigrationCommand.ExecuteNonQuery(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)
   at Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationCommandExecutor.ExecuteNonQuery(IEnumerable`1 migrationCommands, IRelationalConnection connection)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.CreateTables()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreated()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureCreated()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Persistence\DbInitializer.cs:line 8
   at Program.<Main>$(String[] args) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Program.cs:line 54
  Exception data:
    Severity: ОШИБКА
    SqlState: 42704
    MessageText: тип "string" не существует
    Position: 345
    File: parse_type.c
    Line: 274
    Routine: typenameType
2023-01-04 11:07:17.272 +05:00 [INF] User profile is available. Using 'C:\Users\ashz\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-04 11:07:17.373 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-01-04 11:07:17.373 +05:00 [INF] Hosting environment: Development
2023-01-04 11:07:17.373 +05:00 [INF] Content root path: D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi
2023-01-04 11:07:17.393 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/index.html - -
2023-01-04 11:07:17.610 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/index.html - - - 200 - text/html;charset=utf-8 217.3566ms
2023-01-04 11:07:17.614 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - -
2023-01-04 11:07:17.625 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - - - 200 12002 application/javascript;+charset=utf-8 5.2482ms
2023-01-04 11:07:17.634 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_vs/browserLink - -
2023-01-04 11:07:17.683 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 48.1049ms
2023-01-04 11:07:17.751 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - -
2023-01-04 11:07:18.020 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 268.7293ms
2023-01-04 11:08:51.805 +05:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:08:51.959 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2023-01-04 11:08:52.031 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:08:52.068 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-01-04 11:08:52.078 +05:00 [INF] Applying migration '20230104055335_aa'.
2023-01-04 11:08:52.381 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-01-04 11:08:52.386 +05:00 [ERR] Failed executing DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(255) NOT NULL,
    "Country" character varying(255) NOT NULL,
    "Code" text NULL,
    "City" character varying(255) NOT NULL,
    "Address" character varying(500) NOT NULL,
    "Email" character varying(500) NOT NULL,
    "Phone" string NULL,
    "DateCreated" timestamp with time zone NOT NULL,
    "DateUpdated" timestamp with time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-01-04 11:12:23.695 +05:00 [INF] Executed DbCommand (165ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE edsystemsdatabase;
2023-01-04 11:12:23.924 +05:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2023-01-04 11:12:24.008 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:12:24.047 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-01-04 11:12:24.057 +05:00 [INF] Applying migration '20230104055335_aa'.
2023-01-04 11:12:24.495 +05:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-01-04 11:12:24.503 +05:00 [ERR] Failed executing DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(255) NOT NULL,
    "Country" character varying(255) NOT NULL,
    "Code" text NULL,
    "City" character varying(255) NOT NULL,
    "Address" character varying(500) NOT NULL,
    "Email" character varying(500) NOT NULL,
    "Phone" string NULL,
    "DateCreated" timestamp with time zone NOT NULL,
    "DateUpdated" timestamp with time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-01-04 11:19:24.049 +05:00 [INF] Executed DbCommand (163ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE edsystemsdatabase;
2023-01-04 11:19:24.270 +05:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2023-01-04 11:19:24.346 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:19:24.388 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-01-04 11:19:24.398 +05:00 [INF] Applying migration '20230104061725_aa'.
2023-01-04 11:19:24.777 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-01-04 11:19:24.781 +05:00 [ERR] Failed executing DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(255) NOT NULL,
    "Country" character varying(255) NOT NULL,
    "Code" text NULL,
    "City" character varying(255) NOT NULL,
    "Address" character varying(500) NOT NULL,
    "Email" character varying(500) NOT NULL,
    "Phone" string NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-01-04 11:21:49.403 +05:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:21:49.487 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:21:49.532 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-01-04 11:21:49.543 +05:00 [INF] Applying migration '20230104061725_aa'.
2023-01-04 11:21:49.967 +05:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-01-04 11:21:49.972 +05:00 [ERR] Failed executing DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(255) NOT NULL,
    "Country" character varying(255) NOT NULL,
    "Code" text NULL,
    "City" character varying(255) NOT NULL,
    "Address" character varying(500) NOT NULL,
    "Email" character varying(500) NOT NULL,
    "Phone" string NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-01-04 11:28:26.576 +05:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:28:26.662 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:28:26.706 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-01-04 11:28:26.716 +05:00 [INF] Applying migration '20230104061725_aa'.
2023-01-04 11:28:27.123 +05:00 [INF] Executed DbCommand (17ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-01-04 11:28:27.128 +05:00 [ERR] Failed executing DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" character varying(255) NOT NULL,
    "Country" character varying(255) NOT NULL,
    "Code" text NULL,
    "City" character varying(255) NOT NULL,
    "Address" character varying(500) NOT NULL,
    "Email" character varying(500) NOT NULL,
    "Phone" string NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-01-04 11:29:09.138 +05:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:29:09.231 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:29:09.284 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-01-04 11:29:09.296 +05:00 [INF] Applying migration '20230104062848_aa'.
2023-01-04 11:29:09.737 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-01-04 11:29:09.750 +05:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NOT NULL,
    "Country" varchar(200) NOT NULL,
    "Code" varchar(200) NULL,
    "City" varchar(200) NOT NULL,
    "Address" varchar(200) NOT NULL,
    "Email" varchar(200) NOT NULL,
    "Phone" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-01-04 11:29:09.755 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Currency" PRIMARY KEY ("Id")
);
2023-01-04 11:29:09.758 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT "PK_Expenses" PRIMARY KEY ("Id")
);
2023-01-04 11:29:09.766 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" varchar(200) NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ExpenseType" PRIMARY KEY ("Id")
);
2023-01-04 11:29:09.772 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Parcel" PRIMARY KEY ("Id")
);
2023-01-04 11:29:09.781 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Cost" numeric(18,3) NOT NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Plan" PRIMARY KEY ("Id")
);
2023-01-04 11:29:09.788 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NULL,
    "Token" text NULL,
    "JwtId" text NULL,
    "IsUsed" boolean NOT NULL,
    "IsRevoked" boolean NOT NULL,
    "AddedDateTime" timestamp without time zone NOT NULL,
    "ExpiryDateTime" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_RefreshToken" PRIMARY KEY ("Id")
);
2023-01-04 11:29:09.794 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" varchar(200) NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Status" PRIMARY KEY ("Id")
);
2023-01-04 11:29:09.801 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TokenId" text NULL,
    "RefreshToken" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Tokens" PRIMARY KEY ("Id")
);
2023-01-04 11:29:09.815 +05:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:09.822 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar(200) NULL,
    "Name" varchar(200) NULL,
    "Balance" varchar(200) NOT NULL,
    "BranchId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Account" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:09.830 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ToBranchId" integer NOT NULL,
    "FromBranchId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelBranch" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:09.836 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StateDeliveryToBranch" boolean NOT NULL,
    "StatePickingUp" boolean NOT NULL,
    "StateDeliveryToPoint" boolean NOT NULL,
    "StateBuyout" boolean NOT NULL,
    "CostPickingUp" numeric(18,3) NOT NULL,
    "CostDeliveryToPoint" numeric(18,3) NOT NULL,
    "CostDeliveryToBranch" numeric(18,3) NOT NULL,
    "CostBuyout" numeric NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelCost" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:09.842 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Description" varchar NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelDescription" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:09.848 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelImage" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:09.856 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" text NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelItem" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:09.863 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Cost" numeric NOT NULL,
    "CourierId" varchar(200) NULL,
    "JobType" varchar(200) NULL,
    "ParcelId" integer NOT NULL,
    "PaymentState" boolean NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelJob" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:09.873 +05:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Weight" numeric(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSize" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:09.880 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSound" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:09.886 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PlanId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelPlan" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-01-04 11:29:09.894 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StatusId" integer NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelStatus" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-01-04 11:29:09.900 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" text NOT NULL,
    "FirstName" text NULL,
    "LastName" text NULL,
    "Address" text NULL,
    "UserNameT" text NULL,
    "ChatId" bigint NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "ParcelJobId" integer NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-01-04 11:29:09.907 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "PayerId" varchar(200) NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_AccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId" FOREIGN KEY ("PayerId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:09.914 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    "Discriminator" text NOT NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:09.922 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:09.930 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:09.940 +05:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" text NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:09.949 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SenderId" varchar(200) NULL,
    "RecepientId" varchar(200) NULL,
    "RecepientStaffId" varchar(200) NULL,
    "SenderStaffId" varchar(200) NULL,
    "RecepientCourierId" varchar(200) NULL,
    "SenderCourierId" varchar(200) NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelOwners" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId" FOREIGN KEY ("RecepientCourierId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId" FOREIGN KEY ("RecepientId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId" FOREIGN KEY ("RecepientStaffId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId" FOREIGN KEY ("SenderCourierId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId" FOREIGN KEY ("SenderId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId" FOREIGN KEY ("SenderStaffId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:09.956 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar(200) NULL,
    "Name" varchar(200) NULL,
    "Balance" numeric NOT NULL,
    "UserId" varchar(200) NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccount" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:09.963 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "UserId" varchar(200) NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:09.965 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('2c5e174e-3b0e-446f-86af-483d56fd7210', '4258bdb1-8aaf-47c7-8876-8e92bbcd4f27', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('336b1b38-f4c9-4844-8dcb-b59a0d7f0533', '0feee75e-90da-446b-b62c-3e7693092e1e', 'Customer', 'CUSTOMER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '0aa00eef-a436-4f58-8dda-2b9299466b6a', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('5919c97a-b888-4858-bbbe-0123a1952624', '3e0f7963-54f0-4878-8916-342bd1f4cac0', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '9abd3b77-f57a-4418-86ab-066c9f527c53', 'Manager', 'MANAGER');
2023-01-04 11:29:09.973 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('0a1e5c27-0b09-4f60-a9c3-8618791a8672', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '812af1a0-3d99-45ad-91d6-2bbb6b6394bb', TIMESTAMP '2023-01-04 11:28:47.926399', NULL, 'Ismoil@gmail.com', FALSE, 'EDTashkent', 'Ismoil', FALSE, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEBwEsHY66XDahkNWHEHiy1GsjAbA/J5gbgwQd/H5PP2Cjo6uMQteLkDrP3/kCG/cYQ==', '998977093262', FALSE, '274b85da-94d0-4ae6-9084-0d0b985a59b7', FALSE, 'ismoil', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('11fafeb4-c7c1-463c-bb1e-55203e68dfdf', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '7844e009-dbcb-4b3f-8bcc-ce129b2980d5', TIMESTAMP '2023-01-04 11:28:47.926416', NULL, 'Umar@gmail.com', FALSE, 'EDMoscow', 'Umar', FALSE, NULL, 'UMAR@GMAIL.COM', 'UMAR', NULL, 'AQAAAAIAAYagAAAAEBwEsHY66XDahkNWHEHiy1GsjAbA/J5gbgwQd/H5PP2Cjo6uMQteLkDrP3/kCG/cYQ==', '79963321030', FALSE, 'ee7054ae-b950-447d-ad79-7433c7fb1ed2', FALSE, 'umar', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('131d5dd1-6bf1-4f52-be90-00815000fb57', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'fed77cfc-891a-4ebd-afea-b27cc1c282d9', TIMESTAMP '2023-01-04 11:28:47.926402', NULL, 'Khikmatillo@gmail.com', FALSE, 'EDTashkent', 'Khikmatillo', FALSE, NULL, 'KHIKMATILLO@GMAIL.COM', 'KHIKMATILLO', NULL, 'AQAAAAIAAYagAAAAEBwEsHY66XDahkNWHEHiy1GsjAbA/J5gbgwQd/H5PP2Cjo6uMQteLkDrP3/kCG/cYQ==', '998974468090', FALSE, '5d65168f-c3bb-484e-b8f5-ad590be0d496', FALSE, 'khikmatillo', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('221c0048-08c9-4e72-8f5c-ddf4039f9488', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '00c4cb8d-2c88-48d9-909d-72d97ba7340e', TIMESTAMP '2023-01-04 11:28:47.926403', NULL, 'Abbos@gmail.com', FALSE, 'EDTashkent', 'Abbos', FALSE, NULL, 'ABBOS@GMAIL.COM', 'ABBOS', NULL, 'AQAAAAIAAYagAAAAEBwEsHY66XDahkNWHEHiy1GsjAbA/J5gbgwQd/H5PP2Cjo6uMQteLkDrP3/kCG/cYQ==', '998903550022', FALSE, 'b05fd166-7c03-4ca7-90df-043a72e1f567', FALSE, 'abbos', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('30a8f9cc-8d37-4d93-ab2f-774428387e4a', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '8a09c062-a243-452b-ab71-83c9f430376f', TIMESTAMP '2023-01-04 11:28:47.926394', NULL, 'administrator@gmail.com', FALSE, 'EDSystem', 'Administrator', FALSE, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEBwEsHY66XDahkNWHEHiy1GsjAbA/J5gbgwQd/H5PP2Cjo6uMQteLkDrP3/kCG/cYQ==', '998970000675', FALSE, '19469ab9-29f8-4228-a8a2-af77e8277986', FALSE, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('34a0eb9b-6797-40f7-a84c-aa31cdd4cdc6', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '8eb3987a-5c83-4bce-aeff-7be29e8a7ca8', TIMESTAMP '2023-01-04 11:28:47.926401', NULL, 'Ubaydulla@gmail.com', FALSE, 'EDTashkent', 'Ubaydulla', FALSE, NULL, 'UBAYDULLA@GMAIL.COM', 'UBAYDULLA', NULL, 'AQAAAAIAAYagAAAAEBwEsHY66XDahkNWHEHiy1GsjAbA/J5gbgwQd/H5PP2Cjo6uMQteLkDrP3/kCG/cYQ==', '998990500033', FALSE, 'f37a9a3f-78b0-4750-9221-7031222b93df', FALSE, 'ubaydulla', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('3b9d7f21-1d66-4c98-8648-64a68777bccb', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'ba791923-1e9c-4219-bcf4-e1c316b2d38e', TIMESTAMP '2023-01-04 11:28:47.926398', NULL, 'Javohir@gmail.com', FALSE, 'EDTashkent', 'Javohir', FALSE, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEBwEsHY66XDahkNWHEHiy1GsjAbA/J5gbgwQd/H5PP2Cjo6uMQteLkDrP3/kCG/cYQ==', '998931710966', FALSE, 'cce19a32-9d6a-4cff-a3d4-d3ee16c459f5', FALSE, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('4ff7819d-8e17-4aa8-a0da-964c2db21591', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '8b7b7782-5963-4f63-96f9-50a933b912e7', TIMESTAMP '2023-01-04 11:28:47.926405', NULL, 'Ulugbek@gmail.com', FALSE, 'EDMoscow', 'Ulugbek', FALSE, NULL, 'ULUGBEK@GMAIL.COM', 'ULUGBEK', NULL, 'AQAAAAIAAYagAAAAEBwEsHY66XDahkNWHEHiy1GsjAbA/J5gbgwQd/H5PP2Cjo6uMQteLkDrP3/kCG/cYQ==', '79777403487', FALSE, 'df306666-5065-46c4-bf13-12d75792b014', FALSE, 'ulugbek', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('5a6f1681-c582-46f5-905b-4eb2c222dcf5', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '849f7fcd-2fd2-40ae-b5b3-47d90ea1a91f', TIMESTAMP '2023-01-04 11:28:47.926398', NULL, 'Nodir@gmail.com', FALSE, 'EDTashkent', 'Nodir', FALSE, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEBwEsHY66XDahkNWHEHiy1GsjAbA/J5gbgwQd/H5PP2Cjo6uMQteLkDrP3/kCG/cYQ==', '998909046605', FALSE, 'b64c18f5-8542-4a3a-a864-93c0f5c1aaf7', FALSE, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('92b7c777-0d3e-4026-844f-20164bb0f97e', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'fc96c6d5-578b-4bdc-a31a-88c06550a64d', TIMESTAMP '2023-01-04 11:28:47.926417', NULL, 'Abror@gmail.com', FALSE, 'EDMoscow', 'Abror', FALSE, NULL, 'ABROR@GMAIL.COM', 'ABROR', NULL, 'AQAAAAIAAYagAAAAEBwEsHY66XDahkNWHEHiy1GsjAbA/J5gbgwQd/H5PP2Cjo6uMQteLkDrP3/kCG/cYQ==', '79296800899', FALSE, '8f172f4f-d88a-4282-aeb0-8142ad0e8411', FALSE, 'abror', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('92db214d-cd73-4fbc-8b34-1dc0709ba0b2', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '32ad456d-fb36-4d19-8cec-ec3d6f4df3e6', TIMESTAMP '2023-01-04 11:28:47.926406', NULL, 'Abdulaziz@gmail.com', FALSE, 'EDMoscow', 'Abdulaziz', FALSE, NULL, 'ABDULAZIZ@GMAIL.COM', 'ABDULAZIZ', NULL, 'AQAAAAIAAYagAAAAEBwEsHY66XDahkNWHEHiy1GsjAbA/J5gbgwQd/H5PP2Cjo6uMQteLkDrP3/kCG/cYQ==', '79691799000', FALSE, '5ae3befe-2fc6-4b67-87fb-81fe33b222d4', FALSE, 'abdulaziz', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('9c57fadd-110a-4b45-aa89-69aa141564c6', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'b89d7478-409a-4cbb-baa1-a910f32cd82e', TIMESTAMP '2023-01-04 11:28:47.926407', NULL, 'Doniyor@gmail.com', FALSE, 'EDMoscow', 'Doniyor', FALSE, NULL, 'DONIYOR@GMAIL.COM', 'DONIYOR', NULL, 'AQAAAAIAAYagAAAAEBwEsHY66XDahkNWHEHiy1GsjAbA/J5gbgwQd/H5PP2Cjo6uMQteLkDrP3/kCG/cYQ==', '79777601654', FALSE, 'b5c2e7db-3df8-457d-8eac-66dfb610114e', FALSE, 'doniyor', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('cadaa51d-ddb3-4564-a8c5-79e80c98a032', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '6aa78bfb-abff-40c4-87e4-3899968647c0', TIMESTAMP '2023-01-04 11:28:47.926397', NULL, 'hayrulloh@gmail.com', FALSE, 'EDTashkent', 'Hayrulloh', FALSE, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEBwEsHY66XDahkNWHEHiy1GsjAbA/J5gbgwQd/H5PP2Cjo6uMQteLkDrP3/kCG/cYQ==', '998935788886', FALSE, 'c9a25ecf-05ac-4451-9534-9e26b9705c74', FALSE, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('e0c3bef9-fd70-421e-b07b-055c38b6d77c', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'f47ddfd6-19ea-4b5b-9cdd-f5dd3f8cf801', TIMESTAMP '2023-01-04 11:28:47.926404', NULL, 'Shohruh@gmail.com', FALSE, 'EDMoscow', 'Shohruh', FALSE, NULL, 'SHOHRUH@GMAIL.COM', 'SHOHRUH', NULL, 'AQAAAAIAAYagAAAAEBwEsHY66XDahkNWHEHiy1GsjAbA/J5gbgwQd/H5PP2Cjo6uMQteLkDrP3/kCG/cYQ==', '79060470085', FALSE, '9accb173-0d62-4f8d-83f9-d70f0cbfdf3a', FALSE, 'shohruh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('e13b576b-afbe-4b4c-aaad-64fd9bee3852', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '3d7f0249-1611-4918-9727-c7f01bc9152a', TIMESTAMP '2023-01-04 11:28:47.9264', NULL, 'Sadulla@gmail.com', FALSE, 'EDTashkent', 'Sadulla', FALSE, NULL, 'SADULLA@GMAIL.COM', 'SADULLA', NULL, 'AQAAAAIAAYagAAAAEBwEsHY66XDahkNWHEHiy1GsjAbA/J5gbgwQd/H5PP2Cjo6uMQteLkDrP3/kCG/cYQ==', '998994885995', FALSE, '2f47d866-bc02-4072-9f2c-0aaf9006b0ba', FALSE, 'sadulla', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('eb6a85b0-a7fb-4f8e-9bea-03825e6f020f', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'dcf94915-115f-49e4-a142-6a3a05383e40', TIMESTAMP '2023-01-04 11:28:47.926415', NULL, 'Shaxzod@gmail.com', FALSE, 'EDMoscow', 'Shaxzod', FALSE, NULL, 'SHAXZOD@GMAIL.COM', 'SHAXZOD', NULL, 'AQAAAAIAAYagAAAAEBwEsHY66XDahkNWHEHiy1GsjAbA/J5gbgwQd/H5PP2Cjo6uMQteLkDrP3/kCG/cYQ==', '79163870009', FALSE, '7db6e93c-a474-4e5b-857e-83764a993b5d', FALSE, 'shaxzod', 'UserName');
2023-01-04 11:29:09.974 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, TIMESTAMP '2023-01-04 11:28:47.862082', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, TIMESTAMP '2023-01-04 11:28:47.862083', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, TIMESTAMP '2023-01-04 11:28:47.862083', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, TIMESTAMP '2023-01-04 11:28:47.862083', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, TIMESTAMP '2023-01-04 11:28:47.862083', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, TIMESTAMP '2023-01-04 11:28:47.862083', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-01-04 11:29:09.975 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, TIMESTAMP '2023-01-04 11:28:47.926439', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, TIMESTAMP '2023-01-04 11:28:47.926439', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, TIMESTAMP '2023-01-04 11:28:47.926439', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, TIMESTAMP '2023-01-04 11:28:47.926439', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, TIMESTAMP '2023-01-04 11:28:47.926439', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, TIMESTAMP '2023-01-04 11:28:47.926439', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, TIMESTAMP '2023-01-04 11:28:47.92644', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, TIMESTAMP '2023-01-04 11:28:47.92644', NULL, NULL, 'Сомони', 972);
2023-01-04 11:29:09.976 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-01-04 11:28:47.862095', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-01-04 11:28:47.862095', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-01-04 11:28:47.862095', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-01-04 11:28:47.862095', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-01-04 11:28:47.862095', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-01-04 11:28:47.862095', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, TIMESTAMP '2023-01-04 11:28:47.862096', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, TIMESTAMP '2023-01-04 11:28:47.862096', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, TIMESTAMP '2023-01-04 11:28:47.862096', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, TIMESTAMP '2023-01-04 11:28:47.862096', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, TIMESTAMP '2023-01-04 11:28:47.862096', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, TIMESTAMP '2023-01-04 11:28:47.862096', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, TIMESTAMP '2023-01-04 11:28:47.862096', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-01-04 11:29:09.977 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, 7.0, NULL, TIMESTAMP '2023-01-04 11:28:47.926434', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, 12.0, NULL, TIMESTAMP '2023-01-04 11:28:47.926434', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, 30.0, NULL, TIMESTAMP '2023-01-04 11:28:47.926434', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, 5.0, NULL, TIMESTAMP '2023-01-04 11:28:47.926435', NULL, 'Description', NULL, 'Авто');
2023-01-04 11:29:09.978 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-01-04 11:28:47.862065', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-01-04 11:28:47.862066', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-01-04 11:28:47.862067', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-01-04 11:28:47.862067', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-01-04 11:28:47.862067', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-01-04 11:28:47.862067', NULL, 'Выдан', NULL, 'Выдан');
2023-01-04 11:29:09.980 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0', 1, NULL, 1, TIMESTAMP '2023-01-04 11:28:47.862085', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0', 1, NULL, 2, TIMESTAMP '2023-01-04 11:28:47.862086', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0', 2, NULL, 1, TIMESTAMP '2023-01-04 11:28:47.862086', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0', 2, NULL, 2, TIMESTAMP '2023-01-04 11:28:47.862086', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0', 3, NULL, 1, TIMESTAMP '2023-01-04 11:28:47.862086', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0', 3, NULL, 2, TIMESTAMP '2023-01-04 11:28:47.862086', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0', 4, NULL, 1, TIMESTAMP '2023-01-04 11:28:47.862086', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0', 4, NULL, 2, TIMESTAMP '2023-01-04 11:28:47.862086', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0', 5, NULL, 1, TIMESTAMP '2023-01-04 11:28:47.862087', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0', 5, NULL, 2, TIMESTAMP '2023-01-04 11:28:47.862087', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0', 6, NULL, 1, TIMESTAMP '2023-01-04 11:28:47.862087', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0', 6, NULL, 5, TIMESTAMP '2023-01-04 11:28:47.862087', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-01-04 11:29:09.981 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "Discriminator", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 'UserClaim', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "Discriminator", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 'UserClaim', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
2023-01-04 11:29:09.982 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '0a1e5c27-0b09-4f60-a9c3-8618791a8672');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '11fafeb4-c7c1-463c-bb1e-55203e68dfdf');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '131d5dd1-6bf1-4f52-be90-00815000fb57');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '221c0048-08c9-4e72-8f5c-ddf4039f9488');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('2c5e174e-3b0e-446f-86af-483d56fd7210', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '34a0eb9b-6797-40f7-a84c-aa31cdd4cdc6');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '3b9d7f21-1d66-4c98-8648-64a68777bccb');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '4ff7819d-8e17-4aa8-a0da-964c2db21591');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '5a6f1681-c582-46f5-905b-4eb2c222dcf5');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '92b7c777-0d3e-4026-844f-20164bb0f97e');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '92db214d-cd73-4fbc-8b34-1dc0709ba0b2');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '9c57fadd-110a-4b45-aa89-69aa141564c6');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'e0c3bef9-fd70-421e-b07b-055c38b6d77c');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'eb6a85b0-a7fb-4f8e-9bea-03825e6f020f');
2023-01-04 11:29:09.984 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (1, 0.0, NULL, 1, TIMESTAMP '2023-01-04 11:28:47.862089', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (2, 0.0, NULL, 1, TIMESTAMP '2023-01-04 11:28:47.862089', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (3, 0.0, NULL, 1, TIMESTAMP '2023-01-04 11:28:47.862089', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '5a6f1681-c582-46f5-905b-4eb2c222dcf5');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (4, 0.0, NULL, 1, TIMESTAMP '2023-01-04 11:28:47.86209', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '3b9d7f21-1d66-4c98-8648-64a68777bccb');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (5, 0.0, NULL, 1, TIMESTAMP '2023-01-04 11:28:47.86209', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '0a1e5c27-0b09-4f60-a9c3-8618791a8672');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (6, 0.0, NULL, 1, TIMESTAMP '2023-01-04 11:28:47.86209', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852');
2023-01-04 11:29:09.987 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-01-04 11:29:09.991 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-01-04 11:29:09.994 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-01-04 11:29:09.996 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-01-04 11:29:10.001 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-01-04 11:29:10.006 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-01-04 11:29:10.008 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-01-04 11:29:10.010 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId" ON "AccountHistory" ("PayerId");
2023-01-04 11:29:10.013 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-01-04 11:29:10.015 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-01-04 11:29:10.018 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-01-04 11:29:10.020 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-01-04 11:29:10.023 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-01-04 11:29:10.026 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-01-04 11:29:10.028 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-01-04 11:29:10.031 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-01-04 11:29:10.033 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-01-04 11:29:10.036 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-01-04 11:29:10.038 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-01-04 11:29:10.041 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-01-04 11:29:10.048 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-01-04 11:29:10.053 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-01-04 11:29:10.057 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-01-04 11:29:10.062 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-01-04 11:29:10.064 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-01-04 11:29:10.067 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-01-04 11:29:10.069 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-01-04 11:29:10.072 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-01-04 11:29:10.074 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-01-04 11:29:10.076 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-01-04 11:29:10.079 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-01-04 11:29:10.081 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-01-04 11:29:10.083 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-01-04 11:29:10.086 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-01-04 11:29:10.088 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-01-04 11:29:10.090 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-01-04 11:29:10.093 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-01-04 11:29:10.095 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-01-04 11:29:10.098 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId" ON "ParcelOwners" ("RecepientCourierId");
2023-01-04 11:29:10.104 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId" ON "ParcelOwners" ("RecepientId");
2023-01-04 11:29:10.106 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId" ON "ParcelOwners" ("RecepientStaffId");
2023-01-04 11:29:10.109 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId" ON "ParcelOwners" ("SenderCourierId");
2023-01-04 11:29:10.113 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId" ON "ParcelOwners" ("SenderId");
2023-01-04 11:29:10.117 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId" ON "ParcelOwners" ("SenderStaffId");
2023-01-04 11:29:10.119 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-01-04 11:29:10.122 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-01-04 11:29:10.124 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-01-04 11:29:10.127 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-01-04 11:29:10.129 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-01-04 11:29:10.131 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-01-04 11:29:10.134 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-01-04 11:29:10.136 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-01-04 11:29:10.138 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-01-04 11:29:10.141 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-01-04 11:29:10.143 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-01-04 11:29:10.146 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-01-04 11:29:10.148 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-01-04 11:29:10.153 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-01-04 11:29:10.156 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId" ON "UserAccount" ("UserId");
2023-01-04 11:29:10.160 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-01-04 11:29:10.164 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-01-04 11:29:10.167 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-01-04 11:29:10.170 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-01-04 11:29:10.172 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId" ON "UserAccountHistory" ("UserId");
2023-01-04 11:29:10.181 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT setval(
    pg_get_serial_sequence('"Branch"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Branch") + 1,
        nextval(pg_get_serial_sequence('"Branch"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Currency"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Currency") + 1,
        nextval(pg_get_serial_sequence('"Currency"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ExpenseType"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ExpenseType") + 1,
        nextval(pg_get_serial_sequence('"ExpenseType"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Plan"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Plan") + 1,
        nextval(pg_get_serial_sequence('"Plan"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Status"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Status") + 1,
        nextval(pg_get_serial_sequence('"Status"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Account"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Account") + 1,
        nextval(pg_get_serial_sequence('"Account"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUserClaims"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUserClaims") + 1,
        nextval(pg_get_serial_sequence('"AspNetUserClaims"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"UserAccount"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "UserAccount") + 1,
        nextval(pg_get_serial_sequence('"UserAccount"', 'Id'))),
    false);
2023-01-04 11:29:10.181 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20230104062848_aa', '7.0.1');
2023-01-04 11:29:29.124 +05:00 [INF] Executed DbCommand (31ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
REVOKE CONNECT ON DATABASE edsystemsdatabase FROM PUBLIC;
SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE datname = 'edsystemsdatabase';
2023-01-04 11:29:30.113 +05:00 [INF] Executed DbCommand (962ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE edsystemsdatabase;
2023-01-04 11:29:30.915 +05:00 [INF] Executed DbCommand (149ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE edsystemsdatabase;
2023-01-04 11:29:31.384 +05:00 [INF] Executed DbCommand (25ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-01-04 11:29:31.393 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NOT NULL,
    "Country" varchar(200) NOT NULL,
    "Code" varchar(200) NULL,
    "City" varchar(200) NOT NULL,
    "Address" varchar(200) NOT NULL,
    "Email" varchar(200) NOT NULL,
    "Phone" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-01-04 11:29:31.400 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Currency" PRIMARY KEY ("Id")
);
2023-01-04 11:29:31.403 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT "PK_Expenses" PRIMARY KEY ("Id")
);
2023-01-04 11:29:31.408 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" varchar(200) NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ExpenseType" PRIMARY KEY ("Id")
);
2023-01-04 11:29:31.414 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Parcel" PRIMARY KEY ("Id")
);
2023-01-04 11:29:31.420 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Cost" numeric(18,3) NOT NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Plan" PRIMARY KEY ("Id")
);
2023-01-04 11:29:31.427 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NULL,
    "Token" text NULL,
    "JwtId" text NULL,
    "IsUsed" boolean NOT NULL,
    "IsRevoked" boolean NOT NULL,
    "AddedDateTime" timestamp without time zone NOT NULL,
    "ExpiryDateTime" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_RefreshToken" PRIMARY KEY ("Id")
);
2023-01-04 11:29:31.434 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" varchar(200) NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Status" PRIMARY KEY ("Id")
);
2023-01-04 11:29:31.443 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TokenId" text NULL,
    "RefreshToken" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Tokens" PRIMARY KEY ("Id")
);
2023-01-04 11:29:31.455 +05:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:31.461 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar(200) NULL,
    "Name" varchar(200) NULL,
    "Balance" varchar(200) NOT NULL,
    "BranchId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Account" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:31.468 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ToBranchId" integer NOT NULL,
    "FromBranchId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelBranch" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:31.483 +05:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StateDeliveryToBranch" boolean NOT NULL,
    "StatePickingUp" boolean NOT NULL,
    "StateDeliveryToPoint" boolean NOT NULL,
    "StateBuyout" boolean NOT NULL,
    "CostPickingUp" numeric(18,3) NOT NULL,
    "CostDeliveryToPoint" numeric(18,3) NOT NULL,
    "CostDeliveryToBranch" numeric(18,3) NOT NULL,
    "CostBuyout" numeric NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelCost" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:31.490 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Description" varchar NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelDescription" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:31.496 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelImage" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:31.504 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" text NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelItem" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:31.511 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Cost" numeric NOT NULL,
    "CourierId" varchar(200) NULL,
    "JobType" varchar(200) NULL,
    "ParcelId" integer NOT NULL,
    "PaymentState" boolean NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelJob" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:31.519 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Weight" numeric(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSize" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:31.525 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSound" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:31.531 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PlanId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelPlan" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-01-04 11:29:31.537 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StatusId" integer NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelStatus" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-01-04 11:29:31.543 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" text NOT NULL,
    "FirstName" text NULL,
    "LastName" text NULL,
    "Address" text NULL,
    "UserNameT" text NULL,
    "ChatId" bigint NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "ParcelJobId" integer NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-01-04 11:29:31.550 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "PayerId" varchar(200) NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_AccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId" FOREIGN KEY ("PayerId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:31.556 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    "Discriminator" text NOT NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:31.565 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:31.572 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:31.578 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" text NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:31.589 +05:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SenderId" varchar(200) NULL,
    "RecepientId" varchar(200) NULL,
    "RecepientStaffId" varchar(200) NULL,
    "SenderStaffId" varchar(200) NULL,
    "RecepientCourierId" varchar(200) NULL,
    "SenderCourierId" varchar(200) NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelOwners" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId" FOREIGN KEY ("RecepientCourierId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId" FOREIGN KEY ("RecepientId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId" FOREIGN KEY ("RecepientStaffId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId" FOREIGN KEY ("SenderCourierId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId" FOREIGN KEY ("SenderId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId" FOREIGN KEY ("SenderStaffId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:31.595 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar(200) NULL,
    "Name" varchar(200) NULL,
    "Balance" numeric NOT NULL,
    "UserId" varchar(200) NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccount" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:31.602 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "UserId" varchar(200) NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-01-04 11:29:31.603 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('2c5e174e-3b0e-446f-86af-483d56fd7210', '0ff638ed-0d3f-4ac1-90c6-5170d319747f', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('336b1b38-f4c9-4844-8dcb-b59a0d7f0533', '2cdcfa61-4ba0-43ee-9c21-462b6f915fa5', 'Customer', 'CUSTOMER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '12eb1ef9-7228-41a1-9c46-3f15647b2501', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('5919c97a-b888-4858-bbbe-0123a1952624', '6c1d3318-850f-49e0-98f0-0fb9ee85f170', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', 'e5456658-0309-4662-a20b-dcc262e7fb79', 'Manager', 'MANAGER');
2023-01-04 11:29:31.611 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('0a1e5c27-0b09-4f60-a9c3-8618791a8672', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'd91b9b01-a1aa-4666-ae0a-cd329f3b9df6', TIMESTAMP '2023-01-04 11:29:30.34581', NULL, 'Ismoil@gmail.com', FALSE, 'EDTashkent', 'Ismoil', FALSE, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAENxo3Y4JwTuVPkngfRIenBncHDSir7lWn88r5PP2m4befmjaL8F34d/pqIvtOQHeew==', '998977093262', FALSE, '4ba74dec-17c6-4335-99e3-40c73dce8290', FALSE, 'ismoil', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('11fafeb4-c7c1-463c-bb1e-55203e68dfdf', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '56169e0f-97c5-4d2a-bf34-ea894f6bd3c6', TIMESTAMP '2023-01-04 11:29:30.34582', NULL, 'Umar@gmail.com', FALSE, 'EDMoscow', 'Umar', FALSE, NULL, 'UMAR@GMAIL.COM', 'UMAR', NULL, 'AQAAAAIAAYagAAAAENxo3Y4JwTuVPkngfRIenBncHDSir7lWn88r5PP2m4befmjaL8F34d/pqIvtOQHeew==', '79963321030', FALSE, '8fe1f347-c387-48e8-b91e-103cf0affdd0', FALSE, 'umar', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('131d5dd1-6bf1-4f52-be90-00815000fb57', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '546928ff-9ebd-46f9-8e56-8d83e073d6ad', TIMESTAMP '2023-01-04 11:29:30.345814', NULL, 'Khikmatillo@gmail.com', FALSE, 'EDTashkent', 'Khikmatillo', FALSE, NULL, 'KHIKMATILLO@GMAIL.COM', 'KHIKMATILLO', NULL, 'AQAAAAIAAYagAAAAENxo3Y4JwTuVPkngfRIenBncHDSir7lWn88r5PP2m4befmjaL8F34d/pqIvtOQHeew==', '998974468090', FALSE, '1d2980e3-1623-4b78-8167-18d292028b2b', FALSE, 'khikmatillo', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('221c0048-08c9-4e72-8f5c-ddf4039f9488', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'cdc07682-2741-46dd-a805-19f58dbfd6a9', TIMESTAMP '2023-01-04 11:29:30.345815', NULL, 'Abbos@gmail.com', FALSE, 'EDTashkent', 'Abbos', FALSE, NULL, 'ABBOS@GMAIL.COM', 'ABBOS', NULL, 'AQAAAAIAAYagAAAAENxo3Y4JwTuVPkngfRIenBncHDSir7lWn88r5PP2m4befmjaL8F34d/pqIvtOQHeew==', '998903550022', FALSE, 'c7984fb9-6a60-45c2-91b1-62376ffeea3f', FALSE, 'abbos', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('30a8f9cc-8d37-4d93-ab2f-774428387e4a', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '425a82f1-2e9c-43a4-9f3f-c4b9edcb7ce8', TIMESTAMP '2023-01-04 11:29:30.345799', NULL, 'administrator@gmail.com', FALSE, 'EDSystem', 'Administrator', FALSE, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAENxo3Y4JwTuVPkngfRIenBncHDSir7lWn88r5PP2m4befmjaL8F34d/pqIvtOQHeew==', '998970000675', FALSE, '7b1dcaa5-ca65-4bcc-b8fa-432348061ffc', FALSE, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('34a0eb9b-6797-40f7-a84c-aa31cdd4cdc6', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'ae6b37a7-5a09-4494-85ea-36808574ac06', TIMESTAMP '2023-01-04 11:29:30.345813', NULL, 'Ubaydulla@gmail.com', FALSE, 'EDTashkent', 'Ubaydulla', FALSE, NULL, 'UBAYDULLA@GMAIL.COM', 'UBAYDULLA', NULL, 'AQAAAAIAAYagAAAAENxo3Y4JwTuVPkngfRIenBncHDSir7lWn88r5PP2m4befmjaL8F34d/pqIvtOQHeew==', '998990500033', FALSE, '857446c5-d3d4-4ea7-9731-84596d75d438', FALSE, 'ubaydulla', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('3b9d7f21-1d66-4c98-8648-64a68777bccb', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '00e28762-56d1-4721-b08c-19c93ef002fd', TIMESTAMP '2023-01-04 11:29:30.345809', NULL, 'Javohir@gmail.com', FALSE, 'EDTashkent', 'Javohir', FALSE, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAENxo3Y4JwTuVPkngfRIenBncHDSir7lWn88r5PP2m4befmjaL8F34d/pqIvtOQHeew==', '998931710966', FALSE, 'ed4670e6-211e-4352-b71b-d471f2e557e7', FALSE, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('4ff7819d-8e17-4aa8-a0da-964c2db21591', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'e553d6b6-29ea-4058-a07b-663c095c5b76', TIMESTAMP '2023-01-04 11:29:30.345817', NULL, 'Ulugbek@gmail.com', FALSE, 'EDMoscow', 'Ulugbek', FALSE, NULL, 'ULUGBEK@GMAIL.COM', 'ULUGBEK', NULL, 'AQAAAAIAAYagAAAAENxo3Y4JwTuVPkngfRIenBncHDSir7lWn88r5PP2m4befmjaL8F34d/pqIvtOQHeew==', '79777403487', FALSE, '8f9c373b-e7c1-4af7-b994-3180c729a473', FALSE, 'ulugbek', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('5a6f1681-c582-46f5-905b-4eb2c222dcf5', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'ff47294b-40e2-4798-9d4a-950a80d51f31', TIMESTAMP '2023-01-04 11:29:30.345808', NULL, 'Nodir@gmail.com', FALSE, 'EDTashkent', 'Nodir', FALSE, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAENxo3Y4JwTuVPkngfRIenBncHDSir7lWn88r5PP2m4befmjaL8F34d/pqIvtOQHeew==', '998909046605', FALSE, '8faa143b-e411-4691-b95f-794215bf3461', FALSE, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('92b7c777-0d3e-4026-844f-20164bb0f97e', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'e88a5770-56f4-4cd5-ba30-df0c6d275b3b', TIMESTAMP '2023-01-04 11:29:30.345821', NULL, 'Abror@gmail.com', FALSE, 'EDMoscow', 'Abror', FALSE, NULL, 'ABROR@GMAIL.COM', 'ABROR', NULL, 'AQAAAAIAAYagAAAAENxo3Y4JwTuVPkngfRIenBncHDSir7lWn88r5PP2m4befmjaL8F34d/pqIvtOQHeew==', '79296800899', FALSE, '0a4aca30-adae-4bdb-8133-a8b7c08d1931', FALSE, 'abror', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('92db214d-cd73-4fbc-8b34-1dc0709ba0b2', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'b56700ec-bfa2-4528-b072-11b5bf172812', TIMESTAMP '2023-01-04 11:29:30.345817', NULL, 'Abdulaziz@gmail.com', FALSE, 'EDMoscow', 'Abdulaziz', FALSE, NULL, 'ABDULAZIZ@GMAIL.COM', 'ABDULAZIZ', NULL, 'AQAAAAIAAYagAAAAENxo3Y4JwTuVPkngfRIenBncHDSir7lWn88r5PP2m4befmjaL8F34d/pqIvtOQHeew==', '79691799000', FALSE, '4336023d-2c88-4831-a0f2-08d6eae9b1dd', FALSE, 'abdulaziz', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('9c57fadd-110a-4b45-aa89-69aa141564c6', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '98f8efc1-fa24-4171-8a07-ed37c6787434', TIMESTAMP '2023-01-04 11:29:30.345818', NULL, 'Doniyor@gmail.com', FALSE, 'EDMoscow', 'Doniyor', FALSE, NULL, 'DONIYOR@GMAIL.COM', 'DONIYOR', NULL, 'AQAAAAIAAYagAAAAENxo3Y4JwTuVPkngfRIenBncHDSir7lWn88r5PP2m4befmjaL8F34d/pqIvtOQHeew==', '79777601654', FALSE, '7b208281-19d6-4fd5-b6eb-2e3034df9726', FALSE, 'doniyor', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('cadaa51d-ddb3-4564-a8c5-79e80c98a032', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'db14d995-d342-4326-8902-ed4232c8e549', TIMESTAMP '2023-01-04 11:29:30.345807', NULL, 'hayrulloh@gmail.com', FALSE, 'EDTashkent', 'Hayrulloh', FALSE, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAENxo3Y4JwTuVPkngfRIenBncHDSir7lWn88r5PP2m4befmjaL8F34d/pqIvtOQHeew==', '998935788886', FALSE, 'c7261712-e2c8-4af6-a5e3-ad0ff8720b1c', FALSE, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('e0c3bef9-fd70-421e-b07b-055c38b6d77c', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '8d89c453-1f75-40c8-a39d-c47aa7c8d86e', TIMESTAMP '2023-01-04 11:29:30.345816', NULL, 'Shohruh@gmail.com', FALSE, 'EDMoscow', 'Shohruh', FALSE, NULL, 'SHOHRUH@GMAIL.COM', 'SHOHRUH', NULL, 'AQAAAAIAAYagAAAAENxo3Y4JwTuVPkngfRIenBncHDSir7lWn88r5PP2m4befmjaL8F34d/pqIvtOQHeew==', '79060470085', FALSE, '0e4f8f35-f117-44c7-afbf-eadbd510bbe8', FALSE, 'shohruh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('e13b576b-afbe-4b4c-aaad-64fd9bee3852', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '8df12075-b7b1-42e8-858e-0addf67db37b', TIMESTAMP '2023-01-04 11:29:30.345812', NULL, 'Sadulla@gmail.com', FALSE, 'EDTashkent', 'Sadulla', FALSE, NULL, 'SADULLA@GMAIL.COM', 'SADULLA', NULL, 'AQAAAAIAAYagAAAAENxo3Y4JwTuVPkngfRIenBncHDSir7lWn88r5PP2m4befmjaL8F34d/pqIvtOQHeew==', '998994885995', FALSE, '83f6df28-68b2-42f2-ae3e-273018c85e21', FALSE, 'sadulla', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('eb6a85b0-a7fb-4f8e-9bea-03825e6f020f', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '52b11a5d-a3d5-448b-b3b2-2c0ab00897b5', TIMESTAMP '2023-01-04 11:29:30.345819', NULL, 'Shaxzod@gmail.com', FALSE, 'EDMoscow', 'Shaxzod', FALSE, NULL, 'SHAXZOD@GMAIL.COM', 'SHAXZOD', NULL, 'AQAAAAIAAYagAAAAENxo3Y4JwTuVPkngfRIenBncHDSir7lWn88r5PP2m4befmjaL8F34d/pqIvtOQHeew==', '79163870009', FALSE, '56a3858e-af59-4612-812d-ce0425e19614', FALSE, 'shaxzod', 'UserName');
2023-01-04 11:29:31.612 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, TIMESTAMP '2023-01-04 11:29:30.284493', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, TIMESTAMP '2023-01-04 11:29:30.284494', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, TIMESTAMP '2023-01-04 11:29:30.284494', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, TIMESTAMP '2023-01-04 11:29:30.284494', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, TIMESTAMP '2023-01-04 11:29:30.284494', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, TIMESTAMP '2023-01-04 11:29:30.284494', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-01-04 11:29:31.613 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, TIMESTAMP '2023-01-04 11:29:30.345841', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, TIMESTAMP '2023-01-04 11:29:30.345841', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, TIMESTAMP '2023-01-04 11:29:30.345841', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, TIMESTAMP '2023-01-04 11:29:30.345842', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, TIMESTAMP '2023-01-04 11:29:30.345842', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, TIMESTAMP '2023-01-04 11:29:30.345842', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, TIMESTAMP '2023-01-04 11:29:30.345842', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, TIMESTAMP '2023-01-04 11:29:30.345842', NULL, NULL, 'Сомони', 972);
2023-01-04 11:29:31.614 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-01-04 11:29:30.284507', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-01-04 11:29:30.284507', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-01-04 11:29:30.284507', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-01-04 11:29:30.284507', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-01-04 11:29:30.284508', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-01-04 11:29:30.284509', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, TIMESTAMP '2023-01-04 11:29:30.284509', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, TIMESTAMP '2023-01-04 11:29:30.284509', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, TIMESTAMP '2023-01-04 11:29:30.284509', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, TIMESTAMP '2023-01-04 11:29:30.284509', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, TIMESTAMP '2023-01-04 11:29:30.284509', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, TIMESTAMP '2023-01-04 11:29:30.284509', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, TIMESTAMP '2023-01-04 11:29:30.284509', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-01-04 11:29:31.615 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, 7.0, NULL, TIMESTAMP '2023-01-04 11:29:30.345837', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, 12.0, NULL, TIMESTAMP '2023-01-04 11:29:30.345838', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, 30.0, NULL, TIMESTAMP '2023-01-04 11:29:30.345838', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, 5.0, NULL, TIMESTAMP '2023-01-04 11:29:30.345838', NULL, 'Description', NULL, 'Авто');
2023-01-04 11:29:31.616 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-01-04 11:29:30.284485', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-01-04 11:29:30.284487', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-01-04 11:29:30.284487', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-01-04 11:29:30.284488', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-01-04 11:29:30.284489', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-01-04 11:29:30.284489', NULL, 'Выдан', NULL, 'Выдан');
2023-01-04 11:29:31.618 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0', 1, NULL, 1, TIMESTAMP '2023-01-04 11:29:30.284497', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0', 1, NULL, 2, TIMESTAMP '2023-01-04 11:29:30.284497', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0', 2, NULL, 1, TIMESTAMP '2023-01-04 11:29:30.284497', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0', 2, NULL, 2, TIMESTAMP '2023-01-04 11:29:30.284497', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0', 3, NULL, 1, TIMESTAMP '2023-01-04 11:29:30.284498', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0', 3, NULL, 2, TIMESTAMP '2023-01-04 11:29:30.284498', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0', 4, NULL, 1, TIMESTAMP '2023-01-04 11:29:30.284498', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0', 4, NULL, 2, TIMESTAMP '2023-01-04 11:29:30.284498', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0', 5, NULL, 1, TIMESTAMP '2023-01-04 11:29:30.284499', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0', 5, NULL, 2, TIMESTAMP '2023-01-04 11:29:30.284499', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0', 6, NULL, 1, TIMESTAMP '2023-01-04 11:29:30.284499', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0', 6, NULL, 5, TIMESTAMP '2023-01-04 11:29:30.284499', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-01-04 11:29:31.619 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "Discriminator", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 'UserClaim', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "Discriminator", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 'UserClaim', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
2023-01-04 11:29:31.621 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '0a1e5c27-0b09-4f60-a9c3-8618791a8672');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '11fafeb4-c7c1-463c-bb1e-55203e68dfdf');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '131d5dd1-6bf1-4f52-be90-00815000fb57');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '221c0048-08c9-4e72-8f5c-ddf4039f9488');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('2c5e174e-3b0e-446f-86af-483d56fd7210', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '34a0eb9b-6797-40f7-a84c-aa31cdd4cdc6');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '3b9d7f21-1d66-4c98-8648-64a68777bccb');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '4ff7819d-8e17-4aa8-a0da-964c2db21591');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '5a6f1681-c582-46f5-905b-4eb2c222dcf5');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '92b7c777-0d3e-4026-844f-20164bb0f97e');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '92db214d-cd73-4fbc-8b34-1dc0709ba0b2');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '9c57fadd-110a-4b45-aa89-69aa141564c6');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'e0c3bef9-fd70-421e-b07b-055c38b6d77c');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'eb6a85b0-a7fb-4f8e-9bea-03825e6f020f');
2023-01-04 11:29:31.622 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (1, 0.0, NULL, 1, TIMESTAMP '2023-01-04 11:29:30.284501', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (2, 0.0, NULL, 1, TIMESTAMP '2023-01-04 11:29:30.284501', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (3, 0.0, NULL, 1, TIMESTAMP '2023-01-04 11:29:30.284501', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '5a6f1681-c582-46f5-905b-4eb2c222dcf5');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (4, 0.0, NULL, 1, TIMESTAMP '2023-01-04 11:29:30.284502', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '3b9d7f21-1d66-4c98-8648-64a68777bccb');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (5, 0.0, NULL, 1, TIMESTAMP '2023-01-04 11:29:30.284502', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '0a1e5c27-0b09-4f60-a9c3-8618791a8672');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (6, 0.0, NULL, 1, TIMESTAMP '2023-01-04 11:29:30.284503', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852');
2023-01-04 11:29:31.629 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-01-04 11:29:31.632 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-01-04 11:29:31.635 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-01-04 11:29:31.637 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-01-04 11:29:31.639 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-01-04 11:29:31.642 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-01-04 11:29:31.644 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-01-04 11:29:31.647 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId" ON "AccountHistory" ("PayerId");
2023-01-04 11:29:31.650 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-01-04 11:29:31.653 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-01-04 11:29:31.655 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-01-04 11:29:31.658 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-01-04 11:29:31.660 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-01-04 11:29:31.663 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-01-04 11:29:31.666 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-01-04 11:29:31.669 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-01-04 11:29:31.671 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-01-04 11:29:31.674 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-01-04 11:29:31.678 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-01-04 11:29:31.682 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-01-04 11:29:31.684 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-01-04 11:29:31.687 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-01-04 11:29:31.690 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-01-04 11:29:31.693 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-01-04 11:29:31.696 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-01-04 11:29:31.700 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-01-04 11:29:31.703 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-01-04 11:29:31.705 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-01-04 11:29:31.708 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-01-04 11:29:31.710 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-01-04 11:29:31.712 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-01-04 11:29:31.715 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-01-04 11:29:31.717 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-01-04 11:29:31.720 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-01-04 11:29:31.722 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-01-04 11:29:31.724 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-01-04 11:29:31.727 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-01-04 11:29:31.729 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-01-04 11:29:31.732 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId" ON "ParcelOwners" ("RecepientCourierId");
2023-01-04 11:29:31.735 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId" ON "ParcelOwners" ("RecepientId");
2023-01-04 11:29:31.737 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId" ON "ParcelOwners" ("RecepientStaffId");
2023-01-04 11:29:31.739 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId" ON "ParcelOwners" ("SenderCourierId");
2023-01-04 11:29:31.741 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId" ON "ParcelOwners" ("SenderId");
2023-01-04 11:29:31.743 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId" ON "ParcelOwners" ("SenderStaffId");
2023-01-04 11:29:31.746 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-01-04 11:29:31.748 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-01-04 11:29:31.751 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-01-04 11:29:31.753 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-01-04 11:29:31.755 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-01-04 11:29:31.757 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-01-04 11:29:31.759 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-01-04 11:29:31.762 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-01-04 11:29:31.765 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-01-04 11:29:31.768 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-01-04 11:29:31.771 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-01-04 11:29:31.773 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-01-04 11:29:31.775 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-01-04 11:29:31.778 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-01-04 11:29:31.782 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId" ON "UserAccount" ("UserId");
2023-01-04 11:29:31.784 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-01-04 11:29:31.786 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-01-04 11:29:31.789 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-01-04 11:29:31.791 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-01-04 11:29:31.794 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId" ON "UserAccountHistory" ("UserId");
2023-01-04 11:29:31.800 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT setval(
    pg_get_serial_sequence('"Branch"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Branch") + 1,
        nextval(pg_get_serial_sequence('"Branch"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Currency"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Currency") + 1,
        nextval(pg_get_serial_sequence('"Currency"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ExpenseType"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ExpenseType") + 1,
        nextval(pg_get_serial_sequence('"ExpenseType"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Plan"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Plan") + 1,
        nextval(pg_get_serial_sequence('"Plan"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Status"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Status") + 1,
        nextval(pg_get_serial_sequence('"Status"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Account"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Account") + 1,
        nextval(pg_get_serial_sequence('"Account"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUserClaims"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUserClaims") + 1,
        nextval(pg_get_serial_sequence('"AspNetUserClaims"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"UserAccount"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "UserAccount") + 1,
        nextval(pg_get_serial_sequence('"UserAccount"', 'Id'))),
    false);
2023-01-04 11:29:31.844 +05:00 [INF] User profile is available. Using 'C:\Users\ashz\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-04 11:29:31.959 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-01-04 11:29:31.959 +05:00 [INF] Hosting environment: Development
2023-01-04 11:29:31.959 +05:00 [INF] Content root path: D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi
2023-01-04 11:29:31.986 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/index.html - -
2023-01-04 11:29:32.212 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/index.html - - - 200 - text/html;charset=utf-8 225.9982ms
2023-01-04 11:29:32.213 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - -
2023-01-04 11:29:32.225 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - - - 200 12002 application/javascript;+charset=utf-8 5.3398ms
2023-01-04 11:29:32.237 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_vs/browserLink - -
2023-01-04 11:29:32.268 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 30.2645ms
2023-01-04 11:29:32.345 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - -
2023-01-04 11:29:32.650 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 304.9776ms
2023-01-04 11:29:38.153 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/api/Branch - -
2023-01-04 11:29:38.199 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 11:29:38.212 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-01-04 11:29:38.588 +05:00 [INF] Executing action method EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) - Validation state: "Valid"
2023-01-04 11:29:38.606 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-01-04 11:29:38.861 +05:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Name", b."Country", b."Code", b."City", b."Address", b."Email", b."Phone", b."DateCreated", b."DateUpdated"
FROM "Branch" AS b
2023-01-04 11:29:38.892 +05:00 [INF] Executed action method EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 301.9712ms.
2023-01-04 11:29:38.898 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm'.
2023-01-04 11:29:39.021 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 806.4923ms
2023-01-04 11:29:39.021 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 11:29:39.025 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/api/Branch - - - 200 1853 application/json;+charset=utf-8 872.3193ms
2023-01-04 11:30:37.250 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/api/Plan - -
2023-01-04 11:30:37.271 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.PlanController.GetAll (EDSystems.WebApi)'
2023-01-04 11:30:37.273 +05:00 [INF] Route matched with {action = "GetAll", controller = "Plan"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Plans.GetPlanList.PlanListVm]] GetAll() on controller EDSystems.WebApi.Controllers.PlanController (EDSystems.WebApi).
2023-01-04 11:30:37.288 +05:00 [INF] Executing action method EDSystems.WebApi.Controllers.PlanController.GetAll (EDSystems.WebApi) - Validation state: "Valid"
2023-01-04 11:30:37.290 +05:00 [INF] NotesRequest: GetPlanListQuery {"$type":"GetPlanListQuery"}
2023-01-04 11:30:37.384 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT p."Id", p."Name", p."Cost", p."Description", p."DateCreated", p."DateUpdated"
FROM "Plan" AS p
2023-01-04 11:30:37.390 +05:00 [INF] Executed action method EDSystems.WebApi.Controllers.PlanController.GetAll (EDSystems.WebApi), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 102.4651ms.
2023-01-04 11:30:37.392 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.EDSystems.Queries.Plans.GetPlanList.PlanListVm'.
2023-01-04 11:30:37.401 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.PlanController.GetAll (EDSystems.WebApi) in 127.0275ms
2023-01-04 11:30:37.401 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.PlanController.GetAll (EDSystems.WebApi)'
2023-01-04 11:30:37.401 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/api/Plan - - - 200 553 application/json;+charset=utf-8 150.7515ms
2023-01-04 11:33:26.795 +05:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:33:26.949 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2023-01-04 11:33:27.024 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:33:27.069 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-01-04 11:33:27.080 +05:00 [INF] Applying migration '20230104063319_aa1'.
2023-01-04 11:33:27.508 +05:00 [ERR] Failed executing DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-01-04 11:37:09.446 +05:00 [INF] Executed DbCommand (29ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:37:09.642 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:37:09.693 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-01-04 11:37:09.703 +05:00 [INF] No migrations were applied. The database is already up to date.
2023-01-04 11:37:18.665 +05:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:37:18.828 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-01-04 11:38:05.785 +05:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:38:05.875 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:38:05.921 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-01-04 11:38:05.932 +05:00 [INF] Applying migration '20230104063746_Initialize'.
2023-01-04 11:38:06.359 +05:00 [ERR] Failed executing DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-01-04 11:39:28.334 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE edsystemsdatabase;
2023-01-04 11:39:28.668 +05:00 [INF] Executed DbCommand (21ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2023-01-04 11:39:28.744 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 11:39:28.782 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-01-04 11:39:28.791 +05:00 [INF] Applying migration '20230104063746_Initialize'.
2023-01-04 11:39:29.070 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-01-04 11:39:29.079 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NOT NULL,
    "Country" varchar(200) NOT NULL,
    "Code" varchar(200) NULL,
    "City" varchar(200) NOT NULL,
    "Address" varchar(200) NOT NULL,
    "Email" varchar(200) NOT NULL,
    "Phone" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-01-04 11:39:29.084 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Currency" PRIMARY KEY ("Id")
);
2023-01-04 11:39:29.088 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT "PK_Expenses" PRIMARY KEY ("Id")
);
2023-01-04 11:39:29.093 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" varchar(200) NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ExpenseType" PRIMARY KEY ("Id")
);
2023-01-04 11:39:29.098 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Parcel" PRIMARY KEY ("Id")
);
2023-01-04 11:39:29.104 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Cost" numeric(18,3) NOT NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Plan" PRIMARY KEY ("Id")
);
2023-01-04 11:39:29.111 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NULL,
    "Token" text NULL,
    "JwtId" text NULL,
    "IsUsed" boolean NOT NULL,
    "IsRevoked" boolean NOT NULL,
    "AddedDateTime" timestamp without time zone NOT NULL,
    "ExpiryDateTime" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_RefreshToken" PRIMARY KEY ("Id")
);
2023-01-04 11:39:29.119 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" varchar(200) NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Status" PRIMARY KEY ("Id")
);
2023-01-04 11:39:29.130 +05:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TokenId" text NULL,
    "RefreshToken" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Tokens" PRIMARY KEY ("Id")
);
2023-01-04 11:39:29.143 +05:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-01-04 11:39:29.149 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar(200) NULL,
    "Name" varchar(200) NULL,
    "Balance" varchar(200) NOT NULL,
    "BranchId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Account" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-01-04 11:39:29.157 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ToBranchId" integer NOT NULL,
    "FromBranchId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelBranch" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:39:29.165 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StateDeliveryToBranch" boolean NOT NULL,
    "StatePickingUp" boolean NOT NULL,
    "StateDeliveryToPoint" boolean NOT NULL,
    "StateBuyout" boolean NOT NULL,
    "CostPickingUp" numeric(18,3) NOT NULL,
    "CostDeliveryToPoint" numeric(18,3) NOT NULL,
    "CostDeliveryToBranch" numeric(18,3) NOT NULL,
    "CostBuyout" numeric NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelCost" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:39:29.174 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Description" varchar NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelDescription" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:39:29.180 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelImage" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:39:29.186 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" text NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelItem" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:39:29.192 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Cost" numeric NOT NULL,
    "CourierId" varchar(200) NULL,
    "JobType" varchar(200) NULL,
    "ParcelId" integer NOT NULL,
    "PaymentState" boolean NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelJob" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:39:29.198 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Weight" numeric(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSize" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:39:29.204 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSound" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:39:29.210 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PlanId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelPlan" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-01-04 11:39:29.216 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StatusId" integer NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelStatus" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-01-04 11:39:29.222 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" text NOT NULL,
    "FirstName" text NULL,
    "LastName" text NULL,
    "Address" text NULL,
    "UserNameT" text NULL,
    "ChatId" bigint NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "ParcelJobId" integer NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-01-04 11:39:29.228 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "PayerId" varchar(200) NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_AccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId" FOREIGN KEY ("PayerId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:39:29.234 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    "Discriminator" text NOT NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 11:39:29.240 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 11:39:29.248 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 11:39:29.253 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" text NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 11:39:29.262 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SenderId" varchar(200) NULL,
    "RecepientId" varchar(200) NULL,
    "RecepientStaffId" varchar(200) NULL,
    "SenderStaffId" varchar(200) NULL,
    "RecepientCourierId" varchar(200) NULL,
    "SenderCourierId" varchar(200) NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelOwners" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId" FOREIGN KEY ("RecepientCourierId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId" FOREIGN KEY ("RecepientId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId" FOREIGN KEY ("RecepientStaffId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId" FOREIGN KEY ("SenderCourierId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId" FOREIGN KEY ("SenderId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId" FOREIGN KEY ("SenderStaffId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 11:39:29.268 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar(200) NULL,
    "Name" varchar(200) NULL,
    "Balance" numeric NOT NULL,
    "UserId" varchar(200) NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccount" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-01-04 11:39:29.275 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "UserId" varchar(200) NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-01-04 11:39:29.278 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('2c5e174e-3b0e-446f-86af-483d56fd7210', 'a9640c13-20e8-4be5-b852-472c998447b1', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('336b1b38-f4c9-4844-8dcb-b59a0d7f0533', '5226b80b-955e-407a-b0b6-cf046ed2acf3', 'Customer', 'CUSTOMER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '65a6ff99-f748-4c4c-a5f2-dc854112b1af', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('5919c97a-b888-4858-bbbe-0123a1952624', '55c801d8-f305-44a3-aeee-377eae567187', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '7c1713a3-14cf-4a22-bb42-ffcf68fe153b', 'Manager', 'MANAGER');
2023-01-04 11:39:29.285 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('0a1e5c27-0b09-4f60-a9c3-8618791a8672', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'cdcbb25f-8dc1-49d7-b4f2-07b87d6eb3d2', TIMESTAMP '2023-01-04 11:37:46.621111', NULL, 'Ismoil@gmail.com', FALSE, 'EDTashkent', 'Ismoil', FALSE, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEGD8HE1938tNPO+iNkhOq7U/FsphscU2Gk8PO5451FNs4M61ce/QtGnUB+QJ1PNYLw==', '998977093262', FALSE, '4991ad97-aec2-4f27-ba4c-7ae94c90c1c0', FALSE, 'ismoil', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('11fafeb4-c7c1-463c-bb1e-55203e68dfdf', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '9d7dbaf5-c645-453b-b8e8-554ce75aa0e1', TIMESTAMP '2023-01-04 11:37:46.621121', NULL, 'Umar@gmail.com', FALSE, 'EDMoscow', 'Umar', FALSE, NULL, 'UMAR@GMAIL.COM', 'UMAR', NULL, 'AQAAAAIAAYagAAAAEGD8HE1938tNPO+iNkhOq7U/FsphscU2Gk8PO5451FNs4M61ce/QtGnUB+QJ1PNYLw==', '79963321030', FALSE, 'afdd986a-d49b-4864-8b12-4190904ff751', FALSE, 'umar', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('131d5dd1-6bf1-4f52-be90-00815000fb57', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '3dca62f4-130f-4713-a9ca-01d67b6130f2', TIMESTAMP '2023-01-04 11:37:46.621114', NULL, 'Khikmatillo@gmail.com', FALSE, 'EDTashkent', 'Khikmatillo', FALSE, NULL, 'KHIKMATILLO@GMAIL.COM', 'KHIKMATILLO', NULL, 'AQAAAAIAAYagAAAAEGD8HE1938tNPO+iNkhOq7U/FsphscU2Gk8PO5451FNs4M61ce/QtGnUB+QJ1PNYLw==', '998974468090', FALSE, '02639a6a-469b-413d-95e0-7ab080dd7715', FALSE, 'khikmatillo', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('221c0048-08c9-4e72-8f5c-ddf4039f9488', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'c493aab9-a340-4d99-b06d-802185a4089a', TIMESTAMP '2023-01-04 11:37:46.621114', NULL, 'Abbos@gmail.com', FALSE, 'EDTashkent', 'Abbos', FALSE, NULL, 'ABBOS@GMAIL.COM', 'ABBOS', NULL, 'AQAAAAIAAYagAAAAEGD8HE1938tNPO+iNkhOq7U/FsphscU2Gk8PO5451FNs4M61ce/QtGnUB+QJ1PNYLw==', '998903550022', FALSE, '02c5c172-5a9c-415f-aad6-972ffa9c871f', FALSE, 'abbos', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('30a8f9cc-8d37-4d93-ab2f-774428387e4a', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '036e42e7-d446-4b51-a298-01bf526edeb4', TIMESTAMP '2023-01-04 11:37:46.621105', NULL, 'administrator@gmail.com', FALSE, 'EDSystem', 'Administrator', FALSE, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEGD8HE1938tNPO+iNkhOq7U/FsphscU2Gk8PO5451FNs4M61ce/QtGnUB+QJ1PNYLw==', '998970000675', FALSE, 'eeb9cb44-e82b-478b-a724-d5e650a99d64', FALSE, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('34a0eb9b-6797-40f7-a84c-aa31cdd4cdc6', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'b23051e1-dc59-4a17-9958-3b8be7e3a78a', TIMESTAMP '2023-01-04 11:37:46.621113', NULL, 'Ubaydulla@gmail.com', FALSE, 'EDTashkent', 'Ubaydulla', FALSE, NULL, 'UBAYDULLA@GMAIL.COM', 'UBAYDULLA', NULL, 'AQAAAAIAAYagAAAAEGD8HE1938tNPO+iNkhOq7U/FsphscU2Gk8PO5451FNs4M61ce/QtGnUB+QJ1PNYLw==', '998990500033', FALSE, '6574b84a-b0e0-4d4e-85cc-e0764a231145', FALSE, 'ubaydulla', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('3b9d7f21-1d66-4c98-8648-64a68777bccb', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '2297fdc6-4265-4550-a950-2c8f5db1c7f8', TIMESTAMP '2023-01-04 11:37:46.62111', NULL, 'Javohir@gmail.com', FALSE, 'EDTashkent', 'Javohir', FALSE, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEGD8HE1938tNPO+iNkhOq7U/FsphscU2Gk8PO5451FNs4M61ce/QtGnUB+QJ1PNYLw==', '998931710966', FALSE, 'f884c904-3ae0-4f81-b495-a0dd816938c4', FALSE, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('4ff7819d-8e17-4aa8-a0da-964c2db21591', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '1939444b-1986-4b35-9a9c-3fef8f10bced', TIMESTAMP '2023-01-04 11:37:46.621116', NULL, 'Ulugbek@gmail.com', FALSE, 'EDMoscow', 'Ulugbek', FALSE, NULL, 'ULUGBEK@GMAIL.COM', 'ULUGBEK', NULL, 'AQAAAAIAAYagAAAAEGD8HE1938tNPO+iNkhOq7U/FsphscU2Gk8PO5451FNs4M61ce/QtGnUB+QJ1PNYLw==', '79777403487', FALSE, 'b5d6e066-9131-4ca1-aa1d-52c297b5ec82', FALSE, 'ulugbek', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('5a6f1681-c582-46f5-905b-4eb2c222dcf5', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '3bd17ca4-fea3-4c2d-9011-3d0da3af45d3', TIMESTAMP '2023-01-04 11:37:46.621109', NULL, 'Nodir@gmail.com', FALSE, 'EDTashkent', 'Nodir', FALSE, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEGD8HE1938tNPO+iNkhOq7U/FsphscU2Gk8PO5451FNs4M61ce/QtGnUB+QJ1PNYLw==', '998909046605', FALSE, '4bbc60ea-d185-4c49-9315-c49b3397cfdc', FALSE, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('92b7c777-0d3e-4026-844f-20164bb0f97e', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '23fde966-4634-441f-83bc-b4379aebb519', TIMESTAMP '2023-01-04 11:37:46.621122', NULL, 'Abror@gmail.com', FALSE, 'EDMoscow', 'Abror', FALSE, NULL, 'ABROR@GMAIL.COM', 'ABROR', NULL, 'AQAAAAIAAYagAAAAEGD8HE1938tNPO+iNkhOq7U/FsphscU2Gk8PO5451FNs4M61ce/QtGnUB+QJ1PNYLw==', '79296800899', FALSE, '66f7a2ec-320e-4e96-b98d-0dfade0ea2d6', FALSE, 'abror', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('92db214d-cd73-4fbc-8b34-1dc0709ba0b2', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '9fda7577-7bfc-46ad-a2f7-6724e35f3529', TIMESTAMP '2023-01-04 11:37:46.621117', NULL, 'Abdulaziz@gmail.com', FALSE, 'EDMoscow', 'Abdulaziz', FALSE, NULL, 'ABDULAZIZ@GMAIL.COM', 'ABDULAZIZ', NULL, 'AQAAAAIAAYagAAAAEGD8HE1938tNPO+iNkhOq7U/FsphscU2Gk8PO5451FNs4M61ce/QtGnUB+QJ1PNYLw==', '79691799000', FALSE, '55212a57-06b2-4dab-9f27-ef4d71a0b3e0', FALSE, 'abdulaziz', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('9c57fadd-110a-4b45-aa89-69aa141564c6', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'a0c3cd7e-f99c-48f2-9226-180194ec97f0', TIMESTAMP '2023-01-04 11:37:46.62112', NULL, 'Doniyor@gmail.com', FALSE, 'EDMoscow', 'Doniyor', FALSE, NULL, 'DONIYOR@GMAIL.COM', 'DONIYOR', NULL, 'AQAAAAIAAYagAAAAEGD8HE1938tNPO+iNkhOq7U/FsphscU2Gk8PO5451FNs4M61ce/QtGnUB+QJ1PNYLw==', '79777601654', FALSE, 'c1793637-4580-4cc1-9c53-f75f86708b2e', FALSE, 'doniyor', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('cadaa51d-ddb3-4564-a8c5-79e80c98a032', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'd1023206-7ae8-4cc2-98ab-5f0300072c0a', TIMESTAMP '2023-01-04 11:37:46.621108', NULL, 'hayrulloh@gmail.com', FALSE, 'EDTashkent', 'Hayrulloh', FALSE, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEGD8HE1938tNPO+iNkhOq7U/FsphscU2Gk8PO5451FNs4M61ce/QtGnUB+QJ1PNYLw==', '998935788886', FALSE, '8f719175-3160-43fc-b960-50ae20ad0ba8', FALSE, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('e0c3bef9-fd70-421e-b07b-055c38b6d77c', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '7c317a09-403a-43cd-9ae6-2c6c7d68e3f1', TIMESTAMP '2023-01-04 11:37:46.621115', NULL, 'Shohruh@gmail.com', FALSE, 'EDMoscow', 'Shohruh', FALSE, NULL, 'SHOHRUH@GMAIL.COM', 'SHOHRUH', NULL, 'AQAAAAIAAYagAAAAEGD8HE1938tNPO+iNkhOq7U/FsphscU2Gk8PO5451FNs4M61ce/QtGnUB+QJ1PNYLw==', '79060470085', FALSE, '200ae59e-707a-4532-8f04-3dd9d49536b0', FALSE, 'shohruh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('e13b576b-afbe-4b4c-aaad-64fd9bee3852', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'cde8042b-e0f7-4e4a-9dea-6b89e181f80b', TIMESTAMP '2023-01-04 11:37:46.621112', NULL, 'Sadulla@gmail.com', FALSE, 'EDTashkent', 'Sadulla', FALSE, NULL, 'SADULLA@GMAIL.COM', 'SADULLA', NULL, 'AQAAAAIAAYagAAAAEGD8HE1938tNPO+iNkhOq7U/FsphscU2Gk8PO5451FNs4M61ce/QtGnUB+QJ1PNYLw==', '998994885995', FALSE, '2a2641b1-5b32-450b-83df-6ff64687af29', FALSE, 'sadulla', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('eb6a85b0-a7fb-4f8e-9bea-03825e6f020f', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '8d99226a-0d0b-4623-86f0-e741525414d9', TIMESTAMP '2023-01-04 11:37:46.62112', NULL, 'Shaxzod@gmail.com', FALSE, 'EDMoscow', 'Shaxzod', FALSE, NULL, 'SHAXZOD@GMAIL.COM', 'SHAXZOD', NULL, 'AQAAAAIAAYagAAAAEGD8HE1938tNPO+iNkhOq7U/FsphscU2Gk8PO5451FNs4M61ce/QtGnUB+QJ1PNYLw==', '79163870009', FALSE, '5b3e2f53-dc84-4364-98d7-2bfd56748b05', FALSE, 'shaxzod', 'UserName');
2023-01-04 11:39:29.286 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, TIMESTAMP '2023-01-04 11:37:46.560249', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, TIMESTAMP '2023-01-04 11:37:46.560249', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, TIMESTAMP '2023-01-04 11:37:46.560249', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, TIMESTAMP '2023-01-04 11:37:46.560249', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, TIMESTAMP '2023-01-04 11:37:46.56025', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, TIMESTAMP '2023-01-04 11:37:46.56025', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-01-04 11:39:29.287 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, TIMESTAMP '2023-01-04 11:37:46.621137', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, TIMESTAMP '2023-01-04 11:37:46.621138', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, TIMESTAMP '2023-01-04 11:37:46.621138', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, TIMESTAMP '2023-01-04 11:37:46.621138', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, TIMESTAMP '2023-01-04 11:37:46.621138', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, TIMESTAMP '2023-01-04 11:37:46.621138', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, TIMESTAMP '2023-01-04 11:37:46.621138', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, TIMESTAMP '2023-01-04 11:37:46.621138', NULL, NULL, 'Сомони', 972);
2023-01-04 11:39:29.288 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-01-04 11:37:46.560259', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-01-04 11:37:46.560259', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-01-04 11:37:46.560259', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-01-04 11:37:46.560259', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-01-04 11:37:46.560259', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-01-04 11:37:46.560259', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, TIMESTAMP '2023-01-04 11:37:46.560259', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, TIMESTAMP '2023-01-04 11:37:46.560259', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, TIMESTAMP '2023-01-04 11:37:46.56026', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, TIMESTAMP '2023-01-04 11:37:46.56026', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, TIMESTAMP '2023-01-04 11:37:46.56026', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, TIMESTAMP '2023-01-04 11:37:46.56026', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, TIMESTAMP '2023-01-04 11:37:46.56026', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-01-04 11:39:29.290 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, 7.0, NULL, TIMESTAMP '2023-01-04 11:37:46.621134', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, 12.0, NULL, TIMESTAMP '2023-01-04 11:37:46.621134', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, 30.0, NULL, TIMESTAMP '2023-01-04 11:37:46.621134', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, 5.0, NULL, TIMESTAMP '2023-01-04 11:37:46.621134', NULL, 'Description', NULL, 'Авто');
2023-01-04 11:39:29.291 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-01-04 11:37:46.560233', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-01-04 11:37:46.560234', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-01-04 11:37:46.560234', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-01-04 11:37:46.560234', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-01-04 11:37:46.560234', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-01-04 11:37:46.560234', NULL, 'Выдан', NULL, 'Выдан');
2023-01-04 11:39:29.293 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0', 1, NULL, 1, TIMESTAMP '2023-01-04 11:37:46.560252', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0', 1, NULL, 2, TIMESTAMP '2023-01-04 11:37:46.560252', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0', 2, NULL, 1, TIMESTAMP '2023-01-04 11:37:46.560252', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0', 2, NULL, 2, TIMESTAMP '2023-01-04 11:37:46.560252', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0', 3, NULL, 1, TIMESTAMP '2023-01-04 11:37:46.560252', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0', 3, NULL, 2, TIMESTAMP '2023-01-04 11:37:46.560252', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0', 4, NULL, 1, TIMESTAMP '2023-01-04 11:37:46.560252', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0', 4, NULL, 2, TIMESTAMP '2023-01-04 11:37:46.560253', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0', 5, NULL, 1, TIMESTAMP '2023-01-04 11:37:46.560253', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0', 5, NULL, 2, TIMESTAMP '2023-01-04 11:37:46.560253', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0', 6, NULL, 1, TIMESTAMP '2023-01-04 11:37:46.560253', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0', 6, NULL, 5, TIMESTAMP '2023-01-04 11:37:46.560253', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-01-04 11:39:29.294 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "Discriminator", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 'UserClaim', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "Discriminator", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 'UserClaim', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
2023-01-04 11:39:29.296 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '0a1e5c27-0b09-4f60-a9c3-8618791a8672');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '11fafeb4-c7c1-463c-bb1e-55203e68dfdf');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '131d5dd1-6bf1-4f52-be90-00815000fb57');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '221c0048-08c9-4e72-8f5c-ddf4039f9488');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('2c5e174e-3b0e-446f-86af-483d56fd7210', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '34a0eb9b-6797-40f7-a84c-aa31cdd4cdc6');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '3b9d7f21-1d66-4c98-8648-64a68777bccb');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '4ff7819d-8e17-4aa8-a0da-964c2db21591');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '5a6f1681-c582-46f5-905b-4eb2c222dcf5');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '92b7c777-0d3e-4026-844f-20164bb0f97e');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '92db214d-cd73-4fbc-8b34-1dc0709ba0b2');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '9c57fadd-110a-4b45-aa89-69aa141564c6');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'e0c3bef9-fd70-421e-b07b-055c38b6d77c');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'eb6a85b0-a7fb-4f8e-9bea-03825e6f020f');
2023-01-04 11:39:29.297 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (1, 0.0, NULL, 1, TIMESTAMP '2023-01-04 11:37:46.560255', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (2, 0.0, NULL, 1, TIMESTAMP '2023-01-04 11:37:46.560255', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (3, 0.0, NULL, 1, TIMESTAMP '2023-01-04 11:37:46.560256', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '5a6f1681-c582-46f5-905b-4eb2c222dcf5');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (4, 0.0, NULL, 1, TIMESTAMP '2023-01-04 11:37:46.560256', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '3b9d7f21-1d66-4c98-8648-64a68777bccb');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (5, 0.0, NULL, 1, TIMESTAMP '2023-01-04 11:37:46.560256', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '0a1e5c27-0b09-4f60-a9c3-8618791a8672');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (6, 0.0, NULL, 1, TIMESTAMP '2023-01-04 11:37:46.560256', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852');
2023-01-04 11:39:29.300 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-01-04 11:39:29.302 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-01-04 11:39:29.305 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-01-04 11:39:29.307 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-01-04 11:39:29.310 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-01-04 11:39:29.312 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-01-04 11:39:29.314 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-01-04 11:39:29.316 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId" ON "AccountHistory" ("PayerId");
2023-01-04 11:39:29.319 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-01-04 11:39:29.321 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-01-04 11:39:29.324 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-01-04 11:39:29.326 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-01-04 11:39:29.329 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-01-04 11:39:29.331 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-01-04 11:39:29.334 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-01-04 11:39:29.336 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-01-04 11:39:29.339 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-01-04 11:39:29.342 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-01-04 11:39:29.344 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-01-04 11:39:29.347 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-01-04 11:39:29.349 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-01-04 11:39:29.351 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-01-04 11:39:29.354 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-01-04 11:39:29.356 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-01-04 11:39:29.358 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-01-04 11:39:29.360 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-01-04 11:39:29.363 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-01-04 11:39:29.365 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-01-04 11:39:29.367 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-01-04 11:39:29.369 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-01-04 11:39:29.372 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-01-04 11:39:29.374 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-01-04 11:39:29.376 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-01-04 11:39:29.378 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-01-04 11:39:29.381 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-01-04 11:39:29.383 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-01-04 11:39:29.385 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-01-04 11:39:29.387 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-01-04 11:39:29.390 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId" ON "ParcelOwners" ("RecepientCourierId");
2023-01-04 11:39:29.392 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId" ON "ParcelOwners" ("RecepientId");
2023-01-04 11:39:29.394 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId" ON "ParcelOwners" ("RecepientStaffId");
2023-01-04 11:39:29.397 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId" ON "ParcelOwners" ("SenderCourierId");
2023-01-04 11:39:29.399 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId" ON "ParcelOwners" ("SenderId");
2023-01-04 11:39:29.401 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId" ON "ParcelOwners" ("SenderStaffId");
2023-01-04 11:39:29.403 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-01-04 11:39:29.406 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-01-04 11:39:29.408 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-01-04 11:39:29.410 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-01-04 11:39:29.412 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-01-04 11:39:29.415 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-01-04 11:39:29.417 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-01-04 11:39:29.419 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-01-04 11:39:29.422 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-01-04 11:39:29.424 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-01-04 11:39:29.426 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-01-04 11:39:29.429 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-01-04 11:39:29.431 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-01-04 11:39:29.434 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-01-04 11:39:29.436 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId" ON "UserAccount" ("UserId");
2023-01-04 11:39:29.438 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-01-04 11:39:29.440 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-01-04 11:39:29.443 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-01-04 11:39:29.445 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-01-04 11:39:29.447 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId" ON "UserAccountHistory" ("UserId");
2023-01-04 11:39:29.455 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT setval(
    pg_get_serial_sequence('"Branch"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Branch") + 1,
        nextval(pg_get_serial_sequence('"Branch"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Currency"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Currency") + 1,
        nextval(pg_get_serial_sequence('"Currency"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ExpenseType"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ExpenseType") + 1,
        nextval(pg_get_serial_sequence('"ExpenseType"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Plan"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Plan") + 1,
        nextval(pg_get_serial_sequence('"Plan"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Status"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Status") + 1,
        nextval(pg_get_serial_sequence('"Status"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Account"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Account") + 1,
        nextval(pg_get_serial_sequence('"Account"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUserClaims"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUserClaims") + 1,
        nextval(pg_get_serial_sequence('"AspNetUserClaims"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"UserAccount"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "UserAccount") + 1,
        nextval(pg_get_serial_sequence('"UserAccount"', 'Id'))),
    false);
2023-01-04 11:39:29.456 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20230104063746_Initialize', '7.0.1');
2023-01-04 12:51:48.813 +05:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 12:51:48.875 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-01-04 12:52:39.795 +05:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 12:52:39.888 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 12:52:39.939 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-01-04 12:52:39.952 +05:00 [INF] Applying migration '20230104075223_Initialize1'.
2023-01-04 12:52:40.192 +05:00 [INF] Executed DbCommand (23ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "UserAccountHistory" ALTER COLUMN "UserId" TYPE text;
2023-01-04 12:52:40.193 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "UserAccount" ALTER COLUMN "UserId" TYPE text;
2023-01-04 12:52:40.194 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "UserAccount" ALTER COLUMN "Number" TYPE varchar;
2023-01-04 12:52:40.194 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "UserAccount" ALTER COLUMN "Name" TYPE varchar;
2023-01-04 12:52:40.213 +05:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "UserAccount" ALTER COLUMN "Balance" TYPE numeric(18,3);
2023-01-04 12:52:40.213 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Status" ALTER COLUMN "Name" TYPE text;
2023-01-04 12:52:40.214 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Status" ALTER COLUMN "Description" TYPE text;
2023-01-04 12:52:40.214 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Plan" ALTER COLUMN "Name" TYPE varchar;
2023-01-04 12:52:40.226 +05:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Plan" ALTER COLUMN "Description" TYPE varchar;
UPDATE "Plan" SET "Description" = '' WHERE "Description" IS NULL;
ALTER TABLE "Plan" ALTER COLUMN "Description" SET NOT NULL;
ALTER TABLE "Plan" ALTER COLUMN "Description" SET DEFAULT '';
2023-01-04 12:52:40.228 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ParcelOwners" ALTER COLUMN "SenderStaffId" TYPE text;
2023-01-04 12:52:40.229 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ParcelOwners" ALTER COLUMN "SenderId" TYPE text;
2023-01-04 12:52:40.230 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ParcelOwners" ALTER COLUMN "SenderCourierId" TYPE text;
2023-01-04 12:52:40.231 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ParcelOwners" ALTER COLUMN "RecepientStaffId" TYPE text;
2023-01-04 12:52:40.232 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ParcelOwners" ALTER COLUMN "RecepientId" TYPE text;
2023-01-04 12:52:40.233 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ParcelOwners" ALTER COLUMN "RecepientCourierId" TYPE text;
2023-01-04 12:52:40.233 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ParcelJob" ALTER COLUMN "JobType" TYPE varchar;
2023-01-04 12:52:40.233 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ParcelJob" ALTER COLUMN "CourierId" TYPE text;
2023-01-04 12:52:40.245 +05:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ParcelJob" ALTER COLUMN "Cost" TYPE numeric(18,3);
2023-01-04 12:52:40.245 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ExpenseType" ALTER COLUMN "Name" TYPE text;
2023-01-04 12:52:40.245 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ExpenseType" ALTER COLUMN "Description" TYPE text;
2023-01-04 12:52:40.246 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Branch" ALTER COLUMN "Name" TYPE varchar;
2023-01-04 12:52:40.246 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Branch" ALTER COLUMN "Email" TYPE varchar;
ALTER TABLE "Branch" ALTER COLUMN "Email" DROP NOT NULL;
2023-01-04 12:52:40.246 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Branch" ALTER COLUMN "Country" TYPE varchar;
2023-01-04 12:52:40.246 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Branch" ALTER COLUMN "Code" TYPE text;
2023-01-04 12:52:40.247 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Branch" ALTER COLUMN "City" TYPE varchar;
2023-01-04 12:52:40.247 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Branch" ALTER COLUMN "Address" TYPE varchar;
2023-01-04 12:52:40.252 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "AccountHistory" ALTER COLUMN "PayerId" TYPE text;
2023-01-04 12:52:40.253 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Account" ALTER COLUMN "Number" TYPE varchar;
2023-01-04 12:52:40.255 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Account" ALTER COLUMN "Name" TYPE varchar;
2023-01-04 12:52:40.262 +05:00 [ERR] Failed executing DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Account" ALTER COLUMN "Balance" TYPE numeric(18,3);
2023-01-04 12:55:59.793 +05:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 12:55:59.877 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 12:55:59.924 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-01-04 12:55:59.936 +05:00 [INF] Applying migration '20230104075223_Initialize1'.
2023-01-04 12:56:00.192 +05:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "UserAccountHistory" ALTER COLUMN "UserId" TYPE text;
2023-01-04 12:56:00.193 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "UserAccount" ALTER COLUMN "UserId" TYPE text;
2023-01-04 12:56:00.193 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "UserAccount" ALTER COLUMN "Number" TYPE varchar;
2023-01-04 12:56:00.194 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "UserAccount" ALTER COLUMN "Name" TYPE varchar;
2023-01-04 12:56:00.208 +05:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "UserAccount" ALTER COLUMN "Balance" TYPE numeric(18,3);
2023-01-04 12:56:00.209 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Status" ALTER COLUMN "Name" TYPE text;
2023-01-04 12:56:00.209 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Status" ALTER COLUMN "Description" TYPE text;
2023-01-04 12:56:00.209 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Plan" ALTER COLUMN "Name" TYPE varchar;
2023-01-04 12:56:00.215 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Plan" ALTER COLUMN "Description" TYPE varchar;
UPDATE "Plan" SET "Description" = '' WHERE "Description" IS NULL;
ALTER TABLE "Plan" ALTER COLUMN "Description" SET NOT NULL;
ALTER TABLE "Plan" ALTER COLUMN "Description" SET DEFAULT '';
2023-01-04 12:56:00.218 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ParcelOwners" ALTER COLUMN "SenderStaffId" TYPE text;
2023-01-04 12:56:00.219 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ParcelOwners" ALTER COLUMN "SenderId" TYPE text;
2023-01-04 12:56:00.220 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ParcelOwners" ALTER COLUMN "SenderCourierId" TYPE text;
2023-01-04 12:56:00.221 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ParcelOwners" ALTER COLUMN "RecepientStaffId" TYPE text;
2023-01-04 12:56:00.222 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ParcelOwners" ALTER COLUMN "RecepientId" TYPE text;
2023-01-04 12:56:00.223 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ParcelOwners" ALTER COLUMN "RecepientCourierId" TYPE text;
2023-01-04 12:56:00.223 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ParcelJob" ALTER COLUMN "JobType" TYPE varchar;
2023-01-04 12:56:00.224 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ParcelJob" ALTER COLUMN "CourierId" TYPE text;
2023-01-04 12:56:00.234 +05:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ParcelJob" ALTER COLUMN "Cost" TYPE numeric(18,3);
2023-01-04 12:56:00.235 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ExpenseType" ALTER COLUMN "Name" TYPE text;
2023-01-04 12:56:00.235 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "ExpenseType" ALTER COLUMN "Description" TYPE text;
2023-01-04 12:56:00.235 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Branch" ALTER COLUMN "Name" TYPE varchar;
2023-01-04 12:56:00.236 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Branch" ALTER COLUMN "Email" TYPE varchar;
ALTER TABLE "Branch" ALTER COLUMN "Email" DROP NOT NULL;
2023-01-04 12:56:00.236 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Branch" ALTER COLUMN "Country" TYPE varchar;
2023-01-04 12:56:00.236 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Branch" ALTER COLUMN "Code" TYPE text;
2023-01-04 12:56:00.236 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Branch" ALTER COLUMN "City" TYPE varchar;
2023-01-04 12:56:00.237 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Branch" ALTER COLUMN "Address" TYPE varchar;
2023-01-04 12:56:00.238 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "AccountHistory" ALTER COLUMN "PayerId" TYPE text;
2023-01-04 12:56:00.238 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Account" ALTER COLUMN "Number" TYPE varchar;
2023-01-04 12:56:00.238 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Account" ALTER COLUMN "Name" TYPE varchar;
2023-01-04 12:56:00.245 +05:00 [ERR] Failed executing DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
ALTER TABLE "Account" ALTER COLUMN "Balance" TYPE numeric(18,3);
2023-01-04 12:56:34.254 +05:00 [INF] Executed DbCommand (24ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 12:56:34.349 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 12:56:34.401 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-01-04 12:56:34.415 +05:00 [INF] Applying migration '20230104075626_Initialize13'.
2023-01-04 12:56:34.791 +05:00 [ERR] Failed executing DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-01-04 13:10:38.548 +05:00 [INF] Executed DbCommand (581ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE edsystemsdatabase;
2023-01-04 13:10:38.766 +05:00 [INF] Executed DbCommand (20ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2023-01-04 13:10:38.842 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-01-04 13:10:38.879 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-01-04 13:10:38.889 +05:00 [INF] Applying migration '20230104080450_Initialize'.
2023-01-04 13:10:39.169 +05:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-01-04 13:10:39.177 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" text NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-01-04 13:10:39.183 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Currency" PRIMARY KEY ("Id")
);
2023-01-04 13:10:39.186 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT "PK_Expenses" PRIMARY KEY ("Id")
);
2023-01-04 13:10:39.196 +05:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ExpenseType" PRIMARY KEY ("Id")
);
2023-01-04 13:10:39.202 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Parcel" PRIMARY KEY ("Id")
);
2023-01-04 13:10:39.207 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Cost" numeric(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Plan" PRIMARY KEY ("Id")
);
2023-01-04 13:10:39.214 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NULL,
    "Token" text NULL,
    "JwtId" text NULL,
    "IsUsed" boolean NOT NULL,
    "IsRevoked" boolean NOT NULL,
    "AddedDateTime" timestamp without time zone NOT NULL,
    "ExpiryDateTime" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_RefreshToken" PRIMARY KEY ("Id")
);
2023-01-04 13:10:39.222 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Status" PRIMARY KEY ("Id")
);
2023-01-04 13:10:39.228 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TokenId" text NULL,
    "RefreshToken" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Tokens" PRIMARY KEY ("Id")
);
2023-01-04 13:10:39.240 +05:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-01-04 13:10:39.248 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric(18,3) NOT NULL,
    "BranchId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Account" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-01-04 13:10:39.256 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ToBranchId" integer NOT NULL,
    "FromBranchId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelBranch" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:10:39.263 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StateDeliveryToBranch" boolean NOT NULL,
    "StatePickingUp" boolean NOT NULL,
    "StateDeliveryToPoint" boolean NOT NULL,
    "StateBuyout" boolean NOT NULL,
    "CostPickingUp" numeric(18,3) NOT NULL,
    "CostDeliveryToPoint" numeric(18,3) NOT NULL,
    "CostDeliveryToBranch" numeric(18,3) NOT NULL,
    "CostBuyout" numeric NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelCost" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:10:39.269 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Description" varchar NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelDescription" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:10:39.281 +05:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelImage" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:10:39.287 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" text NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelItem" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:10:39.293 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Cost" numeric(18,3) NOT NULL,
    "CourierId" text NULL,
    "JobType" varchar NULL,
    "ParcelId" integer NOT NULL,
    "PaymentState" boolean NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelJob" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:10:39.299 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Weight" numeric(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSize" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:10:39.305 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSound" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:10:39.311 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PlanId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelPlan" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-01-04 13:10:39.317 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StatusId" integer NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelStatus" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-01-04 13:10:39.323 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" text NOT NULL,
    "FirstName" text NULL,
    "LastName" text NULL,
    "Address" text NULL,
    "UserNameT" text NULL,
    "ChatId" bigint NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "ParcelJobId" integer NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-01-04 13:10:39.329 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "PayerId" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_AccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId" FOREIGN KEY ("PayerId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:10:39.338 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    "Discriminator" text NOT NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 13:10:39.343 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 13:10:39.352 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 13:10:39.358 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" text NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 13:10:39.366 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SenderId" text NULL,
    "RecepientId" text NULL,
    "RecepientStaffId" text NULL,
    "SenderStaffId" text NULL,
    "RecepientCourierId" text NULL,
    "SenderCourierId" text NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelOwners" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId" FOREIGN KEY ("RecepientCourierId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId" FOREIGN KEY ("RecepientId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId" FOREIGN KEY ("RecepientStaffId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId" FOREIGN KEY ("SenderCourierId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId" FOREIGN KEY ("SenderId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId" FOREIGN KEY ("SenderStaffId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:10:39.373 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric NOT NULL,
    "UserId" text NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccount" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-01-04 13:10:39.380 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "UserId" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-01-04 13:10:39.383 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('2c5e174e-3b0e-446f-86af-483d56fd7210', 'b78116c3-11d9-484c-b902-896a53fa6fe5', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('336b1b38-f4c9-4844-8dcb-b59a0d7f0533', '900de5e5-2fc9-4408-ba34-5df4fa2bd94b', 'Customer', 'CUSTOMER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '76b8e705-d258-4dcd-868e-76e72227401d', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('5919c97a-b888-4858-bbbe-0123a1952624', 'a3477b20-80ad-4983-b32a-1fea3a04c8a8', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '00f37758-d12e-4706-928b-8f88a501745b', 'Manager', 'MANAGER');
2023-01-04 13:10:39.390 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('0a1e5c27-0b09-4f60-a9c3-8618791a8672', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '4dc3ba8f-b10a-405f-8849-6e60f4a84f45', TIMESTAMP '2023-01-04 13:04:50.371804', NULL, 'Ismoil@gmail.com', FALSE, 'EDTashkent', 'Ismoil', FALSE, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEDuYFUUOTZ01KYaRl/wNdeERuWD1OsU3wDmdUrmpZHcmAA+Pzp/y3N8yW6zU4RmADA==', '998977093262', FALSE, 'de9bbbe1-4263-47cc-9dfd-4d4ca1cd80ad', FALSE, 'ismoil', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('11fafeb4-c7c1-463c-bb1e-55203e68dfdf', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '90624d9b-aa72-48eb-ae91-187ce68146d2', TIMESTAMP '2023-01-04 13:04:50.371819', NULL, 'Umar@gmail.com', FALSE, 'EDMoscow', 'Umar', FALSE, NULL, 'UMAR@GMAIL.COM', 'UMAR', NULL, 'AQAAAAIAAYagAAAAEDuYFUUOTZ01KYaRl/wNdeERuWD1OsU3wDmdUrmpZHcmAA+Pzp/y3N8yW6zU4RmADA==', '79963321030', FALSE, '29a59dbf-02ff-4e55-939f-fea710e93cd9', FALSE, 'umar', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('131d5dd1-6bf1-4f52-be90-00815000fb57', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '679ab848-65ad-43c9-a1d6-9d6bdefd88db', TIMESTAMP '2023-01-04 13:04:50.371807', NULL, 'Khikmatillo@gmail.com', FALSE, 'EDTashkent', 'Khikmatillo', FALSE, NULL, 'KHIKMATILLO@GMAIL.COM', 'KHIKMATILLO', NULL, 'AQAAAAIAAYagAAAAEDuYFUUOTZ01KYaRl/wNdeERuWD1OsU3wDmdUrmpZHcmAA+Pzp/y3N8yW6zU4RmADA==', '998974468090', FALSE, '2ca5e2b1-98a3-4115-8969-703c0534afb3', FALSE, 'khikmatillo', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('221c0048-08c9-4e72-8f5c-ddf4039f9488', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '070c4151-d94e-4f08-805a-24a7a9790fb4', TIMESTAMP '2023-01-04 13:04:50.371807', NULL, 'Abbos@gmail.com', FALSE, 'EDTashkent', 'Abbos', FALSE, NULL, 'ABBOS@GMAIL.COM', 'ABBOS', NULL, 'AQAAAAIAAYagAAAAEDuYFUUOTZ01KYaRl/wNdeERuWD1OsU3wDmdUrmpZHcmAA+Pzp/y3N8yW6zU4RmADA==', '998903550022', FALSE, '25bc8988-3e39-4037-a765-fcaf30ec9324', FALSE, 'abbos', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('30a8f9cc-8d37-4d93-ab2f-774428387e4a', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '10f0a47d-d947-4ba1-b5ba-a0cba39bfe51', TIMESTAMP '2023-01-04 13:04:50.3718', NULL, 'administrator@gmail.com', FALSE, 'EDSystem', 'Administrator', FALSE, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEDuYFUUOTZ01KYaRl/wNdeERuWD1OsU3wDmdUrmpZHcmAA+Pzp/y3N8yW6zU4RmADA==', '998970000675', FALSE, '82c6526a-149e-4860-8dc1-a6c07457eb7b', FALSE, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('34a0eb9b-6797-40f7-a84c-aa31cdd4cdc6', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '91855aa5-b3f9-4dee-9d30-771f29a65a46', TIMESTAMP '2023-01-04 13:04:50.371806', NULL, 'Ubaydulla@gmail.com', FALSE, 'EDTashkent', 'Ubaydulla', FALSE, NULL, 'UBAYDULLA@GMAIL.COM', 'UBAYDULLA', NULL, 'AQAAAAIAAYagAAAAEDuYFUUOTZ01KYaRl/wNdeERuWD1OsU3wDmdUrmpZHcmAA+Pzp/y3N8yW6zU4RmADA==', '998990500033', FALSE, '6b556a10-0876-4174-b036-5eb0e8ec3c5f', FALSE, 'ubaydulla', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('3b9d7f21-1d66-4c98-8648-64a68777bccb', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '25bcd5cb-7701-4db8-a14d-825a6caf2884', TIMESTAMP '2023-01-04 13:04:50.371804', NULL, 'Javohir@gmail.com', FALSE, 'EDTashkent', 'Javohir', FALSE, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEDuYFUUOTZ01KYaRl/wNdeERuWD1OsU3wDmdUrmpZHcmAA+Pzp/y3N8yW6zU4RmADA==', '998931710966', FALSE, '33d48f21-ebd5-4a27-9a3a-b4c58afa7740', FALSE, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('4ff7819d-8e17-4aa8-a0da-964c2db21591', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'ff58b480-a157-4a17-8f16-345457e4def5', TIMESTAMP '2023-01-04 13:04:50.371809', NULL, 'Ulugbek@gmail.com', FALSE, 'EDMoscow', 'Ulugbek', FALSE, NULL, 'ULUGBEK@GMAIL.COM', 'ULUGBEK', NULL, 'AQAAAAIAAYagAAAAEDuYFUUOTZ01KYaRl/wNdeERuWD1OsU3wDmdUrmpZHcmAA+Pzp/y3N8yW6zU4RmADA==', '79777403487', FALSE, 'ca31b94e-ca41-47fa-be8e-05755f8eee75', FALSE, 'ulugbek', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('5a6f1681-c582-46f5-905b-4eb2c222dcf5', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '6ba9f07a-bde3-43b6-9e40-d0d04bd94eff', TIMESTAMP '2023-01-04 13:04:50.371803', NULL, 'Nodir@gmail.com', FALSE, 'EDTashkent', 'Nodir', FALSE, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEDuYFUUOTZ01KYaRl/wNdeERuWD1OsU3wDmdUrmpZHcmAA+Pzp/y3N8yW6zU4RmADA==', '998909046605', FALSE, '11b2a014-744a-43a1-8ed7-b221823b4697', FALSE, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('92b7c777-0d3e-4026-844f-20164bb0f97e', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '3dd44643-50b8-4748-870b-beb00462a781', TIMESTAMP '2023-01-04 13:04:50.37182', NULL, 'Abror@gmail.com', FALSE, 'EDMoscow', 'Abror', FALSE, NULL, 'ABROR@GMAIL.COM', 'ABROR', NULL, 'AQAAAAIAAYagAAAAEDuYFUUOTZ01KYaRl/wNdeERuWD1OsU3wDmdUrmpZHcmAA+Pzp/y3N8yW6zU4RmADA==', '79296800899', FALSE, '0a239918-aa15-4b65-a3fc-bdf6d907f471', FALSE, 'abror', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('92db214d-cd73-4fbc-8b34-1dc0709ba0b2', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'af435553-e30f-46a9-bb2b-3d0a946d5a94', TIMESTAMP '2023-01-04 13:04:50.37181', NULL, 'Abdulaziz@gmail.com', FALSE, 'EDMoscow', 'Abdulaziz', FALSE, NULL, 'ABDULAZIZ@GMAIL.COM', 'ABDULAZIZ', NULL, 'AQAAAAIAAYagAAAAEDuYFUUOTZ01KYaRl/wNdeERuWD1OsU3wDmdUrmpZHcmAA+Pzp/y3N8yW6zU4RmADA==', '79691799000', FALSE, '2381ef44-10c9-479f-9b86-c048d4dd1c41', FALSE, 'abdulaziz', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('9c57fadd-110a-4b45-aa89-69aa141564c6', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'cf8dcab0-9be2-4131-a4e0-281d710da1bc', TIMESTAMP '2023-01-04 13:04:50.37181', NULL, 'Doniyor@gmail.com', FALSE, 'EDMoscow', 'Doniyor', FALSE, NULL, 'DONIYOR@GMAIL.COM', 'DONIYOR', NULL, 'AQAAAAIAAYagAAAAEDuYFUUOTZ01KYaRl/wNdeERuWD1OsU3wDmdUrmpZHcmAA+Pzp/y3N8yW6zU4RmADA==', '79777601654', FALSE, '38b2474a-9891-4778-9990-cf9c779d6ddf', FALSE, 'doniyor', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('cadaa51d-ddb3-4564-a8c5-79e80c98a032', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '8847ac0c-c6df-431f-9488-991f7049b978', TIMESTAMP '2023-01-04 13:04:50.371802', NULL, 'hayrulloh@gmail.com', FALSE, 'EDTashkent', 'Hayrulloh', FALSE, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEDuYFUUOTZ01KYaRl/wNdeERuWD1OsU3wDmdUrmpZHcmAA+Pzp/y3N8yW6zU4RmADA==', '998935788886', FALSE, '1a872252-a5bd-44bb-87fc-a84a71effba3', FALSE, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('e0c3bef9-fd70-421e-b07b-055c38b6d77c', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'a88abf9c-2538-4df0-ad2a-7d0398e8de3d', TIMESTAMP '2023-01-04 13:04:50.371808', NULL, 'Shohruh@gmail.com', FALSE, 'EDMoscow', 'Shohruh', FALSE, NULL, 'SHOHRUH@GMAIL.COM', 'SHOHRUH', NULL, 'AQAAAAIAAYagAAAAEDuYFUUOTZ01KYaRl/wNdeERuWD1OsU3wDmdUrmpZHcmAA+Pzp/y3N8yW6zU4RmADA==', '79060470085', FALSE, 'cb3afab8-4ee5-42ab-8354-64d27033c25c', FALSE, 'shohruh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('e13b576b-afbe-4b4c-aaad-64fd9bee3852', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '0235589c-cd85-48a5-8bcc-54520a5061cf', TIMESTAMP '2023-01-04 13:04:50.371805', NULL, 'Sadulla@gmail.com', FALSE, 'EDTashkent', 'Sadulla', FALSE, NULL, 'SADULLA@GMAIL.COM', 'SADULLA', NULL, 'AQAAAAIAAYagAAAAEDuYFUUOTZ01KYaRl/wNdeERuWD1OsU3wDmdUrmpZHcmAA+Pzp/y3N8yW6zU4RmADA==', '998994885995', FALSE, '72a970f1-235c-4d86-9752-99fd1a424789', FALSE, 'sadulla', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('eb6a85b0-a7fb-4f8e-9bea-03825e6f020f', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '3abe7d58-5dd3-4ab9-89b6-31ac025c1aa5', TIMESTAMP '2023-01-04 13:04:50.371818', NULL, 'Shaxzod@gmail.com', FALSE, 'EDMoscow', 'Shaxzod', FALSE, NULL, 'SHAXZOD@GMAIL.COM', 'SHAXZOD', NULL, 'AQAAAAIAAYagAAAAEDuYFUUOTZ01KYaRl/wNdeERuWD1OsU3wDmdUrmpZHcmAA+Pzp/y3N8yW6zU4RmADA==', '79163870009', FALSE, 'ebb30ea4-81ac-4f92-a7f3-51acaf63468d', FALSE, 'shaxzod', 'UserName');
2023-01-04 13:10:39.391 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, TIMESTAMP '2023-01-04 13:04:50.311866', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, TIMESTAMP '2023-01-04 13:04:50.311866', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, TIMESTAMP '2023-01-04 13:04:50.311866', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, TIMESTAMP '2023-01-04 13:04:50.311866', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, TIMESTAMP '2023-01-04 13:04:50.311867', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, TIMESTAMP '2023-01-04 13:04:50.311867', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-01-04 13:10:39.392 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, TIMESTAMP '2023-01-04 13:04:50.371837', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, TIMESTAMP '2023-01-04 13:04:50.371837', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, TIMESTAMP '2023-01-04 13:04:50.371838', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, TIMESTAMP '2023-01-04 13:04:50.371838', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, TIMESTAMP '2023-01-04 13:04:50.371838', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, TIMESTAMP '2023-01-04 13:04:50.371838', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, TIMESTAMP '2023-01-04 13:04:50.371838', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, TIMESTAMP '2023-01-04 13:04:50.371838', NULL, NULL, 'Сомони', 972);
2023-01-04 13:10:39.393 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-01-04 13:04:50.311877', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-01-04 13:04:50.311877', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-01-04 13:04:50.311877', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-01-04 13:04:50.311878', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-01-04 13:04:50.311878', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-01-04 13:04:50.311878', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, TIMESTAMP '2023-01-04 13:04:50.311878', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, TIMESTAMP '2023-01-04 13:04:50.311878', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, TIMESTAMP '2023-01-04 13:04:50.311878', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, TIMESTAMP '2023-01-04 13:04:50.311878', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, TIMESTAMP '2023-01-04 13:04:50.311878', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, TIMESTAMP '2023-01-04 13:04:50.311878', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, TIMESTAMP '2023-01-04 13:04:50.311878', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-01-04 13:10:39.394 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, 7.0, NULL, TIMESTAMP '2023-01-04 13:04:50.371833', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, 12.0, NULL, TIMESTAMP '2023-01-04 13:04:50.371834', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, 30.0, NULL, TIMESTAMP '2023-01-04 13:04:50.371834', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, 5.0, NULL, TIMESTAMP '2023-01-04 13:04:50.371834', NULL, 'Description', NULL, 'Авто');
2023-01-04 13:10:39.395 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-01-04 13:04:50.311849', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-01-04 13:04:50.31185', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-01-04 13:04:50.31185', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-01-04 13:04:50.311851', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-01-04 13:04:50.311851', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-01-04 13:04:50.311851', NULL, 'Выдан', NULL, 'Выдан');
2023-01-04 13:10:39.397 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 0.0, 1, NULL, 1, TIMESTAMP '2023-01-04 13:04:50.311868', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 0.0, 1, NULL, 2, TIMESTAMP '2023-01-04 13:04:50.311869', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 0.0, 2, NULL, 1, TIMESTAMP '2023-01-04 13:04:50.311869', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 0.0, 2, NULL, 2, TIMESTAMP '2023-01-04 13:04:50.311869', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 0.0, 3, NULL, 1, TIMESTAMP '2023-01-04 13:04:50.311869', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 0.0, 3, NULL, 2, TIMESTAMP '2023-01-04 13:04:50.311869', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 0.0, 4, NULL, 1, TIMESTAMP '2023-01-04 13:04:50.311869', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 0.0, 4, NULL, 2, TIMESTAMP '2023-01-04 13:04:50.311869', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, 0.0, 5, NULL, 1, TIMESTAMP '2023-01-04 13:04:50.31187', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, 0.0, 5, NULL, 2, TIMESTAMP '2023-01-04 13:04:50.31187', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, 0.0, 6, NULL, 1, TIMESTAMP '2023-01-04 13:04:50.31187', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, 0.0, 6, NULL, 5, TIMESTAMP '2023-01-04 13:04:50.31187', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-01-04 13:10:39.397 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "Discriminator", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 'UserClaim', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "Discriminator", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 'UserClaim', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
2023-01-04 13:10:39.399 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '0a1e5c27-0b09-4f60-a9c3-8618791a8672');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '11fafeb4-c7c1-463c-bb1e-55203e68dfdf');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '131d5dd1-6bf1-4f52-be90-00815000fb57');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '221c0048-08c9-4e72-8f5c-ddf4039f9488');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('2c5e174e-3b0e-446f-86af-483d56fd7210', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '34a0eb9b-6797-40f7-a84c-aa31cdd4cdc6');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '3b9d7f21-1d66-4c98-8648-64a68777bccb');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '4ff7819d-8e17-4aa8-a0da-964c2db21591');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '5a6f1681-c582-46f5-905b-4eb2c222dcf5');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '92b7c777-0d3e-4026-844f-20164bb0f97e');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '92db214d-cd73-4fbc-8b34-1dc0709ba0b2');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '9c57fadd-110a-4b45-aa89-69aa141564c6');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'e0c3bef9-fd70-421e-b07b-055c38b6d77c');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'eb6a85b0-a7fb-4f8e-9bea-03825e6f020f');
2023-01-04 13:10:39.401 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (1, 0.0, NULL, 1, TIMESTAMP '2023-01-04 13:04:50.311872', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (2, 0.0, NULL, 1, TIMESTAMP '2023-01-04 13:04:50.311872', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (3, 0.0, NULL, 1, TIMESTAMP '2023-01-04 13:04:50.311873', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '5a6f1681-c582-46f5-905b-4eb2c222dcf5');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (4, 0.0, NULL, 1, TIMESTAMP '2023-01-04 13:04:50.311873', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '3b9d7f21-1d66-4c98-8648-64a68777bccb');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (5, 0.0, NULL, 1, TIMESTAMP '2023-01-04 13:04:50.311873', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '0a1e5c27-0b09-4f60-a9c3-8618791a8672');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (6, 0.0, NULL, 1, TIMESTAMP '2023-01-04 13:04:50.311873', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852');
2023-01-04 13:10:39.403 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-01-04 13:10:39.406 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-01-04 13:10:39.408 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-01-04 13:10:39.410 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-01-04 13:10:39.412 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-01-04 13:10:39.414 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-01-04 13:10:39.417 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-01-04 13:10:39.419 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId" ON "AccountHistory" ("PayerId");
2023-01-04 13:10:39.421 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-01-04 13:10:39.423 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-01-04 13:10:39.426 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-01-04 13:10:39.428 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-01-04 13:10:39.431 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-01-04 13:10:39.433 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-01-04 13:10:39.435 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-01-04 13:10:39.438 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-01-04 13:10:39.442 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-01-04 13:10:39.446 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-01-04 13:10:39.448 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-01-04 13:10:39.450 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-01-04 13:10:39.453 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-01-04 13:10:39.455 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-01-04 13:10:39.457 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-01-04 13:10:39.459 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-01-04 13:10:39.461 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-01-04 13:10:39.464 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-01-04 13:10:39.466 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-01-04 13:10:39.468 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-01-04 13:10:39.470 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-01-04 13:10:39.473 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-01-04 13:10:39.475 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-01-04 13:10:39.477 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-01-04 13:10:39.480 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-01-04 13:10:39.482 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-01-04 13:10:39.485 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-01-04 13:10:39.487 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-01-04 13:10:39.489 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-01-04 13:10:39.491 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-01-04 13:10:39.494 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId" ON "ParcelOwners" ("RecepientCourierId");
2023-01-04 13:10:39.496 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId" ON "ParcelOwners" ("RecepientId");
2023-01-04 13:10:39.498 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId" ON "ParcelOwners" ("RecepientStaffId");
2023-01-04 13:10:39.500 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId" ON "ParcelOwners" ("SenderCourierId");
2023-01-04 13:10:39.502 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId" ON "ParcelOwners" ("SenderId");
2023-01-04 13:10:39.504 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId" ON "ParcelOwners" ("SenderStaffId");
2023-01-04 13:10:39.506 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-01-04 13:10:39.508 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-01-04 13:10:39.510 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-01-04 13:10:39.512 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-01-04 13:10:39.514 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-01-04 13:10:39.517 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-01-04 13:10:39.519 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-01-04 13:10:39.521 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-01-04 13:10:39.525 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-01-04 13:10:39.528 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-01-04 13:10:39.531 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-01-04 13:10:39.533 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-01-04 13:10:39.536 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-01-04 13:10:39.538 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-01-04 13:10:39.541 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId" ON "UserAccount" ("UserId");
2023-01-04 13:10:39.543 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-01-04 13:10:39.545 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-01-04 13:10:39.547 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-01-04 13:10:39.550 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-01-04 13:10:39.552 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId" ON "UserAccountHistory" ("UserId");
2023-01-04 13:10:39.555 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT setval(
    pg_get_serial_sequence('"Branch"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Branch") + 1,
        nextval(pg_get_serial_sequence('"Branch"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Currency"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Currency") + 1,
        nextval(pg_get_serial_sequence('"Currency"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ExpenseType"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ExpenseType") + 1,
        nextval(pg_get_serial_sequence('"ExpenseType"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Plan"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Plan") + 1,
        nextval(pg_get_serial_sequence('"Plan"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Status"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Status") + 1,
        nextval(pg_get_serial_sequence('"Status"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Account"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Account") + 1,
        nextval(pg_get_serial_sequence('"Account"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUserClaims"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUserClaims") + 1,
        nextval(pg_get_serial_sequence('"AspNetUserClaims"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"UserAccount"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "UserAccount") + 1,
        nextval(pg_get_serial_sequence('"UserAccount"', 'Id'))),
    false);
2023-01-04 13:10:39.556 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20230104080450_Initialize', '7.0.1');
2023-01-04 13:11:29.523 +05:00 [INF] Executed DbCommand (27ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
REVOKE CONNECT ON DATABASE edsystemsdatabase FROM PUBLIC;
SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE datname = 'edsystemsdatabase';
2023-01-04 13:11:30.292 +05:00 [INF] Executed DbCommand (748ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE edsystemsdatabase;
2023-01-04 13:11:30.882 +05:00 [INF] Executed DbCommand (143ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE edsystemsdatabase;
2023-01-04 13:11:31.231 +05:00 [INF] Executed DbCommand (22ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" text NOT NULL,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-01-04 13:11:31.239 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" text NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-01-04 13:11:31.245 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Currency" PRIMARY KEY ("Id")
);
2023-01-04 13:11:31.248 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT "PK_Expenses" PRIMARY KEY ("Id")
);
2023-01-04 13:11:31.253 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ExpenseType" PRIMARY KEY ("Id")
);
2023-01-04 13:11:31.258 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Parcel" PRIMARY KEY ("Id")
);
2023-01-04 13:11:31.264 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Cost" numeric(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Plan" PRIMARY KEY ("Id")
);
2023-01-04 13:11:31.272 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NULL,
    "Token" text NULL,
    "JwtId" text NULL,
    "IsUsed" boolean NOT NULL,
    "IsRevoked" boolean NOT NULL,
    "AddedDateTime" timestamp without time zone NOT NULL,
    "ExpiryDateTime" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_RefreshToken" PRIMARY KEY ("Id")
);
2023-01-04 13:11:31.277 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Status" PRIMARY KEY ("Id")
);
2023-01-04 13:11:31.286 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TokenId" text NULL,
    "RefreshToken" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Tokens" PRIMARY KEY ("Id")
);
2023-01-04 13:11:31.299 +05:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-01-04 13:11:31.305 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric(18,3) NOT NULL,
    "BranchId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Account" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-01-04 13:11:31.311 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ToBranchId" integer NOT NULL,
    "FromBranchId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelBranch" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:11:31.321 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StateDeliveryToBranch" boolean NOT NULL,
    "StatePickingUp" boolean NOT NULL,
    "StateDeliveryToPoint" boolean NOT NULL,
    "StateBuyout" boolean NOT NULL,
    "CostPickingUp" numeric(18,3) NOT NULL,
    "CostDeliveryToPoint" numeric(18,3) NOT NULL,
    "CostDeliveryToBranch" numeric(18,3) NOT NULL,
    "CostBuyout" numeric NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelCost" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:11:31.326 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Description" varchar NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelDescription" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:11:31.333 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelImage" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:11:31.341 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" text NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelItem" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:11:31.350 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Cost" numeric(18,3) NOT NULL,
    "CourierId" text NULL,
    "JobType" varchar NULL,
    "ParcelId" integer NOT NULL,
    "PaymentState" boolean NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelJob" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:11:31.356 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Weight" numeric(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSize" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:11:31.362 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSound" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:11:31.368 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PlanId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelPlan" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-01-04 13:11:31.374 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StatusId" integer NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelStatus" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-01-04 13:11:31.379 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" text NOT NULL,
    "FirstName" text NULL,
    "LastName" text NULL,
    "Address" text NULL,
    "UserNameT" text NULL,
    "ChatId" bigint NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "ParcelJobId" integer NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-01-04 13:11:31.386 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "PayerId" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_AccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId" FOREIGN KEY ("PayerId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:11:31.392 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" text NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    "Discriminator" text NOT NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 13:11:31.398 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 13:11:31.405 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" text NOT NULL,
    "RoleId" text NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 13:11:31.411 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" text NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 13:11:31.421 +05:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SenderId" text NULL,
    "RecepientId" text NULL,
    "RecepientStaffId" text NULL,
    "SenderStaffId" text NULL,
    "RecepientCourierId" text NULL,
    "SenderCourierId" text NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelOwners" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId" FOREIGN KEY ("RecepientCourierId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId" FOREIGN KEY ("RecepientId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId" FOREIGN KEY ("RecepientStaffId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId" FOREIGN KEY ("SenderCourierId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId" FOREIGN KEY ("SenderId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId" FOREIGN KEY ("SenderStaffId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 13:11:31.427 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric NOT NULL,
    "UserId" text NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccount" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-01-04 13:11:31.434 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "UserId" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-01-04 13:11:31.435 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('2c5e174e-3b0e-446f-86af-483d56fd7210', '8b676793-aab0-407f-8fcc-fe53017f6740', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('336b1b38-f4c9-4844-8dcb-b59a0d7f0533', '41daee73-d25d-40a9-aa57-895084293a4a', 'Customer', 'CUSTOMER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '3bfb0501-56a5-4163-ae79-8237c48ad3b9', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('5919c97a-b888-4858-bbbe-0123a1952624', '3c8b397f-36b8-419c-adb7-515759c77919', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', 'eac23dc6-ebef-453d-a653-3e02725ee7a7', 'Manager', 'MANAGER');
2023-01-04 13:11:31.442 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('0a1e5c27-0b09-4f60-a9c3-8618791a8672', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'c6fe1fba-7a85-4d9b-98d6-c2f249d00c7f', TIMESTAMP '2023-01-04 13:11:30.468091', NULL, 'Ismoil@gmail.com', FALSE, 'EDTashkent', 'Ismoil', FALSE, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEH9MVGY/JMoBGPopEVsFfP+rOAl2v53CMSzdzGHapcKKfTxUoMCUPSA18o5jtH0cGQ==', '998977093262', FALSE, '91c78402-6654-4d83-9442-e8ead5560cb7', FALSE, 'ismoil', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('11fafeb4-c7c1-463c-bb1e-55203e68dfdf', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '86014907-08f9-43d3-a22f-4a5dfbafb50b', TIMESTAMP '2023-01-04 13:11:30.468113', NULL, 'Umar@gmail.com', FALSE, 'EDMoscow', 'Umar', FALSE, NULL, 'UMAR@GMAIL.COM', 'UMAR', NULL, 'AQAAAAIAAYagAAAAEH9MVGY/JMoBGPopEVsFfP+rOAl2v53CMSzdzGHapcKKfTxUoMCUPSA18o5jtH0cGQ==', '79963321030', FALSE, '34bd6b35-a46d-42dc-b305-699c88a4039b', FALSE, 'umar', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('131d5dd1-6bf1-4f52-be90-00815000fb57', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'c3f8d02d-e8d2-40b4-8ceb-67097772af9f', TIMESTAMP '2023-01-04 13:11:30.468094', NULL, 'Khikmatillo@gmail.com', FALSE, 'EDTashkent', 'Khikmatillo', FALSE, NULL, 'KHIKMATILLO@GMAIL.COM', 'KHIKMATILLO', NULL, 'AQAAAAIAAYagAAAAEH9MVGY/JMoBGPopEVsFfP+rOAl2v53CMSzdzGHapcKKfTxUoMCUPSA18o5jtH0cGQ==', '998974468090', FALSE, '652e9221-5e27-4d5b-972b-c6b1469d4bc3', FALSE, 'khikmatillo', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('221c0048-08c9-4e72-8f5c-ddf4039f9488', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'db72565c-f815-44f2-823f-8e9ce83aa764', TIMESTAMP '2023-01-04 13:11:30.468098', NULL, 'Abbos@gmail.com', FALSE, 'EDTashkent', 'Abbos', FALSE, NULL, 'ABBOS@GMAIL.COM', 'ABBOS', NULL, 'AQAAAAIAAYagAAAAEH9MVGY/JMoBGPopEVsFfP+rOAl2v53CMSzdzGHapcKKfTxUoMCUPSA18o5jtH0cGQ==', '998903550022', FALSE, '6fd77a37-dd72-4eb8-b879-a593c15f10cf', FALSE, 'abbos', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('30a8f9cc-8d37-4d93-ab2f-774428387e4a', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '374a9d82-b00e-4b54-a8b6-bd3aeeec2fb6', TIMESTAMP '2023-01-04 13:11:30.468078', NULL, 'administrator@gmail.com', FALSE, 'EDSystem', 'Administrator', FALSE, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEH9MVGY/JMoBGPopEVsFfP+rOAl2v53CMSzdzGHapcKKfTxUoMCUPSA18o5jtH0cGQ==', '998970000675', FALSE, '2a959eb5-95cd-41c9-85fd-da4c45b9e20b', FALSE, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('34a0eb9b-6797-40f7-a84c-aa31cdd4cdc6', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '1b114508-8211-4f27-a262-1f7f1436bcb4', TIMESTAMP '2023-01-04 13:11:30.468093', NULL, 'Ubaydulla@gmail.com', FALSE, 'EDTashkent', 'Ubaydulla', FALSE, NULL, 'UBAYDULLA@GMAIL.COM', 'UBAYDULLA', NULL, 'AQAAAAIAAYagAAAAEH9MVGY/JMoBGPopEVsFfP+rOAl2v53CMSzdzGHapcKKfTxUoMCUPSA18o5jtH0cGQ==', '998990500033', FALSE, '86570fc1-5b48-4d0d-9e4a-2b60aae160c9', FALSE, 'ubaydulla', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('3b9d7f21-1d66-4c98-8648-64a68777bccb', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'ff89b544-03e4-4f15-86e0-78bf6b2cccd2', TIMESTAMP '2023-01-04 13:11:30.468082', NULL, 'Javohir@gmail.com', FALSE, 'EDTashkent', 'Javohir', FALSE, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEH9MVGY/JMoBGPopEVsFfP+rOAl2v53CMSzdzGHapcKKfTxUoMCUPSA18o5jtH0cGQ==', '998931710966', FALSE, 'c563d905-d5b4-4aab-8942-54a75165e9b9', FALSE, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('4ff7819d-8e17-4aa8-a0da-964c2db21591', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '855dccad-10cb-434d-b146-7dd14acc5e8a', TIMESTAMP '2023-01-04 13:11:30.4681', NULL, 'Ulugbek@gmail.com', FALSE, 'EDMoscow', 'Ulugbek', FALSE, NULL, 'ULUGBEK@GMAIL.COM', 'ULUGBEK', NULL, 'AQAAAAIAAYagAAAAEH9MVGY/JMoBGPopEVsFfP+rOAl2v53CMSzdzGHapcKKfTxUoMCUPSA18o5jtH0cGQ==', '79777403487', FALSE, '6989874c-8822-4769-8a1f-1c96ab5af3ae', FALSE, 'ulugbek', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('5a6f1681-c582-46f5-905b-4eb2c222dcf5', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '44c515d6-031e-4b93-aedd-9e1335ba3610', TIMESTAMP '2023-01-04 13:11:30.468081', NULL, 'Nodir@gmail.com', FALSE, 'EDTashkent', 'Nodir', FALSE, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEH9MVGY/JMoBGPopEVsFfP+rOAl2v53CMSzdzGHapcKKfTxUoMCUPSA18o5jtH0cGQ==', '998909046605', FALSE, '35d89841-9e9a-4f6c-881c-0b02a1f826e7', FALSE, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('92b7c777-0d3e-4026-844f-20164bb0f97e', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '770de054-271f-4a3d-87d6-e6717371c760', TIMESTAMP '2023-01-04 13:11:30.468114', NULL, 'Abror@gmail.com', FALSE, 'EDMoscow', 'Abror', FALSE, NULL, 'ABROR@GMAIL.COM', 'ABROR', NULL, 'AQAAAAIAAYagAAAAEH9MVGY/JMoBGPopEVsFfP+rOAl2v53CMSzdzGHapcKKfTxUoMCUPSA18o5jtH0cGQ==', '79296800899', FALSE, '56d8f447-e5cc-41cd-8090-5062bc53104b', FALSE, 'abror', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('92db214d-cd73-4fbc-8b34-1dc0709ba0b2', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'af243ec9-83df-4afa-a16b-37d6be299883', TIMESTAMP '2023-01-04 13:11:30.468102', NULL, 'Abdulaziz@gmail.com', FALSE, 'EDMoscow', 'Abdulaziz', FALSE, NULL, 'ABDULAZIZ@GMAIL.COM', 'ABDULAZIZ', NULL, 'AQAAAAIAAYagAAAAEH9MVGY/JMoBGPopEVsFfP+rOAl2v53CMSzdzGHapcKKfTxUoMCUPSA18o5jtH0cGQ==', '79691799000', FALSE, '5d207449-4dd6-4b3f-a2e4-7153354d15b0', FALSE, 'abdulaziz', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('9c57fadd-110a-4b45-aa89-69aa141564c6', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '21b00c59-cf87-4cdb-960f-fd840fe9033b', TIMESTAMP '2023-01-04 13:11:30.468103', NULL, 'Doniyor@gmail.com', FALSE, 'EDMoscow', 'Doniyor', FALSE, NULL, 'DONIYOR@GMAIL.COM', 'DONIYOR', NULL, 'AQAAAAIAAYagAAAAEH9MVGY/JMoBGPopEVsFfP+rOAl2v53CMSzdzGHapcKKfTxUoMCUPSA18o5jtH0cGQ==', '79777601654', FALSE, 'b4ed7ebb-f5a4-4d16-91f6-e4789e81bc09', FALSE, 'doniyor', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('cadaa51d-ddb3-4564-a8c5-79e80c98a032', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '877cfbd1-c077-4634-b8b9-03fd57e493f9', TIMESTAMP '2023-01-04 13:11:30.46808', NULL, 'hayrulloh@gmail.com', FALSE, 'EDTashkent', 'Hayrulloh', FALSE, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEH9MVGY/JMoBGPopEVsFfP+rOAl2v53CMSzdzGHapcKKfTxUoMCUPSA18o5jtH0cGQ==', '998935788886', FALSE, '64f4f1e2-9eda-4846-bd84-aaf39f1854fe', FALSE, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('e0c3bef9-fd70-421e-b07b-055c38b6d77c', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'f774b0a5-0f13-40c9-b959-51884b0ad9b2', TIMESTAMP '2023-01-04 13:11:30.468099', NULL, 'Shohruh@gmail.com', FALSE, 'EDMoscow', 'Shohruh', FALSE, NULL, 'SHOHRUH@GMAIL.COM', 'SHOHRUH', NULL, 'AQAAAAIAAYagAAAAEH9MVGY/JMoBGPopEVsFfP+rOAl2v53CMSzdzGHapcKKfTxUoMCUPSA18o5jtH0cGQ==', '79060470085', FALSE, 'c0d1936c-4f78-47bd-931d-a2c5af9deb21', FALSE, 'shohruh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('e13b576b-afbe-4b4c-aaad-64fd9bee3852', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'b89a070f-67be-4424-b97a-1dd60b8d17ad', TIMESTAMP '2023-01-04 13:11:30.468092', NULL, 'Sadulla@gmail.com', FALSE, 'EDTashkent', 'Sadulla', FALSE, NULL, 'SADULLA@GMAIL.COM', 'SADULLA', NULL, 'AQAAAAIAAYagAAAAEH9MVGY/JMoBGPopEVsFfP+rOAl2v53CMSzdzGHapcKKfTxUoMCUPSA18o5jtH0cGQ==', '998994885995', FALSE, '438e0492-6fc5-4747-a160-d63ccb284903', FALSE, 'sadulla', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('eb6a85b0-a7fb-4f8e-9bea-03825e6f020f', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '743809db-c593-4eb9-a41b-af8361b6ee1e', TIMESTAMP '2023-01-04 13:11:30.468112', NULL, 'Shaxzod@gmail.com', FALSE, 'EDMoscow', 'Shaxzod', FALSE, NULL, 'SHAXZOD@GMAIL.COM', 'SHAXZOD', NULL, 'AQAAAAIAAYagAAAAEH9MVGY/JMoBGPopEVsFfP+rOAl2v53CMSzdzGHapcKKfTxUoMCUPSA18o5jtH0cGQ==', '79163870009', FALSE, 'd46cd218-3fe8-4b1f-b65a-f1fed54afb7a', FALSE, 'shaxzod', 'UserName');
2023-01-04 13:11:31.443 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, TIMESTAMP '2023-01-04 13:11:30.406261', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, TIMESTAMP '2023-01-04 13:11:30.406261', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, TIMESTAMP '2023-01-04 13:11:30.406261', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, TIMESTAMP '2023-01-04 13:11:30.406261', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, TIMESTAMP '2023-01-04 13:11:30.406262', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, TIMESTAMP '2023-01-04 13:11:30.406262', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-01-04 13:11:31.444 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, TIMESTAMP '2023-01-04 13:11:30.468132', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, TIMESTAMP '2023-01-04 13:11:30.468132', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, TIMESTAMP '2023-01-04 13:11:30.468132', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, TIMESTAMP '2023-01-04 13:11:30.468132', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, TIMESTAMP '2023-01-04 13:11:30.468132', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, TIMESTAMP '2023-01-04 13:11:30.468132', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, TIMESTAMP '2023-01-04 13:11:30.468132', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, TIMESTAMP '2023-01-04 13:11:30.468133', NULL, NULL, 'Сомони', 972);
2023-01-04 13:11:31.445 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-01-04 13:11:30.406274', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-01-04 13:11:30.406274', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-01-04 13:11:30.406274', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-01-04 13:11:30.406274', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-01-04 13:11:30.406274', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-01-04 13:11:30.406274', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, TIMESTAMP '2023-01-04 13:11:30.406275', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, TIMESTAMP '2023-01-04 13:11:30.406275', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, TIMESTAMP '2023-01-04 13:11:30.406275', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, TIMESTAMP '2023-01-04 13:11:30.406275', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, TIMESTAMP '2023-01-04 13:11:30.406275', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, TIMESTAMP '2023-01-04 13:11:30.406275', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, TIMESTAMP '2023-01-04 13:11:30.406275', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-01-04 13:11:31.446 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, 7.0, NULL, TIMESTAMP '2023-01-04 13:11:30.468129', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, 12.0, NULL, TIMESTAMP '2023-01-04 13:11:30.468129', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, 30.0, NULL, TIMESTAMP '2023-01-04 13:11:30.468129', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, 5.0, NULL, TIMESTAMP '2023-01-04 13:11:30.468129', NULL, 'Description', NULL, 'Авто');
2023-01-04 13:11:31.447 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-01-04 13:11:30.406253', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-01-04 13:11:30.406255', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-01-04 13:11:30.406255', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-01-04 13:11:30.406255', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-01-04 13:11:30.406255', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-01-04 13:11:30.406255', NULL, 'Выдан', NULL, 'Выдан');
2023-01-04 13:11:31.449 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 0.0, 1, NULL, 1, TIMESTAMP '2023-01-04 13:11:30.406264', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 0.0, 1, NULL, 2, TIMESTAMP '2023-01-04 13:11:30.406264', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 0.0, 2, NULL, 1, TIMESTAMP '2023-01-04 13:11:30.406264', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 0.0, 2, NULL, 2, TIMESTAMP '2023-01-04 13:11:30.406265', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 0.0, 3, NULL, 1, TIMESTAMP '2023-01-04 13:11:30.406265', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 0.0, 3, NULL, 2, TIMESTAMP '2023-01-04 13:11:30.406265', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 0.0, 4, NULL, 1, TIMESTAMP '2023-01-04 13:11:30.406265', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 0.0, 4, NULL, 2, TIMESTAMP '2023-01-04 13:11:30.406265', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, 0.0, 5, NULL, 1, TIMESTAMP '2023-01-04 13:11:30.406266', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, 0.0, 5, NULL, 2, TIMESTAMP '2023-01-04 13:11:30.406266', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, 0.0, 6, NULL, 1, TIMESTAMP '2023-01-04 13:11:30.406266', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, 0.0, 6, NULL, 5, TIMESTAMP '2023-01-04 13:11:30.406266', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-01-04 13:11:31.450 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "Discriminator", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 'UserClaim', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "Discriminator", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 'UserClaim', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
2023-01-04 13:11:31.451 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '0a1e5c27-0b09-4f60-a9c3-8618791a8672');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '11fafeb4-c7c1-463c-bb1e-55203e68dfdf');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '131d5dd1-6bf1-4f52-be90-00815000fb57');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '221c0048-08c9-4e72-8f5c-ddf4039f9488');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('2c5e174e-3b0e-446f-86af-483d56fd7210', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '34a0eb9b-6797-40f7-a84c-aa31cdd4cdc6');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '3b9d7f21-1d66-4c98-8648-64a68777bccb');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '4ff7819d-8e17-4aa8-a0da-964c2db21591');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '5a6f1681-c582-46f5-905b-4eb2c222dcf5');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '92b7c777-0d3e-4026-844f-20164bb0f97e');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '92db214d-cd73-4fbc-8b34-1dc0709ba0b2');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '9c57fadd-110a-4b45-aa89-69aa141564c6');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'e0c3bef9-fd70-421e-b07b-055c38b6d77c');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'eb6a85b0-a7fb-4f8e-9bea-03825e6f020f');
2023-01-04 13:11:31.453 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (1, 0.0, NULL, 1, TIMESTAMP '2023-01-04 13:11:30.406268', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (2, 0.0, NULL, 1, TIMESTAMP '2023-01-04 13:11:30.406268', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (3, 0.0, NULL, 1, TIMESTAMP '2023-01-04 13:11:30.406268', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '5a6f1681-c582-46f5-905b-4eb2c222dcf5');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (4, 0.0, NULL, 1, TIMESTAMP '2023-01-04 13:11:30.406269', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '3b9d7f21-1d66-4c98-8648-64a68777bccb');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (5, 0.0, NULL, 1, TIMESTAMP '2023-01-04 13:11:30.406272', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '0a1e5c27-0b09-4f60-a9c3-8618791a8672');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (6, 0.0, NULL, 1, TIMESTAMP '2023-01-04 13:11:30.406272', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852');
2023-01-04 13:11:31.455 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-01-04 13:11:31.458 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-01-04 13:11:31.460 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-01-04 13:11:31.463 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-01-04 13:11:31.465 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-01-04 13:11:31.467 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-01-04 13:11:31.469 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-01-04 13:11:31.472 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId" ON "AccountHistory" ("PayerId");
2023-01-04 13:11:31.474 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-01-04 13:11:31.476 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-01-04 13:11:31.479 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-01-04 13:11:31.482 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-01-04 13:11:31.484 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-01-04 13:11:31.490 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-01-04 13:11:31.493 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-01-04 13:11:31.496 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-01-04 13:11:31.498 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-01-04 13:11:31.501 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-01-04 13:11:31.504 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-01-04 13:11:31.506 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-01-04 13:11:31.509 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-01-04 13:11:31.511 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-01-04 13:11:31.513 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-01-04 13:11:31.515 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-01-04 13:11:31.517 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-01-04 13:11:31.520 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-01-04 13:11:31.522 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-01-04 13:11:31.524 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-01-04 13:11:31.526 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-01-04 13:11:31.528 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-01-04 13:11:31.530 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-01-04 13:11:31.532 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-01-04 13:11:31.535 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-01-04 13:11:31.537 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-01-04 13:11:31.539 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-01-04 13:11:31.541 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-01-04 13:11:31.543 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-01-04 13:11:31.546 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-01-04 13:11:31.549 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId" ON "ParcelOwners" ("RecepientCourierId");
2023-01-04 13:11:31.551 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId" ON "ParcelOwners" ("RecepientId");
2023-01-04 13:11:31.553 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId" ON "ParcelOwners" ("RecepientStaffId");
2023-01-04 13:11:31.555 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId" ON "ParcelOwners" ("SenderCourierId");
2023-01-04 13:11:31.557 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId" ON "ParcelOwners" ("SenderId");
2023-01-04 13:11:31.559 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId" ON "ParcelOwners" ("SenderStaffId");
2023-01-04 13:11:31.561 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-01-04 13:11:31.564 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-01-04 13:11:31.566 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-01-04 13:11:31.568 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-01-04 13:11:31.570 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-01-04 13:11:31.572 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-01-04 13:11:31.574 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-01-04 13:11:31.577 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-01-04 13:11:31.579 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-01-04 13:11:31.581 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-01-04 13:11:31.583 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-01-04 13:11:31.586 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-01-04 13:11:31.588 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-01-04 13:11:31.590 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-01-04 13:11:31.593 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId" ON "UserAccount" ("UserId");
2023-01-04 13:11:31.595 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-01-04 13:11:31.597 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-01-04 13:11:31.599 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-01-04 13:11:31.601 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-01-04 13:11:31.604 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId" ON "UserAccountHistory" ("UserId");
2023-01-04 13:11:31.611 +05:00 [INF] Executed DbCommand (8ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT setval(
    pg_get_serial_sequence('"Branch"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Branch") + 1,
        nextval(pg_get_serial_sequence('"Branch"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Currency"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Currency") + 1,
        nextval(pg_get_serial_sequence('"Currency"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ExpenseType"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ExpenseType") + 1,
        nextval(pg_get_serial_sequence('"ExpenseType"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Plan"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Plan") + 1,
        nextval(pg_get_serial_sequence('"Plan"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Status"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Status") + 1,
        nextval(pg_get_serial_sequence('"Status"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Account"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Account") + 1,
        nextval(pg_get_serial_sequence('"Account"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUserClaims"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUserClaims") + 1,
        nextval(pg_get_serial_sequence('"AspNetUserClaims"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"UserAccount"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "UserAccount") + 1,
        nextval(pg_get_serial_sequence('"UserAccount"', 'Id'))),
    false);
2023-01-04 13:11:31.654 +05:00 [INF] User profile is available. Using 'C:\Users\ashz\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-04 13:11:31.770 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-01-04 13:11:31.770 +05:00 [INF] Hosting environment: Development
2023-01-04 13:11:31.770 +05:00 [INF] Content root path: D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi
2023-01-04 13:11:31.803 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/index.html - -
2023-01-04 13:11:32.084 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/index.html - - - 200 - text/html;charset=utf-8 281.4404ms
2023-01-04 13:11:32.087 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - -
2023-01-04 13:11:32.098 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - - - 200 12002 application/javascript;+charset=utf-8 3.6959ms
2023-01-04 13:11:32.110 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_vs/browserLink - -
2023-01-04 13:11:32.188 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 78.2296ms
2023-01-04 13:11:32.234 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - -
2023-01-04 13:11:32.485 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 251.0342ms
2023-01-04 13:11:51.041 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/api/Branch - -
2023-01-04 13:11:51.084 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 13:11:51.093 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-01-04 13:11:51.489 +05:00 [INF] Executing action method EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) - Validation state: "Valid"
2023-01-04 13:11:51.507 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-01-04 13:11:51.778 +05:00 [INF] Executed DbCommand (9ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Name", b."Country", b."Code", b."City", b."Address", b."Email", b."Phone", b."DateCreated", b."DateUpdated"
FROM "Branch" AS b
2023-01-04 13:11:51.802 +05:00 [INF] Executed action method EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 309.3757ms.
2023-01-04 13:11:51.807 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm'.
2023-01-04 13:11:51.913 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 817.5571ms
2023-01-04 13:11:51.914 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 13:11:51.919 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/api/Branch - - - 200 1853 application/json;+charset=utf-8 877.8468ms
2023-01-04 14:01:11.406 +05:00 [FTL] An error occured while app initialization
System.ArgumentException: Couldn't set data source (Parameter 'data source')
 ---> System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at Npgsql.NpgsqlConnectionStringBuilder.GeneratedSetter(String keyword, Object value)
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   --- End of inner exception stack trace ---
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnectionStringBuilder..ctor(String connectionString)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.Exists(Boolean async, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.Exists()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.Persistence\DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi\Program.cs:line 54
2023-01-04 14:01:11.497 +05:00 [INF] User profile is available. Using 'C:\Users\ashz\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-04 14:01:11.594 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-01-04 14:01:11.600 +05:00 [INF] Hosting environment: Development
2023-01-04 14:01:11.600 +05:00 [INF] Content root path: D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi
2023-01-04 14:01:11.621 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger - -
2023-01-04 14:01:11.709 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/index.html - -
2023-01-04 14:01:11.713 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger - - - 301 - - 93.5039ms
2023-01-04 14:01:11.905 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/index.html - - - 200 - text/html;charset=utf-8 170.9368ms
2023-01-04 14:01:11.905 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/swagger-ui-bundle.js - -
2023-01-04 14:01:11.906 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/swagger-ui.css - -
2023-01-04 14:01:11.913 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/swagger-ui-standalone-preset.js - -
2023-01-04 14:01:11.913 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - -
2023-01-04 14:01:11.921 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_vs/browserLink - -
2023-01-04 14:01:11.944 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - - - 200 12002 application/javascript;+charset=utf-8 19.9021ms
2023-01-04 14:01:11.984 +05:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2023-01-04 14:01:11.984 +05:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-01-04 14:01:11.987 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/swagger-ui.css - - - 200 143943 text/css 81.6641ms
2023-01-04 14:01:11.993 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 71.3973ms
2023-01-04 14:01:11.994 +05:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-01-04 14:01:11.996 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/swagger-ui-standalone-preset.js - - - 200 339486 text/javascript 88.9982ms
2023-01-04 14:01:12.025 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/swagger-ui-bundle.js - - - 200 1096145 text/javascript 119.9455ms
2023-01-04 14:01:12.211 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - -
2023-01-04 14:01:12.231 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/favicon-32x32.png - -
2023-01-04 14:01:12.233 +05:00 [INF] Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
2023-01-04 14:01:12.233 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/favicon-32x32.png - - - 200 628 image/png 2.3136ms
2023-01-04 14:01:12.533 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 321.8588ms
2023-01-04 14:02:11.004 +05:00 [INF] Executed DbCommand (85ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-01-04 14:02:11.628 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-01-04 14:02:11.628 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 14:02:11.628 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 14:02:11.629 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-01-04 14:02:11.629 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 14:02:11.629 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 14:02:11.629 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" decimal(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 14:02:11.629 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" TEXT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-01-04 14:02:11.629 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 14:02:11.629 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 14:02:11.629 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" TEXT NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-01-04 14:02:11.630 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-01-04 14:02:11.630 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 14:02:11.630 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 14:02:11.630 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 14:02:11.630 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 14:02:11.630 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 14:02:11.630 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 14:02:11.630 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 14:02:11.631 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 14:02:11.631 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-01-04 14:02:11.631 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-01-04 14:02:11.631 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-01-04 14:02:11.631 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId" FOREIGN KEY ("PayerId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 14:02:11.631 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" TEXT NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    "Discriminator" TEXT NOT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 14:02:11.631 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" TEXT NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 14:02:11.632 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" TEXT NOT NULL,
    "RoleId" TEXT NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 14:02:11.632 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" TEXT NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 14:02:11.632 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "RecepientId" TEXT NULL,
    "RecepientStaffId" TEXT NULL,
    "SenderStaffId" TEXT NULL,
    "RecepientCourierId" TEXT NULL,
    "SenderCourierId" TEXT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId" FOREIGN KEY ("RecepientCourierId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId" FOREIGN KEY ("RecepientId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId" FOREIGN KEY ("RecepientStaffId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId" FOREIGN KEY ("SenderCourierId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId" FOREIGN KEY ("SenderId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId" FOREIGN KEY ("SenderStaffId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 14:02:11.632 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-01-04 14:02:11.632 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-01-04 14:02:11.633 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('2c5e174e-3b0e-446f-86af-483d56fd7210', '435491fa-ca3b-4b71-b6e8-bb25057177cd', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('336b1b38-f4c9-4844-8dcb-b59a0d7f0533', '051c8938-66e6-4fab-980f-8ba0be202ef5', 'Customer', 'CUSTOMER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '915f6920-9ebd-4ff9-93da-bcd30bc35474', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('5919c97a-b888-4858-bbbe-0123a1952624', 'ce8d53ea-3cfd-44d8-803e-258124225699', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '50c9ffd5-e479-4c6f-897e-f0e55e8b40dd', 'Manager', 'MANAGER');
2023-01-04 14:02:11.633 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('0a1e5c27-0b09-4f60-a9c3-8618791a8672', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '72517e82-9460-4012-9f39-a7a64c6faf49', '2023-01-04 14:02:11.1846284', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAECL+5SVyDYy4H9xGyyJ3JtCvGXeZpjiBEkdWuEpSTLgIX4yhIfJgexb4RWZJxDL8+A==', '998977093262', 0, '1592db34-3847-40f2-935e-a58c70ae7e82', 0, 'ismoil', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('11fafeb4-c7c1-463c-bb1e-55203e68dfdf', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'f3cec56b-5ff3-4613-b9f5-a54f35ce5df2', '2023-01-04 14:02:11.184646', NULL, 'Umar@gmail.com', 0, 'EDMoscow', 'Umar', 0, NULL, 'UMAR@GMAIL.COM', 'UMAR', NULL, 'AQAAAAIAAYagAAAAECL+5SVyDYy4H9xGyyJ3JtCvGXeZpjiBEkdWuEpSTLgIX4yhIfJgexb4RWZJxDL8+A==', '79963321030', 0, '7367303d-3a83-490d-8126-82fb9e9f7262', 0, 'umar', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('131d5dd1-6bf1-4f52-be90-00815000fb57', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '7eb2dcc7-1c6e-49b1-812f-d8fb27a79a20', '2023-01-04 14:02:11.1846311', NULL, 'Khikmatillo@gmail.com', 0, 'EDTashkent', 'Khikmatillo', 0, NULL, 'KHIKMATILLO@GMAIL.COM', 'KHIKMATILLO', NULL, 'AQAAAAIAAYagAAAAECL+5SVyDYy4H9xGyyJ3JtCvGXeZpjiBEkdWuEpSTLgIX4yhIfJgexb4RWZJxDL8+A==', '998974468090', 0, 'd61bfb46-538c-4787-a01f-f5a27e62621d', 0, 'khikmatillo', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('221c0048-08c9-4e72-8f5c-ddf4039f9488', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '3c3356f3-5d78-4414-8fda-013543f2bb93', '2023-01-04 14:02:11.1846321', NULL, 'Abbos@gmail.com', 0, 'EDTashkent', 'Abbos', 0, NULL, 'ABBOS@GMAIL.COM', 'ABBOS', NULL, 'AQAAAAIAAYagAAAAECL+5SVyDYy4H9xGyyJ3JtCvGXeZpjiBEkdWuEpSTLgIX4yhIfJgexb4RWZJxDL8+A==', '998903550022', 0, 'c1086040-4307-497b-88f0-5b367f327ccb', 0, 'abbos', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('30a8f9cc-8d37-4d93-ab2f-774428387e4a', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'fa117afc-c98d-432e-9667-bbe8c87c5492', '2023-01-04 14:02:11.184619', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAECL+5SVyDYy4H9xGyyJ3JtCvGXeZpjiBEkdWuEpSTLgIX4yhIfJgexb4RWZJxDL8+A==', '998970000675', 0, '53da9073-cf2c-4de8-b99c-57a47eddb8a7', 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('34a0eb9b-6797-40f7-a84c-aa31cdd4cdc6', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '4cae53a3-d0a8-4f5f-be02-2e3d31fbee92', '2023-01-04 14:02:11.1846303', NULL, 'Ubaydulla@gmail.com', 0, 'EDTashkent', 'Ubaydulla', 0, NULL, 'UBAYDULLA@GMAIL.COM', 'UBAYDULLA', NULL, 'AQAAAAIAAYagAAAAECL+5SVyDYy4H9xGyyJ3JtCvGXeZpjiBEkdWuEpSTLgIX4yhIfJgexb4RWZJxDL8+A==', '998990500033', 0, 'bc97f90e-3a9a-47d5-8dea-081be7538b16', 0, 'ubaydulla', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('3b9d7f21-1d66-4c98-8648-64a68777bccb', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '25a1612c-e3c9-43d8-aad2-4052b159dea1', '2023-01-04 14:02:11.1846276', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAECL+5SVyDYy4H9xGyyJ3JtCvGXeZpjiBEkdWuEpSTLgIX4yhIfJgexb4RWZJxDL8+A==', '998931710966', 0, '678a2278-eba7-4d49-ac6a-4e153d70b814', 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('4ff7819d-8e17-4aa8-a0da-964c2db21591', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '39801e52-daf2-41d6-b2f9-567fabd62bef', '2023-01-04 14:02:11.1846344', NULL, 'Ulugbek@gmail.com', 0, 'EDMoscow', 'Ulugbek', 0, NULL, 'ULUGBEK@GMAIL.COM', 'ULUGBEK', NULL, 'AQAAAAIAAYagAAAAECL+5SVyDYy4H9xGyyJ3JtCvGXeZpjiBEkdWuEpSTLgIX4yhIfJgexb4RWZJxDL8+A==', '79777403487', 0, 'a92f002f-ce4a-4999-91bb-01a1e160060f', 0, 'ulugbek', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('5a6f1681-c582-46f5-905b-4eb2c222dcf5', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'b4c79d87-7b09-4e49-9554-975023a324a5', '2023-01-04 14:02:11.1846265', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAECL+5SVyDYy4H9xGyyJ3JtCvGXeZpjiBEkdWuEpSTLgIX4yhIfJgexb4RWZJxDL8+A==', '998909046605', 0, 'c1451072-2ab5-4c81-af4d-c7099960b0f0', 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('92b7c777-0d3e-4026-844f-20164bb0f97e', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '905aa186-91e9-48ef-a1c7-676844cbba46', '2023-01-04 14:02:11.1846468', NULL, 'Abror@gmail.com', 0, 'EDMoscow', 'Abror', 0, NULL, 'ABROR@GMAIL.COM', 'ABROR', NULL, 'AQAAAAIAAYagAAAAECL+5SVyDYy4H9xGyyJ3JtCvGXeZpjiBEkdWuEpSTLgIX4yhIfJgexb4RWZJxDL8+A==', '79296800899', 0, '30232517-42a9-49ce-b06a-a5e9dca8264a', 0, 'abror', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('92db214d-cd73-4fbc-8b34-1dc0709ba0b2', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '1e44e6f9-0517-4a0a-bc95-dc7b576498e4', '2023-01-04 14:02:11.1846355', NULL, 'Abdulaziz@gmail.com', 0, 'EDMoscow', 'Abdulaziz', 0, NULL, 'ABDULAZIZ@GMAIL.COM', 'ABDULAZIZ', NULL, 'AQAAAAIAAYagAAAAECL+5SVyDYy4H9xGyyJ3JtCvGXeZpjiBEkdWuEpSTLgIX4yhIfJgexb4RWZJxDL8+A==', '79691799000', 0, 'dbc5a618-029d-4670-8ea3-3a19e75532b8', 0, 'abdulaziz', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('9c57fadd-110a-4b45-aa89-69aa141564c6', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '46fb06f8-6ba9-4caa-9cd3-aed5a2fced56', '2023-01-04 14:02:11.1846363', NULL, 'Doniyor@gmail.com', 0, 'EDMoscow', 'Doniyor', 0, NULL, 'DONIYOR@GMAIL.COM', 'DONIYOR', NULL, 'AQAAAAIAAYagAAAAECL+5SVyDYy4H9xGyyJ3JtCvGXeZpjiBEkdWuEpSTLgIX4yhIfJgexb4RWZJxDL8+A==', '79777601654', 0, 'be14f38e-507a-439d-af65-9884b950798f', 0, 'doniyor', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('cadaa51d-ddb3-4564-a8c5-79e80c98a032', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '6dafc134-7360-4dfb-9a18-7f80f5975e55', '2023-01-04 14:02:11.1846256', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAECL+5SVyDYy4H9xGyyJ3JtCvGXeZpjiBEkdWuEpSTLgIX4yhIfJgexb4RWZJxDL8+A==', '998935788886', 0, 'bbfaa073-544c-4ad0-ab17-b8e4348bc26e', 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('e0c3bef9-fd70-421e-b07b-055c38b6d77c', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'c73adf31-0b2b-4375-ad54-2ba179ae3d96', '2023-01-04 14:02:11.1846336', NULL, 'Shohruh@gmail.com', 0, 'EDMoscow', 'Shohruh', 0, NULL, 'SHOHRUH@GMAIL.COM', 'SHOHRUH', NULL, 'AQAAAAIAAYagAAAAECL+5SVyDYy4H9xGyyJ3JtCvGXeZpjiBEkdWuEpSTLgIX4yhIfJgexb4RWZJxDL8+A==', '79060470085', 0, '23cab91e-5be1-49a0-9f54-fcc16f39e463', 0, 'shohruh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('e13b576b-afbe-4b4c-aaad-64fd9bee3852', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '29996cda-e072-46af-bf54-e7d3eaea3a89', '2023-01-04 14:02:11.1846295', NULL, 'Sadulla@gmail.com', 0, 'EDTashkent', 'Sadulla', 0, NULL, 'SADULLA@GMAIL.COM', 'SADULLA', NULL, 'AQAAAAIAAYagAAAAECL+5SVyDYy4H9xGyyJ3JtCvGXeZpjiBEkdWuEpSTLgIX4yhIfJgexb4RWZJxDL8+A==', '998994885995', 0, 'eadf797a-f36a-4580-8e6c-a4df4e4c8dec', 0, 'sadulla', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('eb6a85b0-a7fb-4f8e-9bea-03825e6f020f', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '54fcd849-719a-4eee-8572-8716d11ea3ec', '2023-01-04 14:02:11.1846442', NULL, 'Shaxzod@gmail.com', 0, 'EDMoscow', 'Shaxzod', 0, NULL, 'SHAXZOD@GMAIL.COM', 'SHAXZOD', NULL, 'AQAAAAIAAYagAAAAECL+5SVyDYy4H9xGyyJ3JtCvGXeZpjiBEkdWuEpSTLgIX4yhIfJgexb4RWZJxDL8+A==', '79163870009', 0, '960c1cf1-93b6-4b51-b46c-fa4e9bdd0f7f', 0, 'shaxzod', 'UserName');
2023-01-04 14:02:11.633 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-01-04 14:02:11.1169851', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-01-04 14:02:11.1169853', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-01-04 14:02:11.1169882', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-01-04 14:02:11.1169884', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-01-04 14:02:11.1169885', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-01-04 14:02:11.1169886', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-01-04 14:02:11.633 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-01-04 14:02:11.1846746', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-01-04 14:02:11.1846748', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-01-04 14:02:11.1846749', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-01-04 14:02:11.184675', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-01-04 14:02:11.1846751', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-01-04 14:02:11.1846752', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-01-04 14:02:11.1846753', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-01-04 14:02:11.1846754', NULL, NULL, 'Сомони', 972);
2023-01-04 14:02:11.634 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-01-04 14:02:11.1169975', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-01-04 14:02:11.1169976', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-01-04 14:02:11.1169977', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-01-04 14:02:11.1169978', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-01-04 14:02:11.1169979', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-01-04 14:02:11.1169979', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-01-04 14:02:11.1169981', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-01-04 14:02:11.1169982', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-01-04 14:02:11.1169982', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-01-04 14:02:11.1169983', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-01-04 14:02:11.1169984', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-01-04 14:02:11.1169985', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-01-04 14:02:11.1169987', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-01-04 14:02:11.634 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-01-04 14:02:11.1846691', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-01-04 14:02:11.1846697', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-01-04 14:02:11.1846698', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-01-04 14:02:11.1846699', NULL, 'Description', NULL, 'Авто');
2023-01-04 14:02:11.634 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-01-04 14:02:11.1169786', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-01-04 14:02:11.1169802', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-01-04 14:02:11.1169803', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-01-04 14:02:11.1169804', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-01-04 14:02:11.1169805', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-01-04 14:02:11.1169806', NULL, 'Выдан', NULL, 'Выдан');
2023-01-04 14:02:11.634 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-01-04 14:02:11.1169913', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-01-04 14:02:11.1169916', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-01-04 14:02:11.1169918', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-01-04 14:02:11.1169919', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-01-04 14:02:11.1169921', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-01-04 14:02:11.1169922', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-01-04 14:02:11.1169923', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-01-04 14:02:11.1169924', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-01-04 14:02:11.1169925', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-01-04 14:02:11.1169926', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-01-04 14:02:11.1169927', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-01-04 14:02:11.1169928', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-01-04 14:02:11.634 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "Discriminator", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 'UserClaim', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "Discriminator", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 'UserClaim', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
2023-01-04 14:02:11.634 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '0a1e5c27-0b09-4f60-a9c3-8618791a8672');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '11fafeb4-c7c1-463c-bb1e-55203e68dfdf');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '131d5dd1-6bf1-4f52-be90-00815000fb57');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '221c0048-08c9-4e72-8f5c-ddf4039f9488');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('2c5e174e-3b0e-446f-86af-483d56fd7210', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '34a0eb9b-6797-40f7-a84c-aa31cdd4cdc6');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '3b9d7f21-1d66-4c98-8648-64a68777bccb');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '4ff7819d-8e17-4aa8-a0da-964c2db21591');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '5a6f1681-c582-46f5-905b-4eb2c222dcf5');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '92b7c777-0d3e-4026-844f-20164bb0f97e');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '92db214d-cd73-4fbc-8b34-1dc0709ba0b2');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '9c57fadd-110a-4b45-aa89-69aa141564c6');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'e0c3bef9-fd70-421e-b07b-055c38b6d77c');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'eb6a85b0-a7fb-4f8e-9bea-03825e6f020f');
2023-01-04 14:02:11.634 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (1, '0.0', NULL, 1, '2023-01-04 14:02:11.1169946', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (2, '0.0', NULL, 1, '2023-01-04 14:02:11.1169952', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (3, '0.0', NULL, 1, '2023-01-04 14:02:11.1169953', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '5a6f1681-c582-46f5-905b-4eb2c222dcf5');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (4, '0.0', NULL, 1, '2023-01-04 14:02:11.1169955', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '3b9d7f21-1d66-4c98-8648-64a68777bccb');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (5, '0.0', NULL, 1, '2023-01-04 14:02:11.1169957', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '0a1e5c27-0b09-4f60-a9c3-8618791a8672');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (6, '0.0', NULL, 1, '2023-01-04 14:02:11.1169958', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852');
2023-01-04 14:02:11.634 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-01-04 14:02:11.635 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-01-04 14:02:11.635 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-01-04 14:02:11.635 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-01-04 14:02:11.635 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-01-04 14:02:11.635 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-01-04 14:02:11.635 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-01-04 14:02:11.635 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId" ON "AccountHistory" ("PayerId");
2023-01-04 14:02:11.635 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-01-04 14:02:11.636 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-01-04 14:02:11.636 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-01-04 14:02:11.636 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-01-04 14:02:11.636 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-01-04 14:02:11.636 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-01-04 14:02:11.636 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-01-04 14:02:11.636 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-01-04 14:02:11.636 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-01-04 14:02:11.636 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-01-04 14:02:11.637 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-01-04 14:02:11.637 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-01-04 14:02:11.637 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-01-04 14:02:11.637 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-01-04 14:02:11.637 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-01-04 14:02:11.637 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-01-04 14:02:11.637 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-01-04 14:02:11.637 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-01-04 14:02:11.637 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-01-04 14:02:11.637 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-01-04 14:02:11.638 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-01-04 14:02:11.638 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-01-04 14:02:11.638 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-01-04 14:02:11.638 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-01-04 14:02:11.638 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-01-04 14:02:11.638 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-01-04 14:02:11.638 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-01-04 14:02:11.638 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-01-04 14:02:11.638 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-01-04 14:02:11.639 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-01-04 14:02:11.639 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId" ON "ParcelOwners" ("RecepientCourierId");
2023-01-04 14:02:11.639 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId" ON "ParcelOwners" ("RecepientId");
2023-01-04 14:02:11.639 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId" ON "ParcelOwners" ("RecepientStaffId");
2023-01-04 14:02:11.639 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId" ON "ParcelOwners" ("SenderCourierId");
2023-01-04 14:02:11.639 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId" ON "ParcelOwners" ("SenderId");
2023-01-04 14:02:11.639 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId" ON "ParcelOwners" ("SenderStaffId");
2023-01-04 14:02:11.639 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-01-04 14:02:11.639 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-01-04 14:02:11.639 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-01-04 14:02:11.640 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-01-04 14:02:11.640 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-01-04 14:02:11.640 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-01-04 14:02:11.640 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-01-04 14:02:11.640 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-01-04 14:02:11.640 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-01-04 14:02:11.640 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-01-04 14:02:11.640 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-01-04 14:02:11.640 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-01-04 14:02:11.640 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-01-04 14:02:11.641 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-01-04 14:02:11.641 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId" ON "UserAccount" ("UserId");
2023-01-04 14:02:11.641 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-01-04 14:02:11.641 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-01-04 14:02:11.641 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-01-04 14:02:11.641 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-01-04 14:02:11.641 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId" ON "UserAccountHistory" ("UserId");
2023-01-04 14:02:11.782 +05:00 [INF] User profile is available. Using 'C:\Users\ashz\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-04 14:02:11.900 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-01-04 14:02:11.901 +05:00 [INF] Hosting environment: Development
2023-01-04 14:02:11.901 +05:00 [INF] Content root path: D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi
2023-01-04 14:02:11.930 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/index.html - -
2023-01-04 14:02:12.222 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/index.html - - - 200 - text/html;charset=utf-8 294.1477ms
2023-01-04 14:02:12.248 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - -
2023-01-04 14:02:12.253 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - - - 200 12002 application/javascript;+charset=utf-8 5.0700ms
2023-01-04 14:02:12.275 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_vs/browserLink - -
2023-01-04 14:02:12.321 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 46.5968ms
2023-01-04 14:02:12.524 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - -
2023-01-04 14:02:12.949 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 424.2457ms
2023-01-04 14:03:28.184 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/api/Branch - -
2023-01-04 14:03:28.248 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 14:03:28.260 +05:00 [INF] Route matched with {action = "GetAll", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm]] GetAll() on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-01-04 14:03:28.648 +05:00 [INF] Executing action method EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) - Validation state: "Valid"
2023-01-04 14:03:28.668 +05:00 [INF] NotesRequest: GetBranchListQuery {"$type":"GetBranchListQuery"}
2023-01-04 14:03:28.872 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Name", "b"."Country", "b"."Code", "b"."City", "b"."Address", "b"."Email", "b"."Phone", "b"."DateCreated", "b"."DateUpdated"
FROM "Branch" AS "b"
2023-01-04 14:03:28.886 +05:00 [INF] Executed action method EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 236.1949ms.
2023-01-04 14:03:28.890 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.EDSystems.Queries.Branches.GetBranchList.BranchListVm'.
2023-01-04 14:03:28.980 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi) in 717.3425ms
2023-01-04 14:03:28.980 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAll (EDSystems.WebApi)'
2023-01-04 14:03:28.984 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/api/Branch - - - 200 1859 application/json;+charset=utf-8 799.4119ms
2023-01-04 16:11:36.638 +05:00 [INF] Executed DbCommand (99ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-01-04 16:11:37.405 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-01-04 16:11:37.405 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 16:11:37.406 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 16:11:37.406 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-01-04 16:11:37.406 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 16:11:37.406 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 16:11:37.406 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" decimal(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 16:11:37.406 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" TEXT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-01-04 16:11:37.407 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 16:11:37.407 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-01-04 16:11:37.407 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" TEXT NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-01-04 16:11:37.407 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-01-04 16:11:37.407 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 16:11:37.407 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 16:11:37.408 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 16:11:37.408 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 16:11:37.408 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 16:11:37.408 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 16:11:37.408 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 16:11:37.408 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 16:11:37.409 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-01-04 16:11:37.409 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-01-04 16:11:37.409 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" TEXT NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-01-04 16:11:37.409 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId" FOREIGN KEY ("PayerId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 16:11:37.410 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" TEXT NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    "Discriminator" TEXT NOT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 16:11:37.410 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" TEXT NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 16:11:37.410 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" TEXT NOT NULL,
    "RoleId" TEXT NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 16:11:37.410 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" TEXT NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-01-04 16:11:37.411 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "RecepientId" TEXT NULL,
    "RecepientStaffId" TEXT NULL,
    "SenderStaffId" TEXT NULL,
    "RecepientCourierId" TEXT NULL,
    "SenderCourierId" TEXT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId" FOREIGN KEY ("RecepientCourierId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId" FOREIGN KEY ("RecepientId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId" FOREIGN KEY ("RecepientStaffId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId" FOREIGN KEY ("SenderCourierId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId" FOREIGN KEY ("SenderId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId" FOREIGN KEY ("SenderStaffId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-01-04 16:11:37.411 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-01-04 16:11:37.411 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-01-04 16:11:37.412 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('2c5e174e-3b0e-446f-86af-483d56fd7210', '49bd9e9b-2831-4e53-af64-9a6cbcca1d8a', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('336b1b38-f4c9-4844-8dcb-b59a0d7f0533', 'e31f85d3-2563-4271-a65e-1b20a7600ce1', 'Customer', 'CUSTOMER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'af587120-5e34-442f-b784-0002d32b5333', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('5919c97a-b888-4858-bbbe-0123a1952624', 'a8b9151c-fae9-44b1-804c-035e9c779999', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', 'f3d32a03-204f-4886-a562-954ff6c06146', 'Manager', 'MANAGER');
2023-01-04 16:11:37.412 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('0a1e5c27-0b09-4f60-a9c3-8618791a8672', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '5d8d3312-bd70-4b48-81b4-cb99d5a4cba4', '2023-01-04 16:11:36.9321357', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEDzloGS/7UNXXuWeOcvlSwDNFTTxsBV120vtKLEOxGQQOSIF5A0p5rt6/7UIAlchdg==', '998977093262', 0, 'ef77eb6c-89c7-4c42-94b5-7ae620c4ebe0', 0, 'ismoil', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('11fafeb4-c7c1-463c-bb1e-55203e68dfdf', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '437854a6-619c-4060-a975-52528e3234f2', '2023-01-04 16:11:36.9321482', NULL, 'Umar@gmail.com', 0, 'EDMoscow', 'Umar', 0, NULL, 'UMAR@GMAIL.COM', 'UMAR', NULL, 'AQAAAAIAAYagAAAAEDzloGS/7UNXXuWeOcvlSwDNFTTxsBV120vtKLEOxGQQOSIF5A0p5rt6/7UIAlchdg==', '79963321030', 0, '098002df-3476-4489-b625-a7e527bca306', 0, 'umar', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('131d5dd1-6bf1-4f52-be90-00815000fb57', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '8d7a4a62-7b6f-4cc5-93ef-a7aff3cd8787', '2023-01-04 16:11:36.9321387', NULL, 'Khikmatillo@gmail.com', 0, 'EDTashkent', 'Khikmatillo', 0, NULL, 'KHIKMATILLO@GMAIL.COM', 'KHIKMATILLO', NULL, 'AQAAAAIAAYagAAAAEDzloGS/7UNXXuWeOcvlSwDNFTTxsBV120vtKLEOxGQQOSIF5A0p5rt6/7UIAlchdg==', '998974468090', 0, 'c85b1a4a-a36f-42d9-9a57-30fa15ed6d72', 0, 'khikmatillo', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('221c0048-08c9-4e72-8f5c-ddf4039f9488', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'db3681db-410c-4bd1-89c2-839af7691024', '2023-01-04 16:11:36.932141', NULL, 'Abbos@gmail.com', 0, 'EDTashkent', 'Abbos', 0, NULL, 'ABBOS@GMAIL.COM', 'ABBOS', NULL, 'AQAAAAIAAYagAAAAEDzloGS/7UNXXuWeOcvlSwDNFTTxsBV120vtKLEOxGQQOSIF5A0p5rt6/7UIAlchdg==', '998903550022', 0, '22645be6-56cc-48b1-a1d1-18ff848c5597', 0, 'abbos', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('30a8f9cc-8d37-4d93-ab2f-774428387e4a', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '9a6a4939-5100-496f-819f-c235ee6236a9', '2023-01-04 16:11:36.9321233', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEDzloGS/7UNXXuWeOcvlSwDNFTTxsBV120vtKLEOxGQQOSIF5A0p5rt6/7UIAlchdg==', '998970000675', 0, '428ad164-cb66-4cf2-ae11-af0f8d745183', 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('34a0eb9b-6797-40f7-a84c-aa31cdd4cdc6', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '18bf6f93-7c11-4897-8fa2-973767ff49e8', '2023-01-04 16:11:36.9321378', NULL, 'Ubaydulla@gmail.com', 0, 'EDTashkent', 'Ubaydulla', 0, NULL, 'UBAYDULLA@GMAIL.COM', 'UBAYDULLA', NULL, 'AQAAAAIAAYagAAAAEDzloGS/7UNXXuWeOcvlSwDNFTTxsBV120vtKLEOxGQQOSIF5A0p5rt6/7UIAlchdg==', '998990500033', 0, '43afed92-4b38-4edf-8436-edad35921b85', 0, 'ubaydulla', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('3b9d7f21-1d66-4c98-8648-64a68777bccb', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '5e5ac960-0858-45e4-bdd2-6b5b9f6f1007', '2023-01-04 16:11:36.9321347', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEDzloGS/7UNXXuWeOcvlSwDNFTTxsBV120vtKLEOxGQQOSIF5A0p5rt6/7UIAlchdg==', '998931710966', 0, 'ff53095b-f2d5-4636-b271-61644a469cac', 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('4ff7819d-8e17-4aa8-a0da-964c2db21591', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '103f71bf-8cbc-4ab4-8afb-c61bb758c2a1', '2023-01-04 16:11:36.9321429', NULL, 'Ulugbek@gmail.com', 0, 'EDMoscow', 'Ulugbek', 0, NULL, 'ULUGBEK@GMAIL.COM', 'ULUGBEK', NULL, 'AQAAAAIAAYagAAAAEDzloGS/7UNXXuWeOcvlSwDNFTTxsBV120vtKLEOxGQQOSIF5A0p5rt6/7UIAlchdg==', '79777403487', 0, 'cde66d0f-13f7-4a44-b497-090a79f26402', 0, 'ulugbek', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('5a6f1681-c582-46f5-905b-4eb2c222dcf5', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'd674def6-192a-4db9-8d90-6187c7371e22', '2023-01-04 16:11:36.9321336', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEDzloGS/7UNXXuWeOcvlSwDNFTTxsBV120vtKLEOxGQQOSIF5A0p5rt6/7UIAlchdg==', '998909046605', 0, '4e4579b0-9ef5-406b-b53a-3cbb04bb6be2', 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('92b7c777-0d3e-4026-844f-20164bb0f97e', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'c7e45687-a1d1-4283-a346-e803c7ffd6c0', '2023-01-04 16:11:36.9321492', NULL, 'Abror@gmail.com', 0, 'EDMoscow', 'Abror', 0, NULL, 'ABROR@GMAIL.COM', 'ABROR', NULL, 'AQAAAAIAAYagAAAAEDzloGS/7UNXXuWeOcvlSwDNFTTxsBV120vtKLEOxGQQOSIF5A0p5rt6/7UIAlchdg==', '79296800899', 0, 'b6ca5ede-725f-401e-97ca-d4b91b7377c4', 0, 'abror', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('92db214d-cd73-4fbc-8b34-1dc0709ba0b2', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '42f4b53a-9d8f-49af-ac61-b538dd0f0258', '2023-01-04 16:11:36.932144', NULL, 'Abdulaziz@gmail.com', 0, 'EDMoscow', 'Abdulaziz', 0, NULL, 'ABDULAZIZ@GMAIL.COM', 'ABDULAZIZ', NULL, 'AQAAAAIAAYagAAAAEDzloGS/7UNXXuWeOcvlSwDNFTTxsBV120vtKLEOxGQQOSIF5A0p5rt6/7UIAlchdg==', '79691799000', 0, 'f9d8de68-1c91-468c-aa7b-115f75177ecd', 0, 'abdulaziz', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('9c57fadd-110a-4b45-aa89-69aa141564c6', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, '12a2b884-e358-4b4a-8351-2142fafe55ef', '2023-01-04 16:11:36.9321449', NULL, 'Doniyor@gmail.com', 0, 'EDMoscow', 'Doniyor', 0, NULL, 'DONIYOR@GMAIL.COM', 'DONIYOR', NULL, 'AQAAAAIAAYagAAAAEDzloGS/7UNXXuWeOcvlSwDNFTTxsBV120vtKLEOxGQQOSIF5A0p5rt6/7UIAlchdg==', '79777601654', 0, '44be5537-8ad3-4424-88b3-af2b1ac1338e', 0, 'doniyor', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('cadaa51d-ddb3-4564-a8c5-79e80c98a032', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'f0379036-feb1-44aa-a0f7-a5e1fe3d5ac9', '2023-01-04 16:11:36.9321327', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEDzloGS/7UNXXuWeOcvlSwDNFTTxsBV120vtKLEOxGQQOSIF5A0p5rt6/7UIAlchdg==', '998935788886', 0, '8286380b-a0af-4378-b74e-56ad1347ba34', 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('e0c3bef9-fd70-421e-b07b-055c38b6d77c', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'f3df3641-2644-4806-b190-2ca53e5fc4b9', '2023-01-04 16:11:36.9321419', NULL, 'Shohruh@gmail.com', 0, 'EDMoscow', 'Shohruh', 0, NULL, 'SHOHRUH@GMAIL.COM', 'SHOHRUH', NULL, 'AQAAAAIAAYagAAAAEDzloGS/7UNXXuWeOcvlSwDNFTTxsBV120vtKLEOxGQQOSIF5A0p5rt6/7UIAlchdg==', '79060470085', 0, '03afd1a2-dd42-46d0-91eb-7104e8fbf3e6', 0, 'shohruh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('e13b576b-afbe-4b4c-aaad-64fd9bee3852', 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'dffd2382-c583-42fe-a5dc-1c2a5b1736d5', '2023-01-04 16:11:36.9321369', NULL, 'Sadulla@gmail.com', 0, 'EDTashkent', 'Sadulla', 0, NULL, 'SADULLA@GMAIL.COM', 'SADULLA', NULL, 'AQAAAAIAAYagAAAAEDzloGS/7UNXXuWeOcvlSwDNFTTxsBV120vtKLEOxGQQOSIF5A0p5rt6/7UIAlchdg==', '998994885995', 0, '25614300-4a63-4bfc-8ef1-c3456c64e36f', 0, 'sadulla', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES ('eb6a85b0-a7fb-4f8e-9bea-03825e6f020f', 0, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', -1001663331836, 'b553104c-17d2-4062-a661-c35b5992d9fd', '2023-01-04 16:11:36.9321464', NULL, 'Shaxzod@gmail.com', 0, 'EDMoscow', 'Shaxzod', 0, NULL, 'SHAXZOD@GMAIL.COM', 'SHAXZOD', NULL, 'AQAAAAIAAYagAAAAEDzloGS/7UNXXuWeOcvlSwDNFTTxsBV120vtKLEOxGQQOSIF5A0p5rt6/7UIAlchdg==', '79163870009', 0, '444a726b-a28b-4043-ad4a-6b8755ef735f', 0, 'shaxzod', 'UserName');
2023-01-04 16:11:37.412 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-01-04 16:11:36.8606345', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-01-04 16:11:36.8606349', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-01-04 16:11:36.860635', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-01-04 16:11:36.8606352', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-01-04 16:11:36.8606358', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-01-04 16:11:36.8606359', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-01-04 16:11:37.413 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-01-04 16:11:36.9321786', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-01-04 16:11:36.9321787', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-01-04 16:11:36.9321789', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-01-04 16:11:36.9321789', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-01-04 16:11:36.9321791', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-01-04 16:11:36.9321792', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-01-04 16:11:36.9321794', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-01-04 16:11:36.9321795', NULL, NULL, 'Сомони', 972);
2023-01-04 16:11:37.413 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-01-04 16:11:36.8606734', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-01-04 16:11:36.8606742', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-01-04 16:11:36.8606743', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-01-04 16:11:36.8606744', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-01-04 16:11:36.8606745', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-01-04 16:11:36.8606751', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-01-04 16:11:36.8606752', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-01-04 16:11:36.8606757', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-01-04 16:11:36.8606758', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-01-04 16:11:36.8606759', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-01-04 16:11:36.860676', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-01-04 16:11:36.8606762', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-01-04 16:11:36.8606763', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-01-04 16:11:37.413 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-01-04 16:11:36.9321739', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-01-04 16:11:36.9321742', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-01-04 16:11:36.9321744', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-01-04 16:11:36.9321745', NULL, 'Description', NULL, 'Авто');
2023-01-04 16:11:37.413 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-01-04 16:11:36.8606149', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-01-04 16:11:36.8606179', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-01-04 16:11:36.860618', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-01-04 16:11:36.8606181', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-01-04 16:11:36.8606183', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-01-04 16:11:36.8606186', NULL, 'Выдан', NULL, 'Выдан');
2023-01-04 16:11:37.413 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-01-04 16:11:36.8606434', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-01-04 16:11:36.8606437', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-01-04 16:11:36.8606441', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-01-04 16:11:36.8606442', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-01-04 16:11:36.8606443', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-01-04 16:11:36.8606446', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-01-04 16:11:36.8606447', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-01-04 16:11:36.8606449', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-01-04 16:11:36.8606451', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-01-04 16:11:36.8606505', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-01-04 16:11:36.8606516', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-01-04 16:11:36.8606517', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-01-04 16:11:37.414 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "Discriminator", "UserId")
VALUES (1, 'CanAddBranch', 'CanAddBranch', 'UserClaim', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "Discriminator", "UserId")
VALUES (2, 'Manager', 'CanOnlyRead', 'UserClaim', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
2023-01-04 16:11:37.414 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '0a1e5c27-0b09-4f60-a9c3-8618791a8672');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '11fafeb4-c7c1-463c-bb1e-55203e68dfdf');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('68373a2b-932e-4fff-a7a9-b31e156d4101', '131d5dd1-6bf1-4f52-be90-00815000fb57');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '221c0048-08c9-4e72-8f5c-ddf4039f9488');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('2c5e174e-3b0e-446f-86af-483d56fd7210', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '34a0eb9b-6797-40f7-a84c-aa31cdd4cdc6');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '3b9d7f21-1d66-4c98-8648-64a68777bccb');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '4ff7819d-8e17-4aa8-a0da-964c2db21591');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '5a6f1681-c582-46f5-905b-4eb2c222dcf5');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '92b7c777-0d3e-4026-844f-20164bb0f97e');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '92db214d-cd73-4fbc-8b34-1dc0709ba0b2');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', '9c57fadd-110a-4b45-aa89-69aa141564c6');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'e0c3bef9-fd70-421e-b07b-055c38b6d77c');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852');
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES ('401bc2e9-3a0b-4281-9685-d6b36fc37d31', 'eb6a85b0-a7fb-4f8e-9bea-03825e6f020f');
2023-01-04 16:11:37.414 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (1, '0.0', NULL, 1, '2023-01-04 16:11:36.8606557', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '30a8f9cc-8d37-4d93-ab2f-774428387e4a');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (2, '0.0', NULL, 1, '2023-01-04 16:11:36.8606564', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', 'cadaa51d-ddb3-4564-a8c5-79e80c98a032');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (3, '0.0', NULL, 1, '2023-01-04 16:11:36.8606568', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '5a6f1681-c582-46f5-905b-4eb2c222dcf5');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (4, '0.0', NULL, 1, '2023-01-04 16:11:36.8606572', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '3b9d7f21-1d66-4c98-8648-64a68777bccb');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (5, '0.0', NULL, 1, '2023-01-04 16:11:36.8606573', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '0a1e5c27-0b09-4f60-a9c3-8618791a8672');
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId")
VALUES (6, '0.0', NULL, 1, '2023-01-04 16:11:36.8606596', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', 'e13b576b-afbe-4b4c-aaad-64fd9bee3852');
2023-01-04 16:11:37.414 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-01-04 16:11:37.414 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-01-04 16:11:37.414 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-01-04 16:11:37.414 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-01-04 16:11:37.415 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-01-04 16:11:37.415 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-01-04 16:11:37.415 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-01-04 16:11:37.415 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId" ON "AccountHistory" ("PayerId");
2023-01-04 16:11:37.415 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-01-04 16:11:37.415 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-01-04 16:11:37.415 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-01-04 16:11:37.415 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-01-04 16:11:37.415 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-01-04 16:11:37.415 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-01-04 16:11:37.416 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-01-04 16:11:37.416 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-01-04 16:11:37.416 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-01-04 16:11:37.416 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-01-04 16:11:37.416 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-01-04 16:11:37.416 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-01-04 16:11:37.416 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-01-04 16:11:37.416 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-01-04 16:11:37.416 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-01-04 16:11:37.416 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-01-04 16:11:37.417 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-01-04 16:11:37.417 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-01-04 16:11:37.417 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-01-04 16:11:37.417 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-01-04 16:11:37.417 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-01-04 16:11:37.417 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-01-04 16:11:37.417 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-01-04 16:11:37.417 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-01-04 16:11:37.417 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-01-04 16:11:37.417 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-01-04 16:11:37.418 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-01-04 16:11:37.418 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-01-04 16:11:37.418 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-01-04 16:11:37.418 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-01-04 16:11:37.418 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId" ON "ParcelOwners" ("RecepientCourierId");
2023-01-04 16:11:37.418 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId" ON "ParcelOwners" ("RecepientId");
2023-01-04 16:11:37.418 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId" ON "ParcelOwners" ("RecepientStaffId");
2023-01-04 16:11:37.418 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId" ON "ParcelOwners" ("SenderCourierId");
2023-01-04 16:11:37.418 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId" ON "ParcelOwners" ("SenderId");
2023-01-04 16:11:37.419 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId" ON "ParcelOwners" ("SenderStaffId");
2023-01-04 16:11:37.419 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-01-04 16:11:37.419 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-01-04 16:11:37.419 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-01-04 16:11:37.419 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-01-04 16:11:37.419 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-01-04 16:11:37.419 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-01-04 16:11:37.419 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-01-04 16:11:37.419 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-01-04 16:11:37.419 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-01-04 16:11:37.420 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-01-04 16:11:37.420 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-01-04 16:11:37.420 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-01-04 16:11:37.420 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-01-04 16:11:37.420 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-01-04 16:11:37.420 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId" ON "UserAccount" ("UserId");
2023-01-04 16:11:37.420 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-01-04 16:11:37.420 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-01-04 16:11:37.420 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-01-04 16:11:37.421 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-01-04 16:11:37.421 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId" ON "UserAccountHistory" ("UserId");
2023-01-04 16:11:37.578 +05:00 [INF] User profile is available. Using 'C:\Users\ashz\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
2023-01-04 16:11:37.691 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-01-04 16:11:37.692 +05:00 [INF] Hosting environment: Development
2023-01-04 16:11:37.692 +05:00 [INF] Content root path: D:\Requests\Blazor\EDSystems.Backend\EDSystems.WebApi
2023-01-04 16:11:37.743 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/index.html - -
2023-01-04 16:11:38.059 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/index.html - - - 200 - text/html;charset=utf-8 316.7594ms
2023-01-04 16:11:38.059 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - -
2023-01-04 16:11:38.070 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_framework/aspnetcore-browser-refresh.js - - - 200 12002 application/javascript;+charset=utf-8 3.8590ms
2023-01-04 16:11:38.081 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/_vs/browserLink - -
2023-01-04 16:11:38.123 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 41.1279ms
2023-01-04 16:11:38.199 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - -
2023-01-04 16:11:38.534 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 334.8859ms
2023-01-04 16:11:44.499 +05:00 [INF] Request starting HTTP/2 GET https://localhost:44389/api/ExchangeRate/GetUsd - -
2023-01-04 16:11:44.544 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.ExchangeRateController.GetUsd (EDSystems.WebApi)'
2023-01-04 16:11:44.555 +05:00 [INF] Route matched with {action = "GetUsd", controller = "ExchangeRate"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult] GetUsd() on controller EDSystems.WebApi.Controllers.ExchangeRateController (EDSystems.WebApi).
2023-01-04 16:11:44.653 +05:00 [INF] Executing action method EDSystems.WebApi.Controllers.ExchangeRateController.GetUsd (EDSystems.WebApi) - Validation state: "Valid"
2023-01-04 16:11:50.546 +05:00 [INF] Executed action method EDSystems.WebApi.Controllers.ExchangeRateController.GetUsd (EDSystems.WebApi), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 5890.587ms.
2023-01-04 16:11:50.551 +05:00 [INF] Executing OkObjectResult, writing value of type 'System.String'.
2023-01-04 16:11:50.555 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.ExchangeRateController.GetUsd (EDSystems.WebApi) in 5998.0109ms
2023-01-04 16:11:50.555 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.ExchangeRateController.GetUsd (EDSystems.WebApi)'
2023-01-04 16:11:50.556 +05:00 [INF] Request finished HTTP/2 GET https://localhost:44389/api/ExchangeRate/GetUsd - - - 200 - text/plain;+charset=utf-8 6057.3036ms
