2023-03-10 09:23:24.620 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 09:23:24.865 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:23:24.867 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:23:24.867 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:23:24.867 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:23:24.867 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:23:24.867 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:23:24.867 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:23:24.867 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:23:24.867 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:23:25.117 +05:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-10 09:23:25.325 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 09:23:25.438 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:23:25.438 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:23:25.438 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:23:25.439 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:23:25.439 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:23:25.439 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:23:25.439 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:23:25.439 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:23:25.439 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:23:25.658 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-10 09:23:25.658 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 09:23:25.658 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 09:23:25.658 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-10 09:23:25.659 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 09:23:25.659 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 09:23:25.659 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" TEXT NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 09:23:25.659 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-10 09:23:25.659 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 09:23:25.659 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 09:23:25.659 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-10 09:23:25.660 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 09:23:25.660 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:23:25.660 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:23:25.660 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:23:25.660 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:23:25.660 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:23:25.661 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:23:25.661 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:23:25.661 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:23:25.661 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-10 09:23:25.661 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-10 09:23:25.661 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-10 09:23:25.662 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:23:25.662 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 09:23:25.662 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 09:23:25.662 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 09:23:25.662 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 09:23:25.662 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:23:25.663 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 09:23:25.663 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-10 09:23:25.663 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '06507e9e-bb9b-4c92-ad95-6efe78adc30f', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, 'a0b2da66-5396-4ee3-97ea-24da00a3a6c3', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '99ae75f5-e64d-418e-898c-aefedb6d35da', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, 'b0423f72-2d67-44ff-aca8-05afe09c0aff', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, 'c5b642ee-508d-45ae-91a0-948d55d8b22d', 'Customer', 'CUSTOMER');
2023-03-10 09:23:25.664 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'd0c28d4a-361d-4394-9710-1a2c3a9c95dc', '2023-03-10 09:23:25.320713', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAELWtBdaaBTiCFCcJ536XhrUPlo3I9RP7mt++T33C3V5Wvs325mF1aqQLpvn+0IoLCA==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '2ccc37e7-7f9a-40bd-b474-3c4526ccedfa', '2023-03-10 09:23:25.320718', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAELWtBdaaBTiCFCcJ536XhrUPlo3I9RP7mt++T33C3V5Wvs325mF1aqQLpvn+0IoLCA==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '497c9666-1e4a-4014-ab74-8dc072f84b2e', '2023-03-10 09:23:25.320719', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAELWtBdaaBTiCFCcJ536XhrUPlo3I9RP7mt++T33C3V5Wvs325mF1aqQLpvn+0IoLCA==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'ef50f8ed-18fa-473a-961d-58733fb1c974', '2023-03-10 09:23:25.320752', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAELWtBdaaBTiCFCcJ536XhrUPlo3I9RP7mt++T33C3V5Wvs325mF1aqQLpvn+0IoLCA==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '6e6f8e77-b48e-4466-a285-99a84ebb66eb', '2023-03-10 09:23:25.320753', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAELWtBdaaBTiCFCcJ536XhrUPlo3I9RP7mt++T33C3V5Wvs325mF1aqQLpvn+0IoLCA==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-10 09:23:25.664 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-10 09:23:25.235067', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-10 09:23:25.235067', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-10 09:23:25.235067', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-10 09:23:25.235067', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-10 09:23:25.235068', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-10 09:23:25.235068', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-10 09:23:25.664 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-10 09:23:25.320809', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-10 09:23:25.320809', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-10 09:23:25.32081', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-10 09:23:25.32081', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-10 09:23:25.32081', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-10 09:23:25.32081', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-10 09:23:25.320812', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-10 09:23:25.320812', NULL, NULL, 'Сомони', 972);
2023-03-10 09:23:25.664 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-10 09:23:25.235084', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-10 09:23:25.235085', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-10 09:23:25.235085', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-10 09:23:25.235085', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-10 09:23:25.235085', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-10 09:23:25.235085', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-10 09:23:25.235086', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-10 09:23:25.235086', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-10 09:23:25.235086', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-10 09:23:25.235086', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-10 09:23:25.235087', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-10 09:23:25.235087', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-10 09:23:25.235087', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-10 09:23:25.664 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-10 09:23:25.320801', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-10 09:23:25.320802', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-10 09:23:25.320802', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-10 09:23:25.320803', NULL, 'Description', NULL, 'Авто');
2023-03-10 09:23:25.665 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-10 09:23:25.235057', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-10 09:23:25.235061', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-10 09:23:25.235061', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-10 09:23:25.235061', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-10 09:23:25.235061', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-10 09:23:25.235061', NULL, 'Выдан', NULL, 'Выдан');
2023-03-10 09:23:25.665 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-10 09:23:25.235075', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-10 09:23:25.235076', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-10 09:23:25.235076', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-10 09:23:25.235076', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-10 09:23:25.235077', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-10 09:23:25.235077', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-10 09:23:25.235077', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-10 09:23:25.235077', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-10 09:23:25.235078', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-10 09:23:25.235078', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-10 09:23:25.235078', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-10 09:23:25.235078', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-10 09:23:25.666 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-10 09:23:25.666 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-10 09:23:25.666 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-10 09:23:25.235081', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-10 09:23:25.235082', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-10 09:23:25.235082', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-10 09:23:25.235082', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-10 09:23:25.235082', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-10 09:23:25.235082', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-10 09:23:25.666 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-10 09:23:25.666 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-10 09:23:25.667 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-10 09:23:25.667 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-10 09:23:25.667 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-10 09:23:25.667 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-10 09:23:25.667 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-10 09:23:25.667 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-10 09:23:25.667 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-10 09:23:25.668 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-10 09:23:25.668 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-10 09:23:25.668 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-10 09:23:25.668 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-10 09:23:25.668 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-10 09:23:25.668 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-10 09:23:25.668 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-10 09:23:25.668 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-10 09:23:25.669 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-10 09:23:25.669 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-10 09:23:25.669 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-10 09:23:25.669 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-10 09:23:25.669 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-10 09:23:25.669 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-10 09:23:25.669 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-10 09:23:25.670 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-10 09:23:25.670 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-10 09:23:25.670 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-10 09:23:25.670 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-10 09:23:25.670 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-10 09:23:25.670 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-10 09:23:25.670 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-10 09:23:25.671 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-10 09:23:25.671 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-10 09:23:25.671 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-10 09:23:25.671 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-10 09:23:25.671 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-10 09:23:25.671 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-10 09:23:25.671 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-10 09:23:25.671 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-10 09:23:25.672 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-10 09:23:25.672 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-10 09:23:25.672 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-10 09:23:25.672 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-10 09:23:25.672 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-10 09:23:25.672 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-10 09:23:25.672 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-10 09:23:25.673 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-10 09:23:25.673 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-10 09:23:25.673 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-10 09:23:25.673 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-10 09:23:25.673 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-10 09:23:25.673 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-10 09:23:25.673 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-10 09:23:25.674 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-10 09:23:25.674 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-10 09:23:25.674 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-10 09:23:25.674 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-10 09:23:25.674 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-10 09:23:25.674 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-10 09:23:25.674 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-10 09:23:25.675 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-10 09:23:25.675 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-10 09:23:25.675 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-10 09:23:25.675 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-10 09:23:25.675 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-10 09:23:25.735 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-10 09:23:26.294 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-10 09:23:26.294 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-10 09:23:26.296 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-10 09:23:26.296 +05:00 [INF] Hosting environment: Development
2023-03-10 09:23:26.296 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-10 09:23:27.825 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-10 09:23:27.987 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 163.1366ms
2023-03-10 09:23:28.231 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-10 09:23:28.621 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 390.0209ms
2023-03-10 09:23:47.664 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-10 09:23:47.737 +05:00 [INF] CORS policy execution successful.
2023-03-10 09:23:47.801 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-10 09:23:47.820 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-10 09:23:48.713 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-10 09:23:48.954 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ClaimType", "a"."ClaimValue", "a"."UserId"
FROM "AspNetUserClaims" AS "a"
WHERE "a"."UserId" = @__user_Id_0
2023-03-10 09:23:48.983 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-10 09:23:48.989 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 13)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-10 09:23:49.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."ClaimType", "a"."ClaimValue"
FROM "AspNetRoleClaims" AS "a"
WHERE "a"."RoleId" = @__role_Id_0
2023-03-10 09:23:49.008 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-10 09:23:49.126 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"KK8ALU2LDBO4ZI39EMJH9FWVBMAC76Q8MU51196df22-26e4-49d4-9915-a4415423e178","JwtId":"e3b0459f-c2e8-4240-ac97-9ac9eb8636a8","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-10T04:23:49.1040820Z","ExpiryDateTime":"2023-09-10T04:23:49.1041330Z","$type":"RefreshTokenCommand"}
2023-03-10 09:23:49.241 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 36), @p5='?' (Size = 71), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-10 09:23:49.300 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-10 09:23:49.325 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1500.9174ms
2023-03-10 09:23:49.325 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-10 09:23:49.333 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 2412 application/json;+charset=utf-8 1668.9630ms
2023-03-10 09:24:05.134 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 09:24:05.209 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:24:05.218 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 09:24:05.259 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 09:24:05.731 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Branch" AS "b"
2023-03-10 09:24:05.742 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Name", "b"."Country", "b"."Code", "b"."City", "b"."Address", "b"."Email", "b"."Phone", "b"."DateCreated", "b"."DateUpdated"
FROM "Branch" AS "b"
ORDER BY "b"."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-10 09:24:05.761 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 09:24:05.766 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 547.8231ms
2023-03-10 09:24:05.767 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:24:05.767 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 200 892 application/json;+charset=utf-8 632.9857ms
2023-03-10 09:24:10.266 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 09:24:10.274 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:24:10.274 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 09:24:10.282 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 09:24:10.308 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 09:24:10.309 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 30.6354ms
2023-03-10 09:24:10.309 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:24:10.309 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 200 903 application/json;+charset=utf-8 43.5648ms
2023-03-10 09:24:13.816 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 09:24:13.817 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:24:13.817 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 09:24:13.818 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 09:24:13.876 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 09:24:13.876 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 59.2118ms
2023-03-10 09:24:13.876 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:24:13.876 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 200 903 application/json;+charset=utf-8 60.2972ms
2023-03-10 09:24:15.258 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 09:24:15.259 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:24:15.259 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 09:24:15.259 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 09:24:15.277 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 09:24:15.277 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 18.228ms
2023-03-10 09:24:15.277 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:24:15.277 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 200 903 application/json;+charset=utf-8 19.0852ms
2023-03-10 09:24:25.077 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=3 - -
2023-03-10 09:24:25.079 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:24:25.079 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 09:24:25.079 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":3,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 09:24:25.084 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 09:24:25.084 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 5.2713ms
2023-03-10 09:24:25.084 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:24:25.084 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=3 - - - 200 903 application/json;+charset=utf-8 7.3980ms
2023-03-10 09:47:29.061 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 09:47:29.332 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:47:29.333 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:47:29.333 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:47:29.334 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:47:29.334 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:47:29.334 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:47:29.334 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:47:29.334 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:47:29.334 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:47:29.595 +05:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-10 09:47:29.835 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 09:47:29.953 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:47:29.953 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:47:29.953 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:47:29.953 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:47:29.953 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:47:29.953 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:47:29.953 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:47:29.953 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:47:29.953 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:47:30.200 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-10 09:47:30.201 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 09:47:30.202 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 09:47:30.202 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-10 09:47:30.202 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 09:47:30.203 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 09:47:30.203 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" TEXT NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 09:47:30.203 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-10 09:47:30.204 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 09:47:30.204 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 09:47:30.204 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-10 09:47:30.204 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 09:47:30.205 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:47:30.205 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:47:30.205 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:47:30.205 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:47:30.205 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:47:30.205 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:47:30.206 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:47:30.206 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:47:30.206 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-10 09:47:30.206 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-10 09:47:30.206 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-10 09:47:30.207 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:47:30.207 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 09:47:30.207 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 09:47:30.207 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 09:47:30.208 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 09:47:30.208 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:47:30.208 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 09:47:30.208 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-10 09:47:30.209 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '26ea5e6d-2cd6-485d-b5d1-25a1108a3ad1', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, 'a8a80a0b-a6ea-487f-8886-c14e003db91a', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, 'cafbc2c1-9948-45eb-99fc-76f650ca7a0e', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '778d5a11-2275-4b0f-b9f6-c3f38571e2d2', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, 'f5a9788e-2e26-4899-81aa-a43f23ff12b5', 'Customer', 'CUSTOMER');
2023-03-10 09:47:30.209 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '59534c96-e96c-4237-a299-4d8f0fa2d8bc', '2023-03-10 09:47:29.830186', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEMVBwMgtdL5jnUVVnlMH6ZqIw0X1r5K3IG/H+HT3SCybXvJjd025UPz3jAZuKAgq5Q==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '452d4ee4-0b7e-4e97-913b-0dd0d1dd0af9', '2023-03-10 09:47:29.830191', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEMVBwMgtdL5jnUVVnlMH6ZqIw0X1r5K3IG/H+HT3SCybXvJjd025UPz3jAZuKAgq5Q==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '837b53ca-8051-4702-83ac-e83512601624', '2023-03-10 09:47:29.830192', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEMVBwMgtdL5jnUVVnlMH6ZqIw0X1r5K3IG/H+HT3SCybXvJjd025UPz3jAZuKAgq5Q==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'c98ac569-b91d-4838-9154-4d7cfce1aa04', '2023-03-10 09:47:29.830208', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEMVBwMgtdL5jnUVVnlMH6ZqIw0X1r5K3IG/H+HT3SCybXvJjd025UPz3jAZuKAgq5Q==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '07c0a0b2-275e-42b9-a3f4-23b89866f4c3', '2023-03-10 09:47:29.830208', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEMVBwMgtdL5jnUVVnlMH6ZqIw0X1r5K3IG/H+HT3SCybXvJjd025UPz3jAZuKAgq5Q==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-10 09:47:30.210 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-10 09:47:29.745543', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-10 09:47:29.745543', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-10 09:47:29.745543', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-10 09:47:29.745544', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-10 09:47:29.745544', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-10 09:47:29.745544', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-10 09:47:30.210 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-10 09:47:29.830339', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-10 09:47:29.830339', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-10 09:47:29.830339', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-10 09:47:29.83034', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-10 09:47:29.83034', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-10 09:47:29.83034', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-10 09:47:29.830342', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-10 09:47:29.830342', NULL, NULL, 'Сомони', 972);
2023-03-10 09:47:30.210 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-10 09:47:29.745563', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-10 09:47:29.745563', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-10 09:47:29.745564', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-10 09:47:29.745564', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-10 09:47:29.745564', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-10 09:47:29.745564', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-10 09:47:29.745564', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-10 09:47:29.745565', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-10 09:47:29.745565', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-10 09:47:29.745565', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-10 09:47:29.745565', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-10 09:47:29.745566', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-10 09:47:29.745566', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-10 09:47:30.210 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-10 09:47:29.830328', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-10 09:47:29.83033', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-10 09:47:29.830331', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-10 09:47:29.830331', NULL, 'Description', NULL, 'Авто');
2023-03-10 09:47:30.210 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-10 09:47:29.745533', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-10 09:47:29.745537', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-10 09:47:29.745537', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-10 09:47:29.745537', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-10 09:47:29.745537', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-10 09:47:29.745537', NULL, 'Выдан', NULL, 'Выдан');
2023-03-10 09:47:30.211 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-10 09:47:29.745548', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-10 09:47:29.745548', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-10 09:47:29.745548', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-10 09:47:29.745548', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-10 09:47:29.745549', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-10 09:47:29.745549', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-10 09:47:29.745549', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-10 09:47:29.745549', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-10 09:47:29.74555', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-10 09:47:29.74555', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-10 09:47:29.745556', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-10 09:47:29.745556', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-10 09:47:30.211 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-10 09:47:30.211 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-10 09:47:30.212 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-10 09:47:29.745559', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-10 09:47:29.745559', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-10 09:47:29.74556', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-10 09:47:29.74556', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-10 09:47:29.74556', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-10 09:47:29.74556', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-10 09:47:30.212 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-10 09:47:30.212 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-10 09:47:30.212 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-10 09:47:30.212 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-10 09:47:30.212 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-10 09:47:30.212 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-10 09:47:30.213 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-10 09:47:30.213 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-10 09:47:30.213 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-10 09:47:30.213 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-10 09:47:30.214 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-10 09:47:30.214 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-10 09:47:30.214 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-10 09:47:30.214 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-10 09:47:30.214 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-10 09:47:30.214 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-10 09:47:30.215 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-10 09:47:30.215 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-10 09:47:30.215 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-10 09:47:30.215 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-10 09:47:30.215 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-10 09:47:30.215 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-10 09:47:30.216 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-10 09:47:30.216 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-10 09:47:30.216 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-10 09:47:30.216 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-10 09:47:30.216 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-10 09:47:30.216 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-10 09:47:30.217 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-10 09:47:30.217 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-10 09:47:30.217 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-10 09:47:30.217 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-10 09:47:30.217 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-10 09:47:30.218 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-10 09:47:30.218 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-10 09:47:30.218 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-10 09:47:30.218 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-10 09:47:30.218 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-10 09:47:30.218 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-10 09:47:30.218 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-10 09:47:30.219 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-10 09:47:30.219 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-10 09:47:30.219 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-10 09:47:30.219 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-10 09:47:30.219 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-10 09:47:30.219 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-10 09:47:30.220 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-10 09:47:30.220 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-10 09:47:30.220 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-10 09:47:30.220 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-10 09:47:30.220 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-10 09:47:30.220 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-10 09:47:30.220 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-10 09:47:30.221 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-10 09:47:30.221 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-10 09:47:30.221 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-10 09:47:30.221 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-10 09:47:30.221 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-10 09:47:30.221 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-10 09:47:30.221 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-10 09:47:30.222 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-10 09:47:30.222 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-10 09:47:30.222 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-10 09:47:30.222 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-10 09:47:30.222 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-10 09:47:30.284 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-10 09:47:30.855 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-10 09:47:30.855 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-10 09:47:30.857 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-10 09:47:30.857 +05:00 [INF] Hosting environment: Development
2023-03-10 09:47:30.857 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-10 09:47:32.384 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-10 09:47:32.539 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 158.0063ms
2023-03-10 09:47:32.654 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-10 09:47:33.081 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 427.2946ms
2023-03-10 09:48:15.957 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 09:48:16.196 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:48:16.197 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:48:16.198 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:48:16.198 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:48:16.198 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:48:16.198 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:48:16.198 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:48:16.198 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:48:16.198 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:48:18.470 +05:00 [INF] Executed DbCommand (212ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
REVOKE CONNECT ON DATABASE newdatabasemine FROM PUBLIC;
SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE datname = 'newdatabasemine';
2023-03-10 09:48:18.853 +05:00 [INF] Executed DbCommand (380ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE newdatabasemine;
2023-03-10 09:48:19.622 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 09:48:19.722 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:48:19.722 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:48:19.722 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:48:19.722 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:48:19.723 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:48:19.723 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:48:19.723 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:48:19.723 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:48:19.723 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 09:48:20.946 +05:00 [INF] Executed DbCommand (649ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE newdatabasemine;
2023-03-10 09:48:22.623 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-03-10 09:48:22.804 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" text NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-03-10 09:48:22.985 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Currency" PRIMARY KEY ("Id")
);
2023-03-10 09:48:23.166 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT "PK_Expenses" PRIMARY KEY ("Id")
);
2023-03-10 09:48:23.350 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ExpenseType" PRIMARY KEY ("Id")
);
2023-03-10 09:48:23.532 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Parcel" PRIMARY KEY ("Id")
);
2023-03-10 09:48:23.716 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Cost" numeric NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Plan" PRIMARY KEY ("Id")
);
2023-03-10 09:48:23.904 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "Token" text NULL,
    "JwtId" text NULL,
    "IsUsed" boolean NOT NULL,
    "IsRevoked" boolean NOT NULL,
    "AddedDateTime" timestamp without time zone NOT NULL,
    "ExpiryDateTime" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_RefreshToken" PRIMARY KEY ("Id")
);
2023-03-10 09:48:24.087 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Status" PRIMARY KEY ("Id")
);
2023-03-10 09:48:24.289 +05:00 [INF] Executed DbCommand (202ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TokenId" text NULL,
    "RefreshToken" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Tokens" PRIMARY KEY ("Id")
);
2023-03-10 09:48:24.469 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-10 09:48:24.651 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric(18,3) NOT NULL,
    "BranchId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Account" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 09:48:24.835 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ToBranchId" integer NOT NULL,
    "FromBranchId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelBranch" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:48:25.017 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StateDeliveryToBranch" boolean NOT NULL,
    "StatePickingUp" boolean NOT NULL,
    "StateDeliveryToPoint" boolean NOT NULL,
    "StateBuyout" boolean NOT NULL,
    "CostPickingUp" numeric(18,3) NOT NULL,
    "CostDeliveryToPoint" numeric(18,3) NOT NULL,
    "CostDeliveryToBranch" numeric(18,3) NOT NULL,
    "CostBuyout" numeric NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelCost" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:48:25.200 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Description" varchar NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelDescription" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:48:25.382 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelImage" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:48:25.567 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" text NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelItem" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:48:25.750 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Cost" numeric(18,3) NOT NULL,
    "CourierId" text NULL,
    "JobType" varchar NULL,
    "ParcelId" integer NOT NULL,
    "PaymentState" boolean NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelJob" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:48:25.941 +05:00 [INF] Executed DbCommand (190ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Weight" numeric(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSize" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:48:26.124 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSound" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:48:26.307 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PlanId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelPlan" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-10 09:48:26.488 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StatusId" integer NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelStatus" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-10 09:48:26.683 +05:00 [INF] Executed DbCommand (195ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NULL,
    "LastName" text NULL,
    "Address" text NULL,
    "UserNameT" text NULL,
    "ChatId" bigint NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "ParcelJobId" integer NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-10 09:48:26.865 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "PayerId" text NULL,
    "PayerId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_AccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:48:27.047 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 09:48:27.229 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 09:48:27.410 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" integer NOT NULL,
    "RoleId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 09:48:27.601 +05:00 [INF] Executed DbCommand (191ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" integer NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 09:48:27.787 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SenderId" text NULL,
    "SenderId1" integer NULL,
    "RecepientId" text NULL,
    "RecepientId1" integer NULL,
    "RecepientStaffId" text NULL,
    "RecepientStaffId1" integer NULL,
    "SenderStaffId" text NULL,
    "SenderStaffId1" integer NULL,
    "RecepientCourierId" text NULL,
    "RecepientCourierId1" integer NULL,
    "SenderCourierId" text NULL,
    "SenderCourierId1" integer NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelOwners" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 09:48:27.969 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccount" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 09:48:28.184 +05:00 [INF] Executed DbCommand (215ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-10 09:48:28.371 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '78dac1a8-b429-4a53-8862-d39c5f06c339', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '1a013969-ea95-4197-b59f-b7e796e0f190', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '99031b1a-199f-4918-93a3-697ff7b60fde', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '979db49a-0ca8-431b-bbb8-cee45e958bc9', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '56412534-79bc-4880-8084-6d387b53a83a', 'Customer', 'CUSTOMER');
2023-03-10 09:48:28.551 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '63b4a957-2e66-4f9b-8247-0e2ceab062d6', TIMESTAMP '2023-03-10 09:48:19.62009', NULL, 'administrator@gmail.com', FALSE, 'EDSystem', 'Administrator', FALSE, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAELMyjAF06LQUq47eHpmaRC6an6M2n3sPadLH0LF/l+d1ywuJ5p02CvvUQjzbSnCRWg==', '998970000675', FALSE, NULL, FALSE, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '427466fa-6d44-4520-b059-02b557f97a6c', TIMESTAMP '2023-03-10 09:48:19.620095', NULL, 'hayrulloh@gmail.com', FALSE, 'EDTashkent', 'Hayrulloh', FALSE, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAELMyjAF06LQUq47eHpmaRC6an6M2n3sPadLH0LF/l+d1ywuJ5p02CvvUQjzbSnCRWg==', '998935788886', FALSE, NULL, FALSE, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'ac9c0ed2-8018-461f-990b-4d684e830ab8', TIMESTAMP '2023-03-10 09:48:19.620096', NULL, 'Nodir@gmail.com', FALSE, 'EDTashkent', 'Nodir', FALSE, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAELMyjAF06LQUq47eHpmaRC6an6M2n3sPadLH0LF/l+d1ywuJ5p02CvvUQjzbSnCRWg==', '998909046605', FALSE, NULL, FALSE, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '1cc580eb-5899-4161-a62a-05cb2faf1007', TIMESTAMP '2023-03-10 09:48:19.620096', NULL, 'Javohir@gmail.com', FALSE, 'EDTashkent', 'Javohir', FALSE, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAELMyjAF06LQUq47eHpmaRC6an6M2n3sPadLH0LF/l+d1ywuJ5p02CvvUQjzbSnCRWg==', '998931710966', FALSE, NULL, FALSE, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '15821884-f220-4dec-889a-64439cccf7de', TIMESTAMP '2023-03-10 09:48:19.620099', NULL, 'Ismoil@gmail.com', FALSE, 'EDTashkent', 'Ismoil', FALSE, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAELMyjAF06LQUq47eHpmaRC6an6M2n3sPadLH0LF/l+d1ywuJ5p02CvvUQjzbSnCRWg==', '998977093262', FALSE, NULL, FALSE, 'ismoil', 'UserName');
2023-03-10 09:48:28.730 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, TIMESTAMP '2023-03-10 09:48:19.544274', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, TIMESTAMP '2023-03-10 09:48:19.544275', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, TIMESTAMP '2023-03-10 09:48:19.544275', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, TIMESTAMP '2023-03-10 09:48:19.544276', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, TIMESTAMP '2023-03-10 09:48:19.544276', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, TIMESTAMP '2023-03-10 09:48:19.544277', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-10 09:48:28.911 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, TIMESTAMP '2023-03-10 09:48:19.620266', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, TIMESTAMP '2023-03-10 09:48:19.620266', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, TIMESTAMP '2023-03-10 09:48:19.620266', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, TIMESTAMP '2023-03-10 09:48:19.620267', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, TIMESTAMP '2023-03-10 09:48:19.620267', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, TIMESTAMP '2023-03-10 09:48:19.620267', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, TIMESTAMP '2023-03-10 09:48:19.620267', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, TIMESTAMP '2023-03-10 09:48:19.620268', NULL, NULL, 'Сомони', 972);
2023-03-10 09:48:29.092 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-10 09:48:19.544299', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-10 09:48:19.544299', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-10 09:48:19.544299', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-10 09:48:19.5443', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-10 09:48:19.5443', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-10 09:48:19.5443', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, TIMESTAMP '2023-03-10 09:48:19.5443', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, TIMESTAMP '2023-03-10 09:48:19.544301', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, TIMESTAMP '2023-03-10 09:48:19.544301', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, TIMESTAMP '2023-03-10 09:48:19.544301', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, TIMESTAMP '2023-03-10 09:48:19.544301', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, TIMESTAMP '2023-03-10 09:48:19.544301', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, TIMESTAMP '2023-03-10 09:48:19.544302', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-10 09:48:29.273 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, 7.0, NULL, TIMESTAMP '2023-03-10 09:48:19.62026', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, 12.0, NULL, TIMESTAMP '2023-03-10 09:48:19.620261', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, 30.0, NULL, TIMESTAMP '2023-03-10 09:48:19.620262', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, 5.0, NULL, TIMESTAMP '2023-03-10 09:48:19.620262', NULL, 'Description', NULL, 'Авто');
2023-03-10 09:48:29.455 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-10 09:48:19.544258', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-10 09:48:19.544263', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-10 09:48:19.544264', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-10 09:48:19.544264', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-10 09:48:19.544265', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-10 09:48:19.544265', NULL, 'Выдан', NULL, 'Выдан');
2023-03-10 09:48:29.673 +05:00 [INF] Executed DbCommand (218ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 0.0, 1, NULL, 1, TIMESTAMP '2023-03-10 09:48:19.544285', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 0.0, 1, NULL, 2, TIMESTAMP '2023-03-10 09:48:19.544286', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 0.0, 2, NULL, 1, TIMESTAMP '2023-03-10 09:48:19.544286', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 0.0, 2, NULL, 2, TIMESTAMP '2023-03-10 09:48:19.544286', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 0.0, 3, NULL, 1, TIMESTAMP '2023-03-10 09:48:19.544287', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 0.0, 3, NULL, 2, TIMESTAMP '2023-03-10 09:48:19.544287', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 0.0, 4, NULL, 1, TIMESTAMP '2023-03-10 09:48:19.544287', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 0.0, 4, NULL, 2, TIMESTAMP '2023-03-10 09:48:19.544287', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, 0.0, 5, NULL, 1, TIMESTAMP '2023-03-10 09:48:19.544288', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, 0.0, 5, NULL, 2, TIMESTAMP '2023-03-10 09:48:19.544288', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, 0.0, 6, NULL, 1, TIMESTAMP '2023-03-10 09:48:19.544288', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, 0.0, 6, NULL, 5, TIMESTAMP '2023-03-10 09:48:19.544288', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-10 09:48:29.853 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-10 09:48:30.032 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-10 09:48:30.211 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, 0.0, NULL, 1, TIMESTAMP '2023-03-10 09:48:19.544293', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, 0.0, NULL, 1, TIMESTAMP '2023-03-10 09:48:19.544293', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, 0.0, NULL, 1, TIMESTAMP '2023-03-10 09:48:19.544295', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, 0.0, NULL, 1, TIMESTAMP '2023-03-10 09:48:19.544296', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, 0.0, NULL, 1, TIMESTAMP '2023-03-10 09:48:19.544296', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, 0.0, NULL, 1, TIMESTAMP '2023-03-10 09:48:19.544296', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-10 09:48:30.394 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-10 09:48:30.572 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-10 09:48:30.754 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-10 09:48:30.934 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-10 09:48:31.116 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-10 09:48:31.297 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-10 09:48:31.481 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-10 09:48:31.665 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-10 09:48:31.847 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-10 09:48:32.026 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-10 09:48:32.205 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-10 09:48:32.383 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-10 09:48:32.561 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-10 09:48:32.739 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-10 09:48:32.925 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-10 09:48:33.109 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-10 09:48:33.288 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-10 09:48:33.468 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-10 09:48:33.655 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-10 09:48:33.840 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-10 09:48:34.018 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-10 09:48:34.198 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-10 09:48:34.377 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-10 09:48:34.563 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-10 09:48:34.752 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-10 09:48:34.929 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-10 09:48:35.108 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-10 09:48:35.289 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-10 09:48:35.469 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-10 09:48:35.648 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-10 09:48:35.825 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-10 09:48:36.004 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-10 09:48:36.183 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-10 09:48:36.362 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-10 09:48:36.628 +05:00 [INF] Executed DbCommand (266ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-10 09:48:36.808 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-10 09:48:36.987 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-10 09:48:37.165 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-10 09:48:37.343 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-10 09:48:37.553 +05:00 [INF] Executed DbCommand (209ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-10 09:48:37.731 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-10 09:48:37.909 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-10 09:48:38.090 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-10 09:48:38.268 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-10 09:48:38.448 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-10 09:48:38.630 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-10 09:48:38.807 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-10 09:48:38.984 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-10 09:48:39.164 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-10 09:48:39.341 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-10 09:48:39.618 +05:00 [INF] Executed DbCommand (277ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-10 09:48:39.807 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-10 09:48:39.987 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-10 09:48:40.165 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-10 09:48:40.343 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-10 09:48:40.538 +05:00 [INF] Executed DbCommand (195ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-10 09:48:40.721 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-10 09:48:40.904 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-10 09:48:41.083 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-10 09:48:41.261 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-10 09:48:41.440 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-10 09:48:41.627 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-10 09:48:41.807 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-10 09:48:41.992 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-10 09:48:42.174 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-10 09:48:42.365 +05:00 [INF] Executed DbCommand (191ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT setval(
    pg_get_serial_sequence('"AspNetRoles"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetRoles") + 1,
        nextval(pg_get_serial_sequence('"AspNetRoles"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUsers"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUsers") + 1,
        nextval(pg_get_serial_sequence('"AspNetUsers"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Branch"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Branch") + 1,
        nextval(pg_get_serial_sequence('"Branch"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Currency"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Currency") + 1,
        nextval(pg_get_serial_sequence('"Currency"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ExpenseType"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ExpenseType") + 1,
        nextval(pg_get_serial_sequence('"ExpenseType"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Plan"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Plan") + 1,
        nextval(pg_get_serial_sequence('"Plan"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Status"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Status") + 1,
        nextval(pg_get_serial_sequence('"Status"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Account"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Account") + 1,
        nextval(pg_get_serial_sequence('"Account"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUserClaims"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUserClaims") + 1,
        nextval(pg_get_serial_sequence('"AspNetUserClaims"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"UserAccount"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "UserAccount") + 1,
        nextval(pg_get_serial_sequence('"UserAccount"', 'Id'))),
    false);
2023-03-10 09:48:42.619 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-10 09:48:43.321 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-10 09:48:43.344 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-10 09:48:43.354 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-10 09:48:43.354 +05:00 [INF] Hosting environment: Development
2023-03-10 09:48:43.354 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-10 09:48:44.663 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-10 09:48:44.799 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 137.5123ms
2023-03-10 09:48:44.908 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-10 09:48:45.276 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 367.8276ms
2023-03-10 09:49:12.741 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-10 09:49:12.853 +05:00 [INF] CORS policy execution successful.
2023-03-10 09:49:12.922 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-10 09:49:12.946 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-10 09:49:14.737 +05:00 [INF] Executed DbCommand (200ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
FROM "AspNetUsers" AS a
WHERE a."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-10 09:49:15.750 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2023-03-10 09:49:17.329 +05:00 [INF] Executed DbCommand (967ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2023-03-10 09:49:18.751 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-10 09:49:19.485 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a."ClaimType", a."ClaimValue"
FROM "AspNetRoleClaims" AS a
WHERE a."RoleId" = @__role_Id_0
2023-03-10 09:49:20.216 +05:00 [INF] Executed DbCommand (195ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2023-03-10 09:49:20.337 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"BAWTK9X5QOYTOTYF25PG71F8QXT9LTJSVBP5d539144-5346-4f99-b8a6-dbc0059f154c","JwtId":"534fd1a5-0185-40c8-9ef1-362f6f656e9d","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-10T04:49:20.3158120Z","ExpiryDateTime":"2023-09-10T04:49:20.3158640Z","$type":"RefreshTokenCommand"}
2023-03-10 09:49:21.190 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-10 09:49:21.256 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-10 09:49:21.281 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 8331.3852ms
2023-03-10 09:49:21.283 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-10 09:49:21.291 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 2412 application/json;+charset=utf-8 8550.1527ms
2023-03-10 09:50:27.242 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Branch application/json-patch+json 174
2023-03-10 09:50:27.251 +05:00 [INF] CORS policy execution successful.
2023-03-10 09:50:27.316 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.Create (EDSystems.WebApi)'
2023-03-10 09:50:27.323 +05:00 [INF] Route matched with {action = "Create", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[System.Guid]] Create(EDSystems.WebApi.Models.Branches.CreateBranchDto) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 09:50:27.373 +05:00 [INF] NotesRequest: CreateBranchCommand {"Name":"Olmazor","Country":"Tojikiston","Code":"879","City":"Darband","Address":"Amir Temur 1 e","Email":"string@gmail.com","Phone":"string213","$type":"CreateBranchCommand"}
2023-03-10 09:50:28.318 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:29.050 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:29.780 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:30.488 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:31.196 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:31.982 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:32.709 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:33.408 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:34.131 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:34.877 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:35.594 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:36.332 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:37.082 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:37.817 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:38.540 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:39.265 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:39.996 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:40.713 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:41.445 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:42.175 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:42.910 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:43.701 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:44.430 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:45.143 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:45.875 +05:00 [INF] Executed DbCommand (190ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:47.335 +05:00 [INF] Executed DbCommand (572ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:48.740 +05:00 [INF] Executed DbCommand (547ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:52.919 +05:00 [INF] Executed DbCommand (2,575ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:54.640 +05:00 [INF] Executed DbCommand (944ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:56.483 +05:00 [INF] Executed DbCommand (309ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:57.639 +05:00 [INF] Executed DbCommand (504ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:58.385 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:59.189 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:50:59.914 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:00.629 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:01.352 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:02.110 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:02.824 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:03.560 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:04.310 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:05.037 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:05.768 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:06.520 +05:00 [INF] Executed DbCommand (203ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:07.242 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:07.990 +05:00 [INF] Executed DbCommand (192ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:08.733 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:09.462 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:10.210 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:10.957 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:11.704 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:12.674 +05:00 [INF] Executed DbCommand (382ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:13.402 +05:00 [INF] Executed DbCommand (194ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:14.156 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:14.963 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:15.738 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:16.479 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:17.241 +05:00 [INF] Executed DbCommand (197ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:17.995 +05:00 [INF] Executed DbCommand (173ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:18.700 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:19.474 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:20.208 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:21.298 +05:00 [INF] Executed DbCommand (173ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:22.113 +05:00 [INF] Executed DbCommand (230ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:22.872 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:23.891 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:24.610 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:25.374 +05:00 [INF] Executed DbCommand (197ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:26.086 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:26.799 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:27.526 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:28.519 +05:00 [INF] Executed DbCommand (454ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:29.285 +05:00 [INF] Executed DbCommand (211ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:30.090 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:30.828 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:31.554 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:32.296 +05:00 [INF] Executed DbCommand (190ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:33.032 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:34.226 +05:00 [INF] Executed DbCommand (644ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:34.952 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:35.942 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:36.662 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:37.398 +05:00 [INF] Executed DbCommand (189ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:38.118 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:38.835 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:39.555 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:40.279 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:41.289 +05:00 [INF] Executed DbCommand (402ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:42.379 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:43.120 +05:00 [INF] Executed DbCommand (199ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:43.836 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:44.595 +05:00 [INF] Executed DbCommand (205ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:45.530 +05:00 [INF] Executed DbCommand (234ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:46.686 +05:00 [INF] Executed DbCommand (611ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:47.471 +05:00 [INF] Executed DbCommand (244ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:48.368 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:49.133 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:49.950 +05:00 [INF] Executed DbCommand (232ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:50.761 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:51.535 +05:00 [INF] Executed DbCommand (191ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:52.524 +05:00 [INF] Executed DbCommand (455ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:53.270 +05:00 [INF] Executed DbCommand (211ms) [Parameters=[@p0='?', @p1='?', @p2='?', @p3='?', @p4='?', @p5='?' (DbType = DateTime), @p6='?' (DbType = DateTime), @p7='?', @p8='?', @p9='?', @p10='?'], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6, @p7, @p8, @p9, @p10)
RETURNING "Id";
2023-03-10 09:51:53.275 +05:00 [INF] Executing OkObjectResult, writing value of type 'System.Int32'.
2023-03-10 09:51:53.276 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.Create (EDSystems.WebApi) in 85986.9423ms
2023-03-10 09:51:53.276 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.Create (EDSystems.WebApi)'
2023-03-10 09:51:53.276 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Branch application/json-patch+json 174 - 200 1 application/json;+charset=utf-8 86067.7674ms
2023-03-10 09:52:04.511 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=80 - -
2023-03-10 09:52:04.516 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:52:04.524 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 09:52:04.551 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":80,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 09:52:07.110 +05:00 [INF] Executed DbCommand (786ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Branch" AS b
2023-03-10 09:52:08.414 +05:00 [INF] Executed DbCommand (191ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Name", b."Country", b."Code", b."City", b."Address", b."Email", b."Phone", b."DateCreated", b."DateUpdated"
FROM "Branch" AS b
ORDER BY b."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-10 09:52:08.436 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 09:52:08.441 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 3917.0607ms
2023-03-10 09:52:08.441 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:52:08.441 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=80 - - - 200 20650 application/json;+charset=utf-8 3930.4179ms
2023-03-10 09:52:47.578 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=80 - -
2023-03-10 09:52:47.586 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:52:47.586 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 09:52:47.588 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":80,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 09:52:47.710 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 09:52:47.711 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 124.7837ms
2023-03-10 09:52:47.711 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:52:47.711 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=80 - - - 200 20659 application/json;+charset=utf-8 132.8122ms
2023-03-10 09:52:49.813 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=80 - -
2023-03-10 09:52:49.814 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:52:49.814 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 09:52:49.816 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":80,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 09:52:49.901 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 09:52:49.902 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 87.7935ms
2023-03-10 09:52:49.902 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:52:49.902 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=80 - - - 200 20659 application/json;+charset=utf-8 88.7704ms
2023-03-10 09:52:51.730 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=80 - -
2023-03-10 09:52:51.732 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:52:51.732 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 09:52:51.732 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":80,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 09:52:51.778 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 09:52:51.779 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 46.8899ms
2023-03-10 09:52:51.779 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:52:51.779 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=80 - - - 200 20659 application/json;+charset=utf-8 49.1312ms
2023-03-10 09:52:54.013 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=80 - -
2023-03-10 09:52:54.013 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:52:54.013 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 09:52:54.014 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":80,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 09:52:54.039 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 09:52:54.039 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 26.0034ms
2023-03-10 09:52:54.039 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 09:52:54.039 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=80 - - - 200 20659 application/json;+charset=utf-8 26.9209ms
2023-03-10 11:52:29.653 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 11:52:29.915 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 11:52:29.916 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 11:52:29.916 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 11:52:29.916 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 11:52:29.916 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 11:52:29.916 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 11:52:29.916 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 11:52:29.916 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 11:52:29.916 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 11:52:33.052 +05:00 [INF] Executed DbCommand (490ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
REVOKE CONNECT ON DATABASE newdatabasemine FROM PUBLIC;
SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE datname = 'newdatabasemine';
2023-03-10 11:52:33.378 +05:00 [INF] Executed DbCommand (324ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE newdatabasemine;
2023-03-10 11:52:34.911 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 11:52:35.014 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 11:52:35.014 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 11:52:35.014 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 11:52:35.014 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 11:52:35.014 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 11:52:35.014 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 11:52:35.014 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 11:52:35.014 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 11:52:35.014 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 11:52:36.459 +05:00 [INF] Executed DbCommand (489ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE newdatabasemine;
2023-03-10 11:52:39.603 +05:00 [INF] Executed DbCommand (278ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-03-10 11:52:39.781 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" text NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-03-10 11:52:39.999 +05:00 [INF] Executed DbCommand (217ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Currency" PRIMARY KEY ("Id")
);
2023-03-10 11:52:40.190 +05:00 [INF] Executed DbCommand (191ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT "PK_Expenses" PRIMARY KEY ("Id")
);
2023-03-10 11:52:40.370 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ExpenseType" PRIMARY KEY ("Id")
);
2023-03-10 11:52:41.053 +05:00 [INF] Executed DbCommand (683ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Parcel" PRIMARY KEY ("Id")
);
2023-03-10 11:52:41.312 +05:00 [INF] Executed DbCommand (258ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Cost" numeric NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Plan" PRIMARY KEY ("Id")
);
2023-03-10 11:52:41.642 +05:00 [INF] Executed DbCommand (329ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "Token" text NULL,
    "JwtId" text NULL,
    "IsUsed" boolean NOT NULL,
    "IsRevoked" boolean NOT NULL,
    "AddedDateTime" timestamp without time zone NOT NULL,
    "ExpiryDateTime" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_RefreshToken" PRIMARY KEY ("Id")
);
2023-03-10 11:52:41.826 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Status" PRIMARY KEY ("Id")
);
2023-03-10 11:52:42.007 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TokenId" text NULL,
    "RefreshToken" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Tokens" PRIMARY KEY ("Id")
);
2023-03-10 11:52:42.750 +05:00 [INF] Executed DbCommand (743ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-10 11:52:42.927 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric(18,3) NOT NULL,
    "BranchId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Account" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 11:52:43.105 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ToBranchId" integer NOT NULL,
    "FromBranchId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelBranch" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 11:52:43.317 +05:00 [INF] Executed DbCommand (212ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StateDeliveryToBranch" boolean NOT NULL,
    "StatePickingUp" boolean NOT NULL,
    "StateDeliveryToPoint" boolean NOT NULL,
    "StateBuyout" boolean NOT NULL,
    "CostPickingUp" numeric(18,3) NOT NULL,
    "CostDeliveryToPoint" numeric(18,3) NOT NULL,
    "CostDeliveryToBranch" numeric(18,3) NOT NULL,
    "CostBuyout" numeric NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelCost" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 11:52:43.500 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Description" varchar NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelDescription" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 11:52:43.678 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelImage" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 11:52:43.875 +05:00 [INF] Executed DbCommand (196ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" text NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelItem" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 11:52:44.054 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Cost" numeric(18,3) NOT NULL,
    "CourierId" text NULL,
    "JobType" varchar NULL,
    "ParcelId" integer NOT NULL,
    "PaymentState" boolean NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelJob" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 11:52:44.234 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Weight" numeric(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSize" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 11:52:44.415 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSound" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 11:52:44.594 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PlanId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelPlan" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-10 11:52:44.780 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StatusId" integer NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelStatus" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-10 11:52:44.960 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NULL,
    "LastName" text NULL,
    "Address" text NULL,
    "UserNameT" text NULL,
    "ChatId" bigint NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "ParcelJobId" integer NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-10 11:52:45.153 +05:00 [INF] Executed DbCommand (193ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "PayerId" text NULL,
    "PayerId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_AccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 11:52:45.334 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 11:52:45.514 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 11:52:45.705 +05:00 [INF] Executed DbCommand (191ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" integer NOT NULL,
    "RoleId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 11:52:45.889 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" integer NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 11:52:46.078 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SenderId" text NULL,
    "SenderId1" integer NULL,
    "RecepientId" text NULL,
    "RecepientId1" integer NULL,
    "RecepientStaffId" text NULL,
    "RecepientStaffId1" integer NULL,
    "SenderStaffId" text NULL,
    "SenderStaffId1" integer NULL,
    "RecepientCourierId" text NULL,
    "RecepientCourierId1" integer NULL,
    "SenderCourierId" text NULL,
    "SenderCourierId1" integer NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelOwners" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 11:52:46.276 +05:00 [INF] Executed DbCommand (198ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccount" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 11:52:46.459 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-10 11:52:46.669 +05:00 [INF] Executed DbCommand (209ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '2e1cc90e-eb84-4090-930d-2961012443dd', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '7eee986d-924d-4f0a-9ac9-e87f004d2242', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, 'd2ca02b1-1c5f-4409-9e68-5594ac4ccf81', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '288e2c70-0475-4c50-9b5a-2a1a3c1cab75', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, 'c6ee99a7-1833-4382-a13c-567b5313f772', 'Customer', 'CUSTOMER');
2023-03-10 11:52:46.847 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'f62d1f08-a66a-4808-a9e8-9f69d3c4c64a', TIMESTAMP '2023-03-10 11:52:34.909789', NULL, 'administrator@gmail.com', FALSE, 'EDSystem', 'Administrator', FALSE, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAELi++KjaAkUDflXlUDK3YuaMjIJh7FkvhCB19zU4tcm2TUryJda53KdIIYLrgJ8clg==', '998970000675', FALSE, NULL, FALSE, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'd47e1a30-8518-4337-afeb-45e4feef118d', TIMESTAMP '2023-03-10 11:52:34.909806', NULL, 'hayrulloh@gmail.com', FALSE, 'EDTashkent', 'Hayrulloh', FALSE, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAELi++KjaAkUDflXlUDK3YuaMjIJh7FkvhCB19zU4tcm2TUryJda53KdIIYLrgJ8clg==', '998935788886', FALSE, NULL, FALSE, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'da150dad-dc8c-49a0-b110-88c63bdbf229', TIMESTAMP '2023-03-10 11:52:34.909807', NULL, 'Nodir@gmail.com', FALSE, 'EDTashkent', 'Nodir', FALSE, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAELi++KjaAkUDflXlUDK3YuaMjIJh7FkvhCB19zU4tcm2TUryJda53KdIIYLrgJ8clg==', '998909046605', FALSE, NULL, FALSE, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '205dfd99-a79f-45d3-93c9-13c9b8e78059', TIMESTAMP '2023-03-10 11:52:34.909808', NULL, 'Javohir@gmail.com', FALSE, 'EDTashkent', 'Javohir', FALSE, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAELi++KjaAkUDflXlUDK3YuaMjIJh7FkvhCB19zU4tcm2TUryJda53KdIIYLrgJ8clg==', '998931710966', FALSE, NULL, FALSE, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '1ded6b7d-8bea-4720-a6e7-dbe61fdd8fd5', TIMESTAMP '2023-03-10 11:52:34.909808', NULL, 'Ismoil@gmail.com', FALSE, 'EDTashkent', 'Ismoil', FALSE, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAELi++KjaAkUDflXlUDK3YuaMjIJh7FkvhCB19zU4tcm2TUryJda53KdIIYLrgJ8clg==', '998977093262', FALSE, NULL, FALSE, 'ismoil', 'UserName');
2023-03-10 11:52:47.026 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, TIMESTAMP '2023-03-10 11:52:34.827773', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, TIMESTAMP '2023-03-10 11:52:34.827774', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, TIMESTAMP '2023-03-10 11:52:34.827774', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, TIMESTAMP '2023-03-10 11:52:34.827774', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, TIMESTAMP '2023-03-10 11:52:34.827775', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, TIMESTAMP '2023-03-10 11:52:34.827775', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-10 11:52:47.725 +05:00 [INF] Executed DbCommand (699ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, TIMESTAMP '2023-03-10 11:52:34.909837', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, TIMESTAMP '2023-03-10 11:52:34.909837', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, TIMESTAMP '2023-03-10 11:52:34.909837', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, TIMESTAMP '2023-03-10 11:52:34.909838', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, TIMESTAMP '2023-03-10 11:52:34.909838', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, TIMESTAMP '2023-03-10 11:52:34.909838', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, TIMESTAMP '2023-03-10 11:52:34.909838', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, TIMESTAMP '2023-03-10 11:52:34.909839', NULL, NULL, 'Сомони', 972);
2023-03-10 11:52:47.909 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-10 11:52:34.827799', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-10 11:52:34.827799', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-10 11:52:34.827799', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-10 11:52:34.827799', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-10 11:52:34.8278', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-10 11:52:34.8278', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, TIMESTAMP '2023-03-10 11:52:34.8278', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, TIMESTAMP '2023-03-10 11:52:34.8278', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, TIMESTAMP '2023-03-10 11:52:34.8278', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, TIMESTAMP '2023-03-10 11:52:34.827801', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, TIMESTAMP '2023-03-10 11:52:34.827801', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, TIMESTAMP '2023-03-10 11:52:34.827801', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, TIMESTAMP '2023-03-10 11:52:34.827801', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-10 11:52:48.088 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, 7.0, NULL, TIMESTAMP '2023-03-10 11:52:34.909833', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, 12.0, NULL, TIMESTAMP '2023-03-10 11:52:34.909833', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, 30.0, NULL, TIMESTAMP '2023-03-10 11:52:34.909834', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, 5.0, NULL, TIMESTAMP '2023-03-10 11:52:34.909834', NULL, 'Description', NULL, 'Авто');
2023-03-10 11:52:48.267 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-10 11:52:34.827761', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-10 11:52:34.827765', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-10 11:52:34.827766', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-10 11:52:34.827766', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-10 11:52:34.827766', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-10 11:52:34.827766', NULL, 'Выдан', NULL, 'Выдан');
2023-03-10 11:52:48.448 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 0.0, 1, NULL, 1, TIMESTAMP '2023-03-10 11:52:34.827779', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 0.0, 1, NULL, 2, TIMESTAMP '2023-03-10 11:52:34.827784', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 0.0, 2, NULL, 1, TIMESTAMP '2023-03-10 11:52:34.827784', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 0.0, 2, NULL, 2, TIMESTAMP '2023-03-10 11:52:34.827785', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 0.0, 3, NULL, 1, TIMESTAMP '2023-03-10 11:52:34.827785', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 0.0, 3, NULL, 2, TIMESTAMP '2023-03-10 11:52:34.827786', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 0.0, 4, NULL, 1, TIMESTAMP '2023-03-10 11:52:34.827786', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 0.0, 4, NULL, 2, TIMESTAMP '2023-03-10 11:52:34.827786', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, 0.0, 5, NULL, 1, TIMESTAMP '2023-03-10 11:52:34.827786', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, 0.0, 5, NULL, 2, TIMESTAMP '2023-03-10 11:52:34.827786', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, 0.0, 6, NULL, 1, TIMESTAMP '2023-03-10 11:52:34.827787', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, 0.0, 6, NULL, 5, TIMESTAMP '2023-03-10 11:52:34.827787', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-10 11:52:48.632 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-10 11:52:48.811 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-10 11:52:49.031 +05:00 [INF] Executed DbCommand (220ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, 0.0, NULL, 1, TIMESTAMP '2023-03-10 11:52:34.827791', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, 0.0, NULL, 1, TIMESTAMP '2023-03-10 11:52:34.827792', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, 0.0, NULL, 1, TIMESTAMP '2023-03-10 11:52:34.827794', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, 0.0, NULL, 1, TIMESTAMP '2023-03-10 11:52:34.827795', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, 0.0, NULL, 1, TIMESTAMP '2023-03-10 11:52:34.827795', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, 0.0, NULL, 1, TIMESTAMP '2023-03-10 11:52:34.827796', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-10 11:52:49.219 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-10 11:52:49.397 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-10 11:52:49.607 +05:00 [INF] Executed DbCommand (210ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-10 11:52:49.790 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-10 11:52:49.967 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-10 11:52:50.151 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-10 11:52:50.335 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-10 11:52:50.527 +05:00 [INF] Executed DbCommand (192ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-10 11:52:50.720 +05:00 [INF] Executed DbCommand (193ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-10 11:52:50.897 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-10 11:52:51.106 +05:00 [INF] Executed DbCommand (209ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-10 11:52:51.284 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-10 11:52:51.464 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-10 11:52:51.646 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-10 11:52:51.823 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-10 11:52:52.056 +05:00 [INF] Executed DbCommand (233ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-10 11:52:52.239 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-10 11:52:52.421 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-10 11:52:52.599 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-10 11:52:52.803 +05:00 [INF] Executed DbCommand (203ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-10 11:52:52.981 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-10 11:52:53.171 +05:00 [INF] Executed DbCommand (190ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-10 11:52:53.351 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-10 11:52:53.533 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-10 11:52:53.715 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-10 11:52:53.894 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-10 11:52:54.084 +05:00 [INF] Executed DbCommand (189ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-10 11:52:54.263 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-10 11:52:54.446 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-10 11:52:54.624 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-10 11:52:54.804 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-10 11:52:54.995 +05:00 [INF] Executed DbCommand (191ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-10 11:52:55.176 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-10 11:52:55.360 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-10 11:52:55.537 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-10 11:52:55.712 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-10 11:52:55.895 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-10 11:52:56.078 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-10 11:52:56.255 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-10 11:52:56.436 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-10 11:52:56.615 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-10 11:52:56.817 +05:00 [INF] Executed DbCommand (202ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-10 11:52:56.999 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-10 11:52:57.179 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-10 11:52:57.402 +05:00 [INF] Executed DbCommand (222ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-10 11:52:57.578 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-10 11:52:57.762 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-10 11:52:57.943 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-10 11:52:58.123 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-10 11:52:58.309 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-10 11:52:58.485 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-10 11:52:58.667 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-10 11:52:58.845 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-10 11:52:59.026 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-10 11:52:59.213 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-10 11:52:59.397 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-10 11:52:59.573 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-10 11:52:59.750 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-10 11:52:59.939 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-10 11:53:00.121 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-10 11:53:00.298 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-10 11:53:00.892 +05:00 [INF] Executed DbCommand (594ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-10 11:53:01.069 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-10 11:53:01.250 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-10 11:53:01.430 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-10 11:53:01.664 +05:00 [INF] Executed DbCommand (233ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT setval(
    pg_get_serial_sequence('"AspNetRoles"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetRoles") + 1,
        nextval(pg_get_serial_sequence('"AspNetRoles"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUsers"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUsers") + 1,
        nextval(pg_get_serial_sequence('"AspNetUsers"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Branch"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Branch") + 1,
        nextval(pg_get_serial_sequence('"Branch"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Currency"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Currency") + 1,
        nextval(pg_get_serial_sequence('"Currency"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ExpenseType"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ExpenseType") + 1,
        nextval(pg_get_serial_sequence('"ExpenseType"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Plan"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Plan") + 1,
        nextval(pg_get_serial_sequence('"Plan"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Status"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Status") + 1,
        nextval(pg_get_serial_sequence('"Status"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Account"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Account") + 1,
        nextval(pg_get_serial_sequence('"Account"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUserClaims"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUserClaims") + 1,
        nextval(pg_get_serial_sequence('"AspNetUserClaims"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"UserAccount"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "UserAccount") + 1,
        nextval(pg_get_serial_sequence('"UserAccount"', 'Id'))),
    false);
2023-03-10 11:53:01.916 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-10 11:53:02.455 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-10 11:53:02.455 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-10 11:53:02.458 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-10 11:53:02.458 +05:00 [INF] Hosting environment: Development
2023-03-10 11:53:02.458 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-10 11:53:03.648 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-10 11:53:03.793 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 147.1906ms
2023-03-10 11:53:03.904 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-10 11:53:04.287 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 382.4839ms
2023-03-10 11:54:03.366 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-10 11:54:03.454 +05:00 [INF] CORS policy execution successful.
2023-03-10 11:54:03.522 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-10 11:54:03.542 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-10 11:54:05.575 +05:00 [INF] Executed DbCommand (207ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
FROM "AspNetUsers" AS a
WHERE a."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-10 11:54:08.602 +05:00 [INF] Executed DbCommand (1,457ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2023-03-10 11:54:13.081 +05:00 [INF] Executed DbCommand (201ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2023-03-10 11:54:14.323 +05:00 [INF] Executed DbCommand (446ms) [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-10 11:54:15.732 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a."ClaimType", a."ClaimValue"
FROM "AspNetRoleClaims" AS a
WHERE a."RoleId" = @__role_Id_0
2023-03-10 11:54:16.503 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2023-03-10 11:54:16.636 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"SASAICV086CBYH9XA4OYHIWBA3AM1VWL36U8768b7df-c4af-429c-9d34-1370b7517ae2","JwtId":"8680c974-fe8b-472a-8082-2c4e0d6070f5","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-10T06:54:16.6160840Z","ExpiryDateTime":"2023-09-10T06:54:16.6161420Z","$type":"RefreshTokenCommand"}
2023-03-10 11:54:17.516 +05:00 [INF] Executed DbCommand (196ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-10 11:54:17.588 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-10 11:54:17.616 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 14069.8613ms
2023-03-10 11:54:17.616 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-10 11:54:17.623 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 2412 application/json;+charset=utf-8 14256.7733ms
2023-03-10 11:54:34.090 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 11:54:34.173 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 11:54:34.182 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 11:54:34.223 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 11:54:36.634 +05:00 [INF] Executed DbCommand (243ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Branch" AS b
2023-03-10 11:54:38.277 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Name", b."Country", b."Code", b."City", b."Address", b."Email", b."Phone", b."DateCreated", b."DateUpdated"
FROM "Branch" AS b
ORDER BY b."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-10 11:54:38.298 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 11:54:38.302 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 4119.9839ms
2023-03-10 11:54:38.302 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 11:54:38.303 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 200 892 application/json;+charset=utf-8 4212.1236ms
2023-03-10 11:55:01.866 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 11:55:01.874 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 11:55:01.874 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 11:55:01.878 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 11:55:02.826 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Branch" AS b
2023-03-10 11:55:03.825 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Name", b."Country", b."Code", b."City", b."Address", b."Email", b."Phone", b."DateCreated", b."DateUpdated"
FROM "Branch" AS b
ORDER BY b."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-10 11:55:03.828 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 11:55:03.828 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 1953.7349ms
2023-03-10 11:55:03.828 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 11:55:03.828 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 200 892 application/json;+charset=utf-8 1964.8987ms
2023-03-10 11:55:06.738 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 11:55:06.739 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 11:55:06.739 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 11:55:06.740 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 11:55:07.521 +05:00 [INF] Executed DbCommand (193ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Branch" AS b
2023-03-10 11:55:08.284 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Name", b."Country", b."Code", b."City", b."Address", b."Email", b."Phone", b."DateCreated", b."DateUpdated"
FROM "Branch" AS b
ORDER BY b."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-10 11:55:08.285 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 11:55:08.285 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 1546.382ms
2023-03-10 11:55:08.285 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 11:55:08.285 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 200 892 application/json;+charset=utf-8 1547.5356ms
2023-03-10 11:55:18.118 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=3 - -
2023-03-10 11:55:18.118 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 11:55:18.118 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 11:55:18.119 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":3,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 11:55:18.962 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Branch" AS b
2023-03-10 11:55:19.683 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Name", b."Country", b."Code", b."City", b."Address", b."Email", b."Phone", b."DateCreated", b."DateUpdated"
FROM "Branch" AS b
ORDER BY b."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-10 11:55:19.684 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 11:55:19.685 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 1566.6634ms
2023-03-10 11:55:19.685 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 11:55:19.686 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=3 - - - 200 1183 application/json;+charset=utf-8 1568.0956ms
2023-03-10 11:55:28.487 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=3 - -
2023-03-10 11:55:28.489 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 11:55:28.489 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 11:55:28.489 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":3,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 11:55:29.251 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "Branch" AS b
2023-03-10 11:55:30.078 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT b."Id", b."Name", b."Country", b."Code", b."City", b."Address", b."Email", b."Phone", b."DateCreated", b."DateUpdated"
FROM "Branch" AS b
ORDER BY b."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-10 11:55:30.079 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 11:55:30.079 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 1590.1893ms
2023-03-10 11:55:30.079 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 11:55:30.079 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=3 - - - 200 1183 application/json;+charset=utf-8 1592.4250ms
2023-03-10 12:04:04.348 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 12:04:04.605 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:04:04.607 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:04:04.607 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:04:04.607 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:04:04.607 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:04:04.607 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:04:04.607 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:04:04.607 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:04:04.607 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:04:04.924 +05:00 [FTL] An error occured while app initialization
Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:5432
 ---> System.Net.Sockets.SocketException (61): Connection refused
   at Npgsql.Internal.NpgsqlConnector.Connect(NpgsqlTimeout timeout)
   at Npgsql.Internal.NpgsqlConnector.Connect(NpgsqlTimeout timeout)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|215_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.UnpooledDataSource.Get(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|45_0(Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.Open()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenDbConnection(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternal(Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open(Boolean errorsExpected)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.Exists(Boolean async, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.Exists(Boolean async, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.Exists()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Program.cs:line 59
2023-03-10 12:04:04.998 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-10 12:04:05.487 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-10 12:04:05.488 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-10 12:04:05.490 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-10 12:04:05.490 +05:00 [INF] Hosting environment: Development
2023-03-10 12:04:05.490 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-10 12:04:06.777 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-10 12:04:06.914 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 139.1191ms
2023-03-10 12:04:07.021 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-10 12:04:07.404 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 383.7410ms
2023-03-10 12:08:23.959 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-10 12:08:24.011 +05:00 [INF] CORS policy execution successful.
2023-03-10 12:08:24.074 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-10 12:08:24.097 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-10 12:08:25.049 +05:00 [ERR] An error occurred using the connection to database 'edsystemsdatabase' on server ''.
2023-03-10 12:08:25.059 +05:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EDSystems.Persistence.EDSystemsDbContext'.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure.
 ---> Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:5432
 ---> System.Net.Sockets.SocketException (61): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|281_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|215_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|28_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|45_0(Boolean async, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure.
 ---> Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:5432
 ---> System.Net.Sockets.SocketException (61): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|281_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|215_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|28_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|45_0(Boolean async, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2023-03-10 12:08:25.201 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1099.9151ms
2023-03-10 12:08:25.203 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-10 12:08:25.207 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: An exception has been raised that is likely due to a transient failure.
 ---> Npgsql.NpgsqlException (0x80004005): Failed to connect to 127.0.0.1:5432
 ---> System.Net.Sockets.SocketException (61): Connection refused
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)
   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource.GetResult(Int16 token)
   at System.Net.Sockets.Socket.<ConnectAsync>g__WaitForConnectWithCancellation|281_0(AwaitableSocketAsyncEventArgs saea, ValueTask connectTask, CancellationToken cancellationToken)
   at Npgsql.TaskTimeoutAndCancellation.ExecuteAsync(Func`2 getTaskFunc, NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.ConnectAsync(NpgsqlTimeout timeout, CancellationToken cancellationToken)
   at Npgsql.Internal.NpgsqlConnector.RawOpen(SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.<Open>g__OpenCore|215_1(NpgsqlConnector conn, SslMode sslMode, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken, Boolean isFirstAttempt)
   at Npgsql.Internal.NpgsqlConnector.Open(NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.OpenNewConnector(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.PoolingDataSource.<Get>g__RentAsync|28_0(NpgsqlConnection conn, NpgsqlTimeout timeout, Boolean async, CancellationToken cancellationToken)
   at Npgsql.NpgsqlConnection.<Open>g__OpenAsync|45_0(Boolean async, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   --- End of inner exception stack trace ---
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(String email)
   at EDSystems.WebApi.Controllers.AuthenticationController.Login(UserLoginDto request) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/AuthenticationController.cs:line 120
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-10 12:08:25.227 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 500 - text/plain;+charset=utf-8 1267.6356ms
2023-03-10 12:08:54.807 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 12:08:55.055 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:08:55.056 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:08:55.056 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:08:55.056 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:08:55.056 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:08:55.056 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:08:55.056 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:08:55.056 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:08:55.056 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:08:55.268 +05:00 [FTL] An error occured while app initialization
System.ArgumentException: Couldn't set data source (Parameter 'data source')
 ---> System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at Npgsql.NpgsqlConnectionStringBuilder.GeneratedSetter(String keyword, Object value)
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   --- End of inner exception stack trace ---
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnectionStringBuilder..ctor(String connectionString)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.Exists(Boolean async, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlDatabaseCreator.Exists()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/DbInitializer.cs:line 7
   at Program.<Main>$(String[] args) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Program.cs:line 59
2023-03-10 12:08:55.338 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-10 12:08:55.862 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-10 12:08:55.862 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-10 12:08:55.864 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-10 12:08:55.864 +05:00 [INF] Hosting environment: Development
2023-03-10 12:08:55.864 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-10 12:08:57.162 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-10 12:08:57.301 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 139.9699ms
2023-03-10 12:08:57.408 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-10 12:08:57.806 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 397.1702ms
2023-03-10 12:09:40.984 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-10 12:09:41.097 +05:00 [INF] CORS policy execution successful.
2023-03-10 12:09:41.159 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-10 12:09:41.182 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-10 12:09:42.111 +05:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EDSystems.Persistence.EDSystemsDbContext'.
System.ArgumentException: Couldn't set data source (Parameter 'data source')
 ---> System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at Npgsql.NpgsqlConnectionStringBuilder.GeneratedSetter(String keyword, Object value)
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   --- End of inner exception stack trace ---
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnectionStringBuilder..ctor(String connectionString)
   at Npgsql.NpgsqlConnection.SetupDataSource()
   at Npgsql.NpgsqlConnection.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnection..ctor(String connectionString)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
System.ArgumentException: Couldn't set data source (Parameter 'data source')
 ---> System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at Npgsql.NpgsqlConnectionStringBuilder.GeneratedSetter(String keyword, Object value)
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   --- End of inner exception stack trace ---
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnectionStringBuilder..ctor(String connectionString)
   at Npgsql.NpgsqlConnection.SetupDataSource()
   at Npgsql.NpgsqlConnection.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnection..ctor(String connectionString)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2023-03-10 12:09:42.218 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1032.6895ms
2023-03-10 12:09:42.220 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-10 12:09:42.221 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.ArgumentException: Couldn't set data source (Parameter 'data source')
 ---> System.Collections.Generic.KeyNotFoundException: The given key was not present in the dictionary.
   at Npgsql.NpgsqlConnectionStringBuilder.GeneratedSetter(String keyword, Object value)
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   --- End of inner exception stack trace ---
   at Npgsql.NpgsqlConnectionStringBuilder.set_Item(String keyword, Object value)
   at System.Data.Common.DbConnectionStringBuilder.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnectionStringBuilder..ctor(String connectionString)
   at Npgsql.NpgsqlConnection.SetupDataSource()
   at Npgsql.NpgsqlConnection.set_ConnectionString(String value)
   at Npgsql.NpgsqlConnection..ctor(String connectionString)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlRelationalConnection.CreateDbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.get_DbConnection()
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.CreateDbCommand(RelationalCommandParameterObject parameterObject, Guid commandId, DbCommandMethod commandMethod)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Npgsql.EntityFrameworkCore.PostgreSQL.Storage.Internal.NpgsqlExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Identity.UserManager`1.FindByEmailAsync(String email)
   at EDSystems.WebApi.Controllers.AuthenticationController.Login(UserLoginDto request) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/AuthenticationController.cs:line 120
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-10 12:09:42.235 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 500 - text/plain;+charset=utf-8 1250.5144ms
2023-03-10 12:10:34.292 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 12:10:34.527 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:10:34.529 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:10:34.529 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:10:34.529 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:10:34.529 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:10:34.529 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:10:34.529 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:10:34.529 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:10:34.529 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:10:34.771 +05:00 [INF] Executed DbCommand (12ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-10 12:10:34.971 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 12:10:35.074 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:10:35.074 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:10:35.074 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:10:35.074 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:10:35.074 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:10:35.074 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:10:35.074 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:10:35.074 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:10:35.074 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 12:10:35.281 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-10 12:10:35.281 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 12:10:35.282 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 12:10:35.282 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-10 12:10:35.282 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 12:10:35.282 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 12:10:35.282 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" TEXT NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 12:10:35.283 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-10 12:10:35.283 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 12:10:35.283 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 12:10:35.283 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-10 12:10:35.283 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 12:10:35.283 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 12:10:35.284 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 12:10:35.284 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 12:10:35.284 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 12:10:35.284 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 12:10:35.285 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 12:10:35.285 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 12:10:35.285 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 12:10:35.285 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-10 12:10:35.285 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-10 12:10:35.286 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-10 12:10:35.286 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 12:10:35.286 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 12:10:35.286 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 12:10:35.286 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 12:10:35.286 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 12:10:35.287 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 12:10:35.287 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 12:10:35.287 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-10 12:10:35.288 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, 'c047a6ba-2f4b-47c8-8b57-eba9d9ebbcf3', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '91da4654-8df6-4935-b898-0cf42cb28302', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '0009cb98-2329-4a8d-b8fb-ea09d2ec032c', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, 'ed440cc7-95c8-4afb-be6d-e56c1d23ab9a', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, 'b121f034-0087-455e-b99f-a5cb2a50e054', 'Customer', 'CUSTOMER');
2023-03-10 12:10:35.288 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '9d29c992-e983-4dbc-90d8-dc6152b68e7f', '2023-03-10 12:10:34.967458', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEGiu1GPOfWZmXFq8wZsiAs7Zlx1xyDPcuZ+dJLXTR4Hta3+Ix4QkQJUygbVQOmMNlA==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '9a3caa7e-53b7-4f27-9d6f-50979508ff34', '2023-03-10 12:10:34.967462', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEGiu1GPOfWZmXFq8wZsiAs7Zlx1xyDPcuZ+dJLXTR4Hta3+Ix4QkQJUygbVQOmMNlA==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'a9a223df-6e64-47aa-8246-911e279d5a43', '2023-03-10 12:10:34.967463', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEGiu1GPOfWZmXFq8wZsiAs7Zlx1xyDPcuZ+dJLXTR4Hta3+Ix4QkQJUygbVQOmMNlA==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '3ed7b761-d6f8-4eef-9288-e0ea07a050c2', '2023-03-10 12:10:34.967475', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEGiu1GPOfWZmXFq8wZsiAs7Zlx1xyDPcuZ+dJLXTR4Hta3+Ix4QkQJUygbVQOmMNlA==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '55432454-7abb-4655-93d5-fb10acb673e1', '2023-03-10 12:10:34.967476', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEGiu1GPOfWZmXFq8wZsiAs7Zlx1xyDPcuZ+dJLXTR4Hta3+Ix4QkQJUygbVQOmMNlA==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-10 12:10:35.288 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-10 12:10:34.890456', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-10 12:10:34.890457', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-10 12:10:34.890457', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-10 12:10:34.890458', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-10 12:10:34.890458', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-10 12:10:34.890458', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-10 12:10:35.288 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-10 12:10:34.96752', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-10 12:10:34.96752', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-10 12:10:34.96752', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-10 12:10:34.967521', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-10 12:10:34.967521', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-10 12:10:34.967521', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-10 12:10:34.967522', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-10 12:10:34.967523', NULL, NULL, 'Сомони', 972);
2023-03-10 12:10:35.289 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-10 12:10:34.890476', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-10 12:10:34.890477', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-10 12:10:34.890477', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-10 12:10:34.890477', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-10 12:10:34.890477', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-10 12:10:34.890478', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-10 12:10:34.890478', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-10 12:10:34.890478', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-10 12:10:34.890478', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-10 12:10:34.890478', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-10 12:10:34.890479', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-10 12:10:34.890479', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-10 12:10:34.890479', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-10 12:10:35.289 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-10 12:10:34.967512', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-10 12:10:34.967514', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-10 12:10:34.967514', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-10 12:10:34.967514', NULL, 'Description', NULL, 'Авто');
2023-03-10 12:10:35.289 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-10 12:10:34.890447', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-10 12:10:34.89045', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-10 12:10:34.890451', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-10 12:10:34.890451', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-10 12:10:34.890451', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-10 12:10:34.890451', NULL, 'Выдан', NULL, 'Выдан');
2023-03-10 12:10:35.289 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-10 12:10:34.890461', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-10 12:10:34.890462', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-10 12:10:34.890462', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-10 12:10:34.890462', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-10 12:10:34.890462', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-10 12:10:34.890468', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-10 12:10:34.890468', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-10 12:10:34.890468', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-10 12:10:34.890468', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-10 12:10:34.890469', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-10 12:10:34.890469', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-10 12:10:34.890469', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-10 12:10:35.290 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-10 12:10:35.290 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-10 12:10:35.290 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-10 12:10:34.890472', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-10 12:10:34.890473', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-10 12:10:34.890473', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-10 12:10:34.890474', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-10 12:10:34.890474', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-10 12:10:34.890474', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-10 12:10:35.290 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-10 12:10:35.290 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-10 12:10:35.291 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-10 12:10:35.291 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-10 12:10:35.291 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-10 12:10:35.291 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-10 12:10:35.291 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-10 12:10:35.291 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-10 12:10:35.291 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-10 12:10:35.292 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-10 12:10:35.292 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-10 12:10:35.292 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-10 12:10:35.292 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-10 12:10:35.292 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-10 12:10:35.292 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-10 12:10:35.292 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-10 12:10:35.293 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-10 12:10:35.293 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-10 12:10:35.293 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-10 12:10:35.293 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-10 12:10:35.293 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-10 12:10:35.293 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-10 12:10:35.293 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-10 12:10:35.294 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-10 12:10:35.294 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-10 12:10:35.294 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-10 12:10:35.294 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-10 12:10:35.294 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-10 12:10:35.294 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-10 12:10:35.294 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-10 12:10:35.295 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-10 12:10:35.295 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-10 12:10:35.295 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-10 12:10:35.295 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-10 12:10:35.295 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-10 12:10:35.295 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-10 12:10:35.295 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-10 12:10:35.295 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-10 12:10:35.296 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-10 12:10:35.296 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-10 12:10:35.296 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-10 12:10:35.296 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-10 12:10:35.296 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-10 12:10:35.296 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-10 12:10:35.296 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-10 12:10:35.297 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-10 12:10:35.297 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-10 12:10:35.297 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-10 12:10:35.297 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-10 12:10:35.297 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-10 12:10:35.297 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-10 12:10:35.297 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-10 12:10:35.297 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-10 12:10:35.298 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-10 12:10:35.298 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-10 12:10:35.298 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-10 12:10:35.298 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-10 12:10:35.298 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-10 12:10:35.298 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-10 12:10:35.298 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-10 12:10:35.299 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-10 12:10:35.299 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-10 12:10:35.299 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-10 12:10:35.299 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-10 12:10:35.299 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-10 12:10:35.353 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-10 12:10:35.893 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-10 12:10:35.893 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-10 12:10:35.895 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-10 12:10:35.895 +05:00 [INF] Hosting environment: Development
2023-03-10 12:10:35.895 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-10 12:10:37.053 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-10 12:10:37.209 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 157.6451ms
2023-03-10 12:10:37.316 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-10 12:10:37.698 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 381.9632ms
2023-03-10 12:11:10.353 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-10 12:11:10.436 +05:00 [INF] CORS policy execution successful.
2023-03-10 12:11:10.506 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-10 12:11:10.534 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-10 12:11:11.427 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-10 12:11:11.677 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ClaimType", "a"."ClaimValue", "a"."UserId"
FROM "AspNetUserClaims" AS "a"
WHERE "a"."UserId" = @__user_Id_0
2023-03-10 12:11:11.709 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-10 12:11:11.715 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 13)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-10 12:11:11.732 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."ClaimType", "a"."ClaimValue"
FROM "AspNetRoleClaims" AS "a"
WHERE "a"."RoleId" = @__role_Id_0
2023-03-10 12:11:11.735 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-10 12:11:11.850 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"3FAZWCRE3VTU7F991W2QHZE24I5DYDAW5V493db907b-ad9b-4fb4-920b-c9bc0e46c118","JwtId":"8f23a733-8a98-44db-9ff7-5c0117eaa501","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-10T07:11:11.8297450Z","ExpiryDateTime":"2023-09-10T07:11:11.8297970Z","$type":"RefreshTokenCommand"}
2023-03-10 12:11:11.978 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 36), @p5='?' (Size = 71), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-10 12:11:12.043 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-10 12:11:12.074 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1533.5531ms
2023-03-10 12:11:12.076 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-10 12:11:12.081 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 2412 application/json;+charset=utf-8 1727.7250ms
2023-03-10 12:11:27.346 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 12:11:27.430 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 12:11:27.438 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 12:11:27.483 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 12:11:27.936 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Branch" AS "b"
2023-03-10 12:11:27.946 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Name", "b"."Country", "b"."Code", "b"."City", "b"."Address", "b"."Email", "b"."Phone", "b"."DateCreated", "b"."DateUpdated"
FROM "Branch" AS "b"
ORDER BY "b"."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-10 12:11:27.965 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 12:11:27.970 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 531.4325ms
2023-03-10 12:11:27.970 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 12:11:27.970 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 200 892 application/json;+charset=utf-8 623.8703ms
2023-03-10 12:11:30.285 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 12:11:30.291 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 12:11:30.291 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 12:11:30.293 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 12:11:30.332 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Branch" AS "b"
2023-03-10 12:11:30.332 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Name", "b"."Country", "b"."Code", "b"."City", "b"."Address", "b"."Email", "b"."Phone", "b"."DateCreated", "b"."DateUpdated"
FROM "Branch" AS "b"
ORDER BY "b"."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-10 12:11:30.334 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 12:11:30.334 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 42.9661ms
2023-03-10 12:11:30.334 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 12:11:30.334 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 200 892 application/json;+charset=utf-8 49.2531ms
2023-03-10 12:11:32.914 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 12:11:32.915 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 12:11:32.915 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 12:11:32.916 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 12:11:32.944 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Branch" AS "b"
2023-03-10 12:11:32.944 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Name", "b"."Country", "b"."Code", "b"."City", "b"."Address", "b"."Email", "b"."Phone", "b"."DateCreated", "b"."DateUpdated"
FROM "Branch" AS "b"
ORDER BY "b"."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-10 12:11:32.945 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 12:11:32.945 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 30.5202ms
2023-03-10 12:11:32.945 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 12:11:32.946 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 200 892 application/json;+charset=utf-8 31.5947ms
2023-03-10 12:11:37.499 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=3 - -
2023-03-10 12:11:37.500 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 12:11:37.500 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 12:11:37.500 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":3,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 12:11:37.551 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Branch" AS "b"
2023-03-10 12:11:37.551 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Name", "b"."Country", "b"."Code", "b"."City", "b"."Address", "b"."Email", "b"."Phone", "b"."DateCreated", "b"."DateUpdated"
FROM "Branch" AS "b"
ORDER BY "b"."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-10 12:11:37.552 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 12:11:37.552 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 52.155ms
2023-03-10 12:11:37.552 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 12:11:37.552 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=3 - - - 200 1183 application/json;+charset=utf-8 53.5961ms
2023-03-10 12:11:41.116 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=3 - -
2023-03-10 12:11:41.118 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 12:11:41.118 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 12:11:41.119 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":3,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 12:11:41.172 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Branch" AS "b"
2023-03-10 12:11:41.172 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Name", "b"."Country", "b"."Code", "b"."City", "b"."Address", "b"."Email", "b"."Phone", "b"."DateCreated", "b"."DateUpdated"
FROM "Branch" AS "b"
ORDER BY "b"."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-10 12:11:41.173 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 12:11:41.174 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 55.4465ms
2023-03-10 12:11:41.174 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 12:11:41.174 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=3 - - - 200 1183 application/json;+charset=utf-8 57.6970ms
2023-03-10 12:11:47.401 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 12:11:47.402 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 12:11:47.402 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 12:11:47.402 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 12:11:47.428 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT COUNT(*)
FROM "Branch" AS "b"
2023-03-10 12:11:47.428 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Name", "b"."Country", "b"."Code", "b"."City", "b"."Address", "b"."Email", "b"."Phone", "b"."DateCreated", "b"."DateUpdated"
FROM "Branch" AS "b"
ORDER BY "b"."Id"
LIMIT @__p_1 OFFSET @__p_0
2023-03-10 12:11:47.429 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-10 12:11:47.429 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 27.6375ms
2023-03-10 12:11:47.429 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 12:11:47.430 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 200 892 application/json;+charset=utf-8 28.8122ms
2023-03-10 14:08:11.368 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 14:08:11.625 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:08:11.627 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:08:11.627 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:08:11.627 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:08:11.627 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:08:11.627 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:08:11.627 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:08:11.627 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:08:11.627 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:08:11.882 +05:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-10 14:08:12.085 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 14:08:12.253 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:08:12.253 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:08:12.253 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:08:12.253 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:08:12.253 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:08:12.254 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:08:12.254 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:08:12.254 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:08:12.254 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:08:12.472 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-10 14:08:12.473 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:08:12.473 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:08:12.473 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-10 14:08:12.473 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:08:12.473 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:08:12.473 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" TEXT NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:08:12.473 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-10 14:08:12.474 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:08:12.474 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:08:12.474 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-10 14:08:12.474 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 14:08:12.474 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:08:12.474 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:08:12.475 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:08:12.475 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:08:12.475 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:08:12.475 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:08:12.475 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:08:12.475 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:08:12.475 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-10 14:08:12.476 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-10 14:08:12.476 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-10 14:08:12.476 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:08:12.476 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:08:12.476 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:08:12.476 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:08:12.477 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:08:12.477 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:08:12.477 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 14:08:12.477 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-10 14:08:12.478 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, 'a9fb2010-f3f5-44f6-9f4a-889a08233add', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, 'dd10cd31-a9b0-4cd6-b482-fecf2689a625', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, 'f10d63f8-0a6d-4226-8f8f-f25bd7b51e9d', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, 'e293f496-53f0-4854-96ce-cbecc1d4e684', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '70515c65-fe34-4fc0-b4f7-76da030f571b', 'Customer', 'CUSTOMER');
2023-03-10 14:08:12.478 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '3b0520a5-186d-4571-9ce1-9c27b2165782', '2023-03-10 14:08:12.083676', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEGgKgNMvsv03DvntSzM5X0MWW4U/Buv8gI2ZGj4BMdE5F6nj1X6cQ2gyGFMVlUJk9w==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'b74ec23e-9b60-4dfd-8bc5-7dbd9c3b4b0b', '2023-03-10 14:08:12.083681', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEGgKgNMvsv03DvntSzM5X0MWW4U/Buv8gI2ZGj4BMdE5F6nj1X6cQ2gyGFMVlUJk9w==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '09bc14ef-1db7-46bd-915c-55cbcc95b68c', '2023-03-10 14:08:12.083682', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEGgKgNMvsv03DvntSzM5X0MWW4U/Buv8gI2ZGj4BMdE5F6nj1X6cQ2gyGFMVlUJk9w==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '17158ab4-5658-46c7-abd4-1bda141e6591', '2023-03-10 14:08:12.083684', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEGgKgNMvsv03DvntSzM5X0MWW4U/Buv8gI2ZGj4BMdE5F6nj1X6cQ2gyGFMVlUJk9w==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '889ec47b-b1bb-48f3-8fa9-29e0e826d5ff', '2023-03-10 14:08:12.083685', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEGgKgNMvsv03DvntSzM5X0MWW4U/Buv8gI2ZGj4BMdE5F6nj1X6cQ2gyGFMVlUJk9w==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-10 14:08:12.478 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-10 14:08:12.002374', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-10 14:08:12.002374', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-10 14:08:12.002374', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-10 14:08:12.002374', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-10 14:08:12.002375', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-10 14:08:12.002375', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-10 14:08:12.479 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-10 14:08:12.083733', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-10 14:08:12.083733', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-10 14:08:12.083734', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-10 14:08:12.083734', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-10 14:08:12.083734', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-10 14:08:12.083734', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-10 14:08:12.083735', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-10 14:08:12.083735', NULL, NULL, 'Сомони', 972);
2023-03-10 14:08:12.479 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-10 14:08:12.002392', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-10 14:08:12.002393', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-10 14:08:12.002393', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-10 14:08:12.002393', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-10 14:08:12.002393', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-10 14:08:12.002393', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-10 14:08:12.002394', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-10 14:08:12.002394', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-10 14:08:12.002394', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-10 14:08:12.002394', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-10 14:08:12.002394', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-10 14:08:12.002395', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-10 14:08:12.002395', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-10 14:08:12.479 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-10 14:08:12.083728', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-10 14:08:12.083728', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-10 14:08:12.083729', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-10 14:08:12.083729', NULL, 'Description', NULL, 'Авто');
2023-03-10 14:08:12.480 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-10 14:08:12.002364', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-10 14:08:12.002368', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-10 14:08:12.002368', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-10 14:08:12.002368', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-10 14:08:12.002369', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-10 14:08:12.002369', NULL, 'Выдан', NULL, 'Выдан');
2023-03-10 14:08:12.480 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-10 14:08:12.002378', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-10 14:08:12.002379', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-10 14:08:12.002379', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-10 14:08:12.002379', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-10 14:08:12.00238', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-10 14:08:12.00238', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-10 14:08:12.00238', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-10 14:08:12.00238', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-10 14:08:12.00238', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-10 14:08:12.002381', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-10 14:08:12.002381', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-10 14:08:12.002381', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-10 14:08:12.480 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-10 14:08:12.482 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-10 14:08:12.483 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-10 14:08:12.002384', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-10 14:08:12.002384', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-10 14:08:12.002389', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-10 14:08:12.002389', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-10 14:08:12.002389', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-10 14:08:12.00239', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-10 14:08:12.483 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-10 14:08:12.483 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-10 14:08:12.483 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-10 14:08:12.483 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-10 14:08:12.483 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-10 14:08:12.483 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-10 14:08:12.484 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-10 14:08:12.484 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-10 14:08:12.484 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-10 14:08:12.484 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-10 14:08:12.484 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-10 14:08:12.484 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-10 14:08:12.484 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-10 14:08:12.485 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-10 14:08:12.485 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-10 14:08:12.485 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-10 14:08:12.485 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-10 14:08:12.485 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-10 14:08:12.485 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-10 14:08:12.485 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-10 14:08:12.486 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-10 14:08:12.486 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-10 14:08:12.486 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-10 14:08:12.486 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-10 14:08:12.486 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-10 14:08:12.486 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-10 14:08:12.486 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-10 14:08:12.486 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-10 14:08:12.487 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-10 14:08:12.487 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-10 14:08:12.487 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-10 14:08:12.487 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-10 14:08:12.487 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-10 14:08:12.487 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-10 14:08:12.487 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-10 14:08:12.487 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-10 14:08:12.488 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-10 14:08:12.488 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-10 14:08:12.488 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-10 14:08:12.488 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-10 14:08:12.488 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-10 14:08:12.488 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-10 14:08:12.489 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-10 14:08:12.489 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-10 14:08:12.489 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-10 14:08:12.489 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-10 14:08:12.489 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-10 14:08:12.489 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-10 14:08:12.489 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-10 14:08:12.490 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-10 14:08:12.490 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-10 14:08:12.490 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-10 14:08:12.490 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-10 14:08:12.490 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-10 14:08:12.490 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-10 14:08:12.490 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-10 14:08:12.491 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-10 14:08:12.491 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-10 14:08:12.491 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-10 14:08:12.491 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-10 14:08:12.491 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-10 14:08:12.491 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-10 14:08:12.492 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-10 14:08:12.492 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-10 14:08:12.492 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-10 14:08:12.548 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-10 14:08:13.809 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-10 14:08:13.809 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-10 14:08:13.811 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-10 14:08:13.811 +05:00 [INF] Hosting environment: Development
2023-03-10 14:08:13.811 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-10 14:08:15.239 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger - -
2023-03-10 14:08:15.306 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger - - - 301 0 - 68.1754ms
2023-03-10 14:08:15.309 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-10 14:08:15.394 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 85.1695ms
2023-03-10 14:08:15.412 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/swagger-ui.css - -
2023-03-10 14:08:15.412 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/swagger-ui-bundle.js - -
2023-03-10 14:08:15.452 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/swagger-ui-standalone-preset.js - -
2023-03-10 14:08:15.460 +05:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-03-10 14:08:15.462 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/swagger-ui.css - - - 200 144929 text/css 49.9092ms
2023-03-10 14:08:15.594 +05:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2023-03-10 14:08:15.617 +05:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-03-10 14:08:15.619 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/swagger-ui-bundle.js - - - 200 1061536 text/javascript 206.7894ms
2023-03-10 14:08:15.619 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/swagger-ui-standalone-preset.js - - - 200 312163 text/javascript 166.4856ms
2023-03-10 14:08:15.771 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-10 14:08:16.198 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 426.7101ms
2023-03-10 14:16:31.511 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 14:16:31.831 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:16:31.832 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:16:31.832 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:16:31.832 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:16:31.832 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:16:31.832 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:16:31.832 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:16:31.832 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:16:31.832 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:16:32.130 +05:00 [INF] Executed DbCommand (18ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-10 14:16:32.393 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 14:16:32.526 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:16:32.526 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:16:32.526 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:16:32.526 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:16:32.526 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:16:32.526 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:16:32.526 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:16:32.526 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:16:32.526 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:16:32.868 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-10 14:16:32.868 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:16:32.868 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:16:32.869 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-10 14:16:32.869 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:16:32.869 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:16:32.869 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" TEXT NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:16:32.869 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-10 14:16:32.870 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:16:32.870 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:16:32.870 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-10 14:16:32.871 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 14:16:32.871 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:16:32.871 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:16:32.871 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:16:32.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:16:32.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:16:32.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:16:32.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:16:32.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:16:32.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-10 14:16:32.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-10 14:16:32.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-10 14:16:32.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:16:32.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:16:32.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:16:32.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:16:32.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:16:32.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:16:32.875 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 14:16:32.875 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-10 14:16:32.876 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, 'c44ca791-e5db-460a-a57c-cdc0e4b64c63', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '6d6f4bbb-6367-4abc-bfa9-c9458973ab5d', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '14a3798d-77cb-4226-b7c0-1025223c846f', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '25817525-ae69-4a00-a38d-7d82595742e9', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '41e1d664-ab92-4890-befe-7f748894ac23', 'Customer', 'CUSTOMER');
2023-03-10 14:16:32.876 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '1e9f497d-707b-4b7d-93b1-7b8dcd84e61a', '2023-03-10 14:16:32.39127', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEMweT3fO8N60JCmCl3x2E5G4CpOI5A6WXRX5raWDCMtVVflhVditmgDn9pCshfbQ3g==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '04476e62-8cd2-45ac-8f40-89d659bdb415', '2023-03-10 14:16:32.391275', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEMweT3fO8N60JCmCl3x2E5G4CpOI5A6WXRX5raWDCMtVVflhVditmgDn9pCshfbQ3g==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'b69663a6-f1e1-4b28-aada-535f2404a2da', '2023-03-10 14:16:32.391276', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEMweT3fO8N60JCmCl3x2E5G4CpOI5A6WXRX5raWDCMtVVflhVditmgDn9pCshfbQ3g==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'ec553eaf-9a35-4578-b336-c444100a45d3', '2023-03-10 14:16:32.391279', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEMweT3fO8N60JCmCl3x2E5G4CpOI5A6WXRX5raWDCMtVVflhVditmgDn9pCshfbQ3g==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'a128d2ef-7384-432c-9b0a-c0f1bb7c7f15', '2023-03-10 14:16:32.39128', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEMweT3fO8N60JCmCl3x2E5G4CpOI5A6WXRX5raWDCMtVVflhVditmgDn9pCshfbQ3g==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-10 14:16:32.876 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-10 14:16:32.306035', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-10 14:16:32.306036', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-10 14:16:32.306036', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-10 14:16:32.306036', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-10 14:16:32.306036', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-10 14:16:32.306037', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-10 14:16:32.876 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-10 14:16:32.39134', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-10 14:16:32.39134', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-10 14:16:32.39134', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-10 14:16:32.39134', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-10 14:16:32.391341', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-10 14:16:32.391341', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-10 14:16:32.391341', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-10 14:16:32.391341', NULL, NULL, 'Сомони', 972);
2023-03-10 14:16:32.877 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-10 14:16:32.306064', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-10 14:16:32.306065', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-10 14:16:32.306065', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-10 14:16:32.306065', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-10 14:16:32.306065', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-10 14:16:32.306065', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-10 14:16:32.306066', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-10 14:16:32.306066', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-10 14:16:32.306066', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-10 14:16:32.306066', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-10 14:16:32.306067', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-10 14:16:32.306067', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-10 14:16:32.306067', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-10 14:16:32.877 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-10 14:16:32.391332', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-10 14:16:32.391333', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-10 14:16:32.391334', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-10 14:16:32.391334', NULL, 'Description', NULL, 'Авто');
2023-03-10 14:16:32.877 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-10 14:16:32.306016', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-10 14:16:32.306025', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-10 14:16:32.306026', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-10 14:16:32.306026', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-10 14:16:32.306026', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-10 14:16:32.306026', NULL, 'Выдан', NULL, 'Выдан');
2023-03-10 14:16:32.877 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-10 14:16:32.306041', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-10 14:16:32.306042', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-10 14:16:32.306043', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-10 14:16:32.306044', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-10 14:16:32.306044', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-10 14:16:32.306045', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-10 14:16:32.306045', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-10 14:16:32.306045', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-10 14:16:32.306046', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-10 14:16:32.306046', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-10 14:16:32.306046', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-10 14:16:32.306046', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-10 14:16:32.878 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-10 14:16:32.878 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-10 14:16:32.878 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-10 14:16:32.30605', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-10 14:16:32.306051', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-10 14:16:32.306051', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-10 14:16:32.306051', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-10 14:16:32.306051', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-10 14:16:32.306053', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-10 14:16:32.878 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-10 14:16:32.879 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-10 14:16:32.879 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-10 14:16:32.879 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-10 14:16:32.879 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-10 14:16:32.879 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-10 14:16:32.879 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-10 14:16:32.880 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-10 14:16:32.880 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-10 14:16:32.880 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-10 14:16:32.880 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-10 14:16:32.881 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-10 14:16:32.881 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-10 14:16:32.881 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-10 14:16:32.881 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-10 14:16:32.881 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-10 14:16:32.881 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-10 14:16:32.882 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-10 14:16:32.882 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-10 14:16:32.882 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-10 14:16:32.882 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-10 14:16:32.882 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-10 14:16:32.882 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-10 14:16:32.882 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-10 14:16:32.882 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-10 14:16:32.883 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-10 14:16:32.883 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-10 14:16:32.883 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-10 14:16:32.883 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-10 14:16:32.883 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-10 14:16:32.883 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-10 14:16:32.883 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-10 14:16:32.884 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-10 14:16:32.884 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-10 14:16:32.884 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-10 14:16:32.884 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-10 14:16:32.884 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-10 14:16:32.884 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-10 14:16:32.884 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-10 14:16:32.885 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-10 14:16:32.885 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-10 14:16:32.885 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-10 14:16:32.885 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-10 14:16:32.885 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-10 14:16:32.885 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-10 14:16:32.886 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-10 14:16:32.886 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-10 14:16:32.886 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-10 14:16:32.886 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-10 14:16:32.886 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-10 14:16:32.886 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-10 14:16:32.886 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-10 14:16:32.887 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-10 14:16:32.887 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-10 14:16:32.887 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-10 14:16:32.887 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-10 14:16:32.887 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-10 14:16:32.887 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-10 14:16:32.887 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-10 14:16:32.888 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-10 14:16:32.888 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-10 14:16:32.888 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-10 14:16:32.888 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-10 14:16:32.888 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-10 14:16:32.888 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-10 14:16:32.956 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-10 14:16:33.636 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-10 14:16:33.636 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-10 14:16:33.639 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-10 14:16:33.661 +05:00 [INF] Hosting environment: Development
2023-03-10 14:16:33.661 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-10 14:16:34.822 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-10 14:16:34.983 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 163.6982ms
2023-03-10 14:16:35.211 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-10 14:16:35.626 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 415.8250ms
2023-03-10 14:17:49.442 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-10 14:17:49.488 +05:00 [INF] CORS policy execution successful.
2023-03-10 14:17:49.549 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-10 14:17:49.579 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-10 14:17:50.546 +05:00 [INF] Executed DbCommand (6ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-10 14:17:50.800 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ClaimType", "a"."ClaimValue", "a"."UserId"
FROM "AspNetUserClaims" AS "a"
WHERE "a"."UserId" = @__user_Id_0
2023-03-10 14:17:50.833 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-10 14:17:50.839 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 13)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-10 14:17:50.856 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."ClaimType", "a"."ClaimValue"
FROM "AspNetRoleClaims" AS "a"
WHERE "a"."RoleId" = @__role_Id_0
2023-03-10 14:17:50.859 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-10 14:17:50.979 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"XZ82BBAGTQ87ZLO9PJVCSDATFC3FGDTH8SJa73008c0-0894-444e-92e4-03f353a5b402","JwtId":"c48e714b-4bd6-4955-b8d0-3b9ab125f951","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-10T09:17:50.9574650Z","ExpiryDateTime":"2023-09-10T09:17:50.9575190Z","$type":"RefreshTokenCommand"}
2023-03-10 14:17:51.115 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 36), @p5='?' (Size = 71), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-10 14:17:51.176 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-10 14:17:51.202 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1619.3263ms
2023-03-10 14:17:51.203 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-10 14:17:51.208 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 2412 application/json;+charset=utf-8 1767.6241ms
2023-03-10 14:19:20.397 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 14:19:20.488 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 14:19:20.499 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 14:19:20.552 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 14:19:31.090 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 10591.2597ms
2023-03-10 14:19:31.091 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 14:19:31.092 +05:00 [ERR] An unhandled exception has occurred while executing the request.
StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter log, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 708
   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 673
   at StackExchange.Redis.ConnectionMultiplexer.Connect(String configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 651
   at EDSystems.Persistence.Services.CacheService..ctor() in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/Services/CacheService.cs:line 20
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.ConstructorInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at MediatR.Wrappers.RequestHandlerWrapperImpl`2.<>c__DisplayClass1_0.<Handle>g__Handler|0()
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination(Int32 PageNumber, Int32 PageSize) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/BranchController.cs:line 92
   at lambda_method898(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-10 14:19:32.208 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 500 - text/plain;+charset=utf-8 11810.5773ms
2023-03-10 14:39:34.429 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 14:39:34.437 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 14:39:34.437 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 14:39:34.439 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 14:39:49.723 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 15286.362ms
2023-03-10 14:39:49.724 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 14:39:49.724 +05:00 [ERR] An unhandled exception has occurred while executing the request.
StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter log, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 708
   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 673
   at StackExchange.Redis.ConnectionMultiplexer.Connect(String configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 651
   at EDSystems.Persistence.Services.CacheService..ctor() in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/Services/CacheService.cs:line 20
   at InvokeStub_CacheService..ctor(Object, Object, IntPtr*)
   at System.Reflection.ConstructorInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at MediatR.Wrappers.RequestHandlerWrapperImpl`2.<>c__DisplayClass1_0.<Handle>g__Handler|0()
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination(Int32 PageNumber, Int32 PageSize) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/BranchController.cs:line 92
   at lambda_method898(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-10 14:39:49.726 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 500 - text/plain;+charset=utf-8 15297.1339ms
2023-03-10 14:44:21.910 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 14:44:22.162 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:44:22.164 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:44:22.164 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:44:22.164 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:44:22.164 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:44:22.164 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:44:22.164 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:44:22.164 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:44:22.170 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:44:22.432 +05:00 [INF] Executed DbCommand (10ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-10 14:44:22.642 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 14:44:22.760 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:44:22.760 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:44:22.760 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:44:22.760 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:44:22.760 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:44:22.760 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:44:22.760 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:44:22.760 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:44:22.760 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:44:23.020 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-10 14:44:23.020 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:44:23.020 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:44:23.020 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-10 14:44:23.021 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:44:23.021 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:44:23.021 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" TEXT NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:44:23.021 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-10 14:44:23.021 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:44:23.021 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:44:23.021 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-10 14:44:23.022 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 14:44:23.022 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:44:23.022 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:44:23.022 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:44:23.022 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:44:23.022 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:44:23.023 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:44:23.023 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:44:23.023 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:44:23.023 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-10 14:44:23.023 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-10 14:44:23.023 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-10 14:44:23.024 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:44:23.024 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:44:23.024 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:44:23.024 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:44:23.024 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:44:23.025 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:44:23.025 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 14:44:23.025 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-10 14:44:23.026 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '9abafb46-4d0d-41e9-a365-aa8a8184d162', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, 'cd6c96e4-d889-45a3-a049-8c04e8a62f0e', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '20395629-8b2e-483c-a85d-5623f305d95c', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, 'b2c3d46b-7daa-46ec-9839-ee453fdf613b', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, 'b96fc493-a16f-46d7-aafc-920611c65933', 'Customer', 'CUSTOMER');
2023-03-10 14:44:23.026 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'd10f3e72-ccaa-4a52-8ac8-75159fd2a6a5', '2023-03-10 14:44:22.632453', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEOprKzxV3l/Zzpc5cdGM7L7T+dNZi6pJaq3Xyvt7oH1z05iFEPjwwDSH/psVakAiAg==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '581b04a4-eda0-4966-ad6c-e4eb9a32015e', '2023-03-10 14:44:22.632459', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEOprKzxV3l/Zzpc5cdGM7L7T+dNZi6pJaq3Xyvt7oH1z05iFEPjwwDSH/psVakAiAg==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '64235b40-544f-4d0d-a5af-f644f0ca1bb9', '2023-03-10 14:44:22.63246', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEOprKzxV3l/Zzpc5cdGM7L7T+dNZi6pJaq3Xyvt7oH1z05iFEPjwwDSH/psVakAiAg==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'df1a8f39-f75e-45fe-b75c-a72deba9d7de', '2023-03-10 14:44:22.638655', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEOprKzxV3l/Zzpc5cdGM7L7T+dNZi6pJaq3Xyvt7oH1z05iFEPjwwDSH/psVakAiAg==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'b690aa3b-9368-4a28-83bb-7782cee68152', '2023-03-10 14:44:22.638663', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEOprKzxV3l/Zzpc5cdGM7L7T+dNZi6pJaq3Xyvt7oH1z05iFEPjwwDSH/psVakAiAg==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-10 14:44:23.026 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-10 14:44:22.551823', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-10 14:44:22.551824', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-10 14:44:22.551824', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-10 14:44:22.551824', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-10 14:44:22.551824', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-10 14:44:22.551825', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-10 14:44:23.027 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-10 14:44:22.638899', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-10 14:44:22.638899', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-10 14:44:22.638899', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-10 14:44:22.6389', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-10 14:44:22.6389', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-10 14:44:22.6389', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-10 14:44:22.6389', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-10 14:44:22.638901', NULL, NULL, 'Сомони', 972);
2023-03-10 14:44:23.027 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-10 14:44:22.551837', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-10 14:44:22.551837', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-10 14:44:22.551837', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-10 14:44:22.551838', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-10 14:44:22.551838', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-10 14:44:22.551838', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-10 14:44:22.551842', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-10 14:44:22.551843', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-10 14:44:22.551843', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-10 14:44:22.551843', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-10 14:44:22.551843', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-10 14:44:22.551844', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-10 14:44:22.551844', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-10 14:44:23.027 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-10 14:44:22.63889', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-10 14:44:22.638891', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-10 14:44:22.638892', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-10 14:44:22.638892', NULL, 'Description', NULL, 'Авто');
2023-03-10 14:44:23.027 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-10 14:44:22.551814', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-10 14:44:22.551817', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-10 14:44:22.551818', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-10 14:44:22.551818', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-10 14:44:22.551818', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-10 14:44:22.551818', NULL, 'Выдан', NULL, 'Выдан');
2023-03-10 14:44:23.028 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-10 14:44:22.551827', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-10 14:44:22.551828', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-10 14:44:22.551828', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-10 14:44:22.551828', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-10 14:44:22.551829', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-10 14:44:22.551829', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-10 14:44:22.551829', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-10 14:44:22.55183', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-10 14:44:22.55183', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-10 14:44:22.55183', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-10 14:44:22.55183', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-10 14:44:22.551831', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-10 14:44:23.028 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-10 14:44:23.028 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-10 14:44:23.029 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-10 14:44:22.551833', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-10 14:44:22.551834', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-10 14:44:22.551834', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-10 14:44:22.551834', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-10 14:44:22.551834', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-10 14:44:22.551835', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-10 14:44:23.029 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-10 14:44:23.029 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-10 14:44:23.029 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-10 14:44:23.029 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-10 14:44:23.030 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-10 14:44:23.030 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-10 14:44:23.030 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-10 14:44:23.030 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-10 14:44:23.030 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-10 14:44:23.030 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-10 14:44:23.030 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-10 14:44:23.031 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-10 14:44:23.031 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-10 14:44:23.031 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-10 14:44:23.031 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-10 14:44:23.031 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-10 14:44:23.032 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-10 14:44:23.032 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-10 14:44:23.032 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-10 14:44:23.032 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-10 14:44:23.032 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-10 14:44:23.032 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-10 14:44:23.033 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-10 14:44:23.033 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-10 14:44:23.033 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-10 14:44:23.033 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-10 14:44:23.033 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-10 14:44:23.033 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-10 14:44:23.033 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-10 14:44:23.033 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-10 14:44:23.034 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-10 14:44:23.034 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-10 14:44:23.034 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-10 14:44:23.034 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-10 14:44:23.034 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-10 14:44:23.034 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-10 14:44:23.034 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-10 14:44:23.034 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-10 14:44:23.035 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-10 14:44:23.035 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-10 14:44:23.035 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-10 14:44:23.035 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-10 14:44:23.035 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-10 14:44:23.035 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-10 14:44:23.035 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-10 14:44:23.036 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-10 14:44:23.036 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-10 14:44:23.036 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-10 14:44:23.036 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-10 14:44:23.036 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-10 14:44:23.036 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-10 14:44:23.036 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-10 14:44:23.036 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-10 14:44:23.037 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-10 14:44:23.037 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-10 14:44:23.037 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-10 14:44:23.037 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-10 14:44:23.037 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-10 14:44:23.037 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-10 14:44:23.037 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-10 14:44:23.038 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-10 14:44:23.038 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-10 14:44:23.038 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-10 14:44:23.038 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-10 14:44:23.038 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-10 14:44:23.094 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-10 14:44:23.676 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-10 14:44:23.677 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-10 14:44:23.678 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-10 14:44:23.678 +05:00 [INF] Hosting environment: Development
2023-03-10 14:44:23.678 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-10 14:44:25.125 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-10 14:44:25.276 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 152.6331ms
2023-03-10 14:44:25.388 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-10 14:44:25.790 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 401.6725ms
2023-03-10 14:44:48.241 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-10 14:44:48.353 +05:00 [INF] CORS policy execution successful.
2023-03-10 14:44:48.415 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-10 14:44:48.437 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-10 14:44:49.405 +05:00 [INF] Executed DbCommand (7ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-10 14:44:49.660 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ClaimType", "a"."ClaimValue", "a"."UserId"
FROM "AspNetUserClaims" AS "a"
WHERE "a"."UserId" = @__user_Id_0
2023-03-10 14:44:49.693 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-10 14:44:49.701 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 13)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-10 14:44:49.718 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."ClaimType", "a"."ClaimValue"
FROM "AspNetRoleClaims" AS "a"
WHERE "a"."RoleId" = @__role_Id_0
2023-03-10 14:44:49.721 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-10 14:44:49.836 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"L7Y8OGY87JQ31F7Q1SEVCGMSP9SX3GO2RAW8674e34a-5533-46fe-8929-27720e835c8f","JwtId":"ab6a3b13-8663-4245-8d36-7d5ad9cbf69e","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-10T09:44:49.8155500Z","ExpiryDateTime":"2023-09-10T09:44:49.8157180Z","$type":"RefreshTokenCommand"}
2023-03-10 14:44:49.964 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 36), @p5='?' (Size = 71), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-10 14:44:50.025 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-10 14:44:50.055 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1613.6655ms
2023-03-10 14:44:50.055 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-10 14:44:50.060 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 2412 application/json;+charset=utf-8 1818.9152ms
2023-03-10 14:45:14.468 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 14:45:14.542 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 14:45:14.551 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 14:45:14.592 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 14:45:36.147 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 21595.4433ms
2023-03-10 14:45:36.147 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 14:45:36.149 +05:00 [ERR] An unhandled exception has occurred while executing the request.
StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter log, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 708
   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 673
   at StackExchange.Redis.ConnectionMultiplexer.Connect(String configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 651
   at EDSystems.Persistence.Services.CacheService..ctor() in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/Services/CacheService.cs:line 20
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.ConstructorInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at MediatR.Wrappers.RequestHandlerWrapperImpl`2.<>c__DisplayClass1_0.<Handle>g__Handler|0()
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination(Int32 PageNumber, Int32 PageSize) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/BranchController.cs:line 92
   at lambda_method898(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-10 14:45:36.219 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 500 - text/plain;+charset=utf-8 21750.4022ms
2023-03-10 14:46:06.028 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 14:46:06.354 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:46:06.356 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:46:06.356 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:46:06.356 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:46:06.356 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:46:06.356 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:46:06.356 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:46:06.356 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:46:06.356 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:46:06.651 +05:00 [INF] Executed DbCommand (19ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-10 14:46:06.888 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 14:46:07.014 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:46:07.014 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:46:07.014 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:46:07.014 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:46:07.014 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:46:07.014 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:46:07.014 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:46:07.014 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:46:07.014 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:46:07.270 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-10 14:46:07.270 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:46:07.271 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:46:07.271 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-10 14:46:07.271 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:46:07.271 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:46:07.271 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" TEXT NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:46:07.272 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-10 14:46:07.272 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:46:07.272 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:46:07.272 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-10 14:46:07.272 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 14:46:07.272 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:46:07.273 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:46:07.273 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:46:07.273 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:46:07.273 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:46:07.273 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:46:07.273 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:46:07.274 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:46:07.274 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-10 14:46:07.274 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-10 14:46:07.274 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-10 14:46:07.274 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:46:07.275 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:46:07.275 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:46:07.275 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:46:07.275 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:46:07.275 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:46:07.276 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 14:46:07.276 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-10 14:46:07.277 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, 'ef60e9c9-1ef9-4e93-9646-6836e8a1056f', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '18a62720-54ca-48e7-9d97-2d2493f20001', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '56dff4f8-6667-49d5-ac7f-ac9d054db62d', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '8936d046-e68e-473d-baa7-5a3adfade6b4', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '5586737f-4568-49b7-94d9-5cf27c6d248f', 'Customer', 'CUSTOMER');
2023-03-10 14:46:07.277 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'a4f8a1dc-3d49-45f6-8da6-ac8ef7d20939', '2023-03-10 14:46:06.883932', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEAkV8KfD9B/yv/Ghy2mPlZFB3RWWY0Y71ApOB9G6G0ivDVlDJXnQQY0bz9DMP9INaA==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '46f9472b-7512-49d5-a560-5eb3c99e20ca', '2023-03-10 14:46:06.883937', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEAkV8KfD9B/yv/Ghy2mPlZFB3RWWY0Y71ApOB9G6G0ivDVlDJXnQQY0bz9DMP9INaA==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '224ad287-ebaf-4f33-957f-895f8fbebf9f', '2023-03-10 14:46:06.883938', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEAkV8KfD9B/yv/Ghy2mPlZFB3RWWY0Y71ApOB9G6G0ivDVlDJXnQQY0bz9DMP9INaA==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '47344f6a-05fb-4f86-a5e5-45860ba0c2e9', '2023-03-10 14:46:06.883951', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEAkV8KfD9B/yv/Ghy2mPlZFB3RWWY0Y71ApOB9G6G0ivDVlDJXnQQY0bz9DMP9INaA==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '46ec1fc1-afcc-41fa-bd3d-db53cbcc38c5', '2023-03-10 14:46:06.883952', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEAkV8KfD9B/yv/Ghy2mPlZFB3RWWY0Y71ApOB9G6G0ivDVlDJXnQQY0bz9DMP9INaA==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-10 14:46:07.277 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-10 14:46:06.798769', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-10 14:46:06.798769', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-10 14:46:06.798769', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-10 14:46:06.79877', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-10 14:46:06.79877', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-10 14:46:06.79877', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-10 14:46:07.277 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-10 14:46:06.884109', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-10 14:46:06.88411', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-10 14:46:06.88411', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-10 14:46:06.88411', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-10 14:46:06.88411', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-10 14:46:06.884111', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-10 14:46:06.884113', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-10 14:46:06.884113', NULL, NULL, 'Сомони', 972);
2023-03-10 14:46:07.278 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-10 14:46:06.798825', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-10 14:46:06.798825', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-10 14:46:06.798825', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-10 14:46:06.798826', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-10 14:46:06.798826', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-10 14:46:06.798826', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-10 14:46:06.798826', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-10 14:46:06.798827', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-10 14:46:06.798827', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-10 14:46:06.798827', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-10 14:46:06.798827', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-10 14:46:06.798827', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-10 14:46:06.798828', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-10 14:46:07.278 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-10 14:46:06.884099', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-10 14:46:06.884102', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-10 14:46:06.884103', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-10 14:46:06.884103', NULL, 'Description', NULL, 'Авто');
2023-03-10 14:46:07.278 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-10 14:46:06.798755', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-10 14:46:06.798759', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-10 14:46:06.79876', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-10 14:46:06.79876', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-10 14:46:06.79876', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-10 14:46:06.79876', NULL, 'Выдан', NULL, 'Выдан');
2023-03-10 14:46:07.278 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-10 14:46:06.798774', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-10 14:46:06.798775', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-10 14:46:06.798775', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-10 14:46:06.798775', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-10 14:46:06.798775', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-10 14:46:06.798776', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-10 14:46:06.798776', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-10 14:46:06.798776', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-10 14:46:06.798776', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-10 14:46:06.798777', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-10 14:46:06.798777', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-10 14:46:06.798777', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-10 14:46:07.279 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-10 14:46:07.279 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-10 14:46:07.279 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-10 14:46:06.79878', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-10 14:46:06.798781', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-10 14:46:06.798781', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-10 14:46:06.798819', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-10 14:46:06.79882', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-10 14:46:06.79882', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-10 14:46:07.279 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-10 14:46:07.279 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-10 14:46:07.279 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-10 14:46:07.280 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-10 14:46:07.280 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-10 14:46:07.280 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-10 14:46:07.280 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-10 14:46:07.280 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-10 14:46:07.280 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-10 14:46:07.280 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-10 14:46:07.281 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-10 14:46:07.281 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-10 14:46:07.281 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-10 14:46:07.281 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-10 14:46:07.281 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-10 14:46:07.282 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-10 14:46:07.282 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-10 14:46:07.282 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-10 14:46:07.282 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-10 14:46:07.282 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-10 14:46:07.282 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-10 14:46:07.282 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-10 14:46:07.282 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-10 14:46:07.283 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-10 14:46:07.283 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-10 14:46:07.283 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-10 14:46:07.283 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-10 14:46:07.283 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-10 14:46:07.283 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-10 14:46:07.283 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-10 14:46:07.284 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-10 14:46:07.284 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-10 14:46:07.284 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-10 14:46:07.285 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-10 14:46:07.285 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-10 14:46:07.285 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-10 14:46:07.286 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-10 14:46:07.286 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-10 14:46:07.286 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-10 14:46:07.286 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-10 14:46:07.286 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-10 14:46:07.287 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-10 14:46:07.287 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-10 14:46:07.287 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-10 14:46:07.287 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-10 14:46:07.287 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-10 14:46:07.287 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-10 14:46:07.287 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-10 14:46:07.288 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-10 14:46:07.288 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-10 14:46:07.288 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-10 14:46:07.288 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-10 14:46:07.288 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-10 14:46:07.288 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-10 14:46:07.288 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-10 14:46:07.289 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-10 14:46:07.289 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-10 14:46:07.289 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-10 14:46:07.289 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-10 14:46:07.289 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-10 14:46:07.289 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-10 14:46:07.289 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-10 14:46:07.290 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-10 14:46:07.290 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-10 14:46:07.290 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-10 14:46:07.354 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-10 14:46:07.906 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-10 14:46:07.907 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-10 14:46:07.908 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-10 14:46:07.908 +05:00 [INF] Hosting environment: Development
2023-03-10 14:46:07.908 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-10 14:46:09.153 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-10 14:46:09.311 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 162.2458ms
2023-03-10 14:46:09.424 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-10 14:46:09.816 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 391.4087ms
2023-03-10 14:46:19.003 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 14:46:19.365 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 14:46:19.392 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 14:46:19.927 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 14:46:30.403 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 11005.4906ms
2023-03-10 14:46:30.404 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 14:46:30.406 +05:00 [ERR] An unhandled exception has occurred while executing the request.
StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter log, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 708
   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 673
   at StackExchange.Redis.ConnectionMultiplexer.Connect(String configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 651
   at EDSystems.Persistence.Services.CacheService..ctor() in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/Services/CacheService.cs:line 20
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.ConstructorInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at MediatR.Wrappers.RequestHandlerWrapperImpl`2.<>c__DisplayClass1_0.<Handle>g__Handler|0()
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination(Int32 PageNumber, Int32 PageSize) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/BranchController.cs:line 92
   at lambda_method489(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-10 14:46:30.475 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 500 - text/plain;+charset=utf-8 11471.5115ms
2023-03-10 14:52:01.127 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 14:52:01.144 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 14:52:01.144 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 14:52:01.146 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 14:52:11.320 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 10175.3282ms
2023-03-10 14:52:11.320 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 14:52:11.322 +05:00 [ERR] An unhandled exception has occurred while executing the request.
StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter log, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 708
   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 673
   at StackExchange.Redis.ConnectionMultiplexer.Connect(String configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 651
   at EDSystems.Persistence.Services.CacheService..ctor() in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/Services/CacheService.cs:line 20
   at InvokeStub_CacheService..ctor(Object, Object, IntPtr*)
   at System.Reflection.ConstructorInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at MediatR.Wrappers.RequestHandlerWrapperImpl`2.<>c__DisplayClass1_0.<Handle>g__Handler|0()
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination(Int32 PageNumber, Int32 PageSize) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/BranchController.cs:line 92
   at lambda_method489(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-10 14:52:11.324 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 500 - text/plain;+charset=utf-8 10197.2152ms
2023-03-10 14:52:37.101 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 14:52:37.128 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 14:52:37.128 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 14:52:37.131 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 14:52:47.222 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 10094.2195ms
2023-03-10 14:52:47.223 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 14:52:47.223 +05:00 [ERR] An unhandled exception has occurred while executing the request.
StackExchange.Redis.RedisConnectionException: It was not possible to connect to the redis server(s). Error connecting right now. To allow this multiplexer to continue retrying until it's able to connect, use abortConnect=false in your connection string or AbortOnConnectFail=false; in your code.
   at StackExchange.Redis.ConnectionMultiplexer.ConnectImpl(ConfigurationOptions configuration, TextWriter log, Nullable`1 serverType, EndPointCollection endpoints) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 708
   at StackExchange.Redis.ConnectionMultiplexer.Connect(ConfigurationOptions configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 673
   at StackExchange.Redis.ConnectionMultiplexer.Connect(String configuration, TextWriter log) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 651
   at EDSystems.Persistence.Services.CacheService..ctor() in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/Services/CacheService.cs:line 20
   at InvokeStub_CacheService..ctor(Object, Object, IntPtr*)
   at System.Reflection.RuntimeConstructorInfo.Invoke(BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitCache(ServiceCallSite callSite, RuntimeResolverContext context, ServiceProviderEngineScope serviceProviderEngine, RuntimeResolverLock lockType)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitScopeCache(ServiceCallSite callSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitConstructor(ConstructorCallSite constructorCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.VisitDisposeCache(ServiceCallSite transientCallSite, RuntimeResolverContext context)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteVisitor`2.VisitCallSite(ServiceCallSite callSite, TArgument argument)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteRuntimeResolver.Resolve(ServiceCallSite callSite, ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.DynamicServiceProviderEngine.<>c__DisplayClass2_0.<RealizeService>b__0(ServiceProviderEngineScope scope)
   at Microsoft.Extensions.DependencyInjection.ServiceProvider.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService(IServiceProvider provider, Type serviceType)
   at Microsoft.Extensions.DependencyInjection.ServiceProviderServiceExtensions.GetRequiredService[T](IServiceProvider provider)
   at MediatR.Wrappers.RequestHandlerWrapperImpl`2.<>c__DisplayClass1_0.<Handle>g__Handler|0()
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination(Int32 PageNumber, Int32 PageSize) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/BranchController.cs:line 92
   at lambda_method489(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-10 14:52:47.225 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 500 - text/plain;+charset=utf-8 10126.2327ms
2023-03-10 14:55:49.911 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 14:55:50.156 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:55:50.158 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:55:50.158 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:55:50.158 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:55:50.158 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:55:50.158 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:55:50.158 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:55:50.158 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:55:50.158 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:55:50.408 +05:00 [INF] Executed DbCommand (16ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-10 14:55:50.627 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 14:55:50.741 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:55:50.741 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:55:50.741 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:55:50.741 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:55:50.741 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:55:50.741 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:55:50.742 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:55:50.742 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:55:50.742 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 14:55:50.987 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-10 14:55:50.987 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:55:50.987 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:55:50.987 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-10 14:55:50.988 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:55:50.988 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:55:50.988 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" TEXT NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:55:50.988 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-10 14:55:50.988 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:55:50.988 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 14:55:50.988 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-10 14:55:50.989 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 14:55:50.989 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:55:50.989 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:55:50.995 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:55:50.995 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:55:50.995 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:55:50.995 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:55:50.995 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:55:50.995 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:55:50.996 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-10 14:55:50.996 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-10 14:55:50.996 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-10 14:55:50.996 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:55:50.996 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:55:50.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:55:50.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:55:50.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 14:55:50.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 14:55:50.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 14:55:50.998 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-10 14:55:50.998 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '2e4a638a-4cb9-43e5-bd53-74e6d56fffcb', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '1524f320-176f-4f8a-be02-b9960311e7db', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '382f9a8c-c19f-4ddb-8240-3143c4795303', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, 'd20cbc17-6e5f-481e-be70-19c9d2d35058', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '8cd91aba-f5e5-43da-9b02-627c83c2e22c', 'Customer', 'CUSTOMER');
2023-03-10 14:55:50.999 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '45a2ae43-8818-4834-8509-2e2e89458527', '2023-03-10 14:55:50.622261', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEFRDtlqHzFaKeeM8DH1Lw+NlqRhgv3+LTT6ls0AT7s4Z+fyFZS0fiDT4VxuAlszD0A==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '2734f501-3e41-45e1-81ae-2483a7229d5f', '2023-03-10 14:55:50.622266', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEFRDtlqHzFaKeeM8DH1Lw+NlqRhgv3+LTT6ls0AT7s4Z+fyFZS0fiDT4VxuAlszD0A==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '443eeab5-02d7-4ac7-9580-29507ba2d193', '2023-03-10 14:55:50.622267', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEFRDtlqHzFaKeeM8DH1Lw+NlqRhgv3+LTT6ls0AT7s4Z+fyFZS0fiDT4VxuAlszD0A==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'f61804a6-42f2-4743-ae93-0c76833272e2', '2023-03-10 14:55:50.622282', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEFRDtlqHzFaKeeM8DH1Lw+NlqRhgv3+LTT6ls0AT7s4Z+fyFZS0fiDT4VxuAlszD0A==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'f1f98926-531d-4335-b186-0215c4811932', '2023-03-10 14:55:50.622283', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEFRDtlqHzFaKeeM8DH1Lw+NlqRhgv3+LTT6ls0AT7s4Z+fyFZS0fiDT4VxuAlszD0A==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-10 14:55:50.999 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-10 14:55:50.538762', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-10 14:55:50.538762', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-10 14:55:50.538763', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-10 14:55:50.538763', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-10 14:55:50.538768', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-10 14:55:50.538768', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-10 14:55:50.999 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-10 14:55:50.623072', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-10 14:55:50.623072', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-10 14:55:50.623073', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-10 14:55:50.623073', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-10 14:55:50.623073', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-10 14:55:50.623073', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-10 14:55:50.623075', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-10 14:55:50.623075', NULL, NULL, 'Сомони', 972);
2023-03-10 14:55:50.999 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-10 14:55:50.538781', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-10 14:55:50.538781', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-10 14:55:50.538781', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-10 14:55:50.538782', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-10 14:55:50.538782', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-10 14:55:50.538782', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-10 14:55:50.538782', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-10 14:55:50.538783', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-10 14:55:50.538783', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-10 14:55:50.538783', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-10 14:55:50.538783', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-10 14:55:50.538783', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-10 14:55:50.538784', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-10 14:55:51.000 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-10 14:55:50.62304', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-10 14:55:50.623044', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-10 14:55:50.623044', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-10 14:55:50.623045', NULL, 'Description', NULL, 'Авто');
2023-03-10 14:55:51.000 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-10 14:55:50.538752', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-10 14:55:50.538756', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-10 14:55:50.538756', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-10 14:55:50.538756', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-10 14:55:50.538756', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-10 14:55:50.538757', NULL, 'Выдан', NULL, 'Выдан');
2023-03-10 14:55:51.000 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-10 14:55:50.538772', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-10 14:55:50.538772', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-10 14:55:50.538772', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-10 14:55:50.538772', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-10 14:55:50.538773', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-10 14:55:50.538773', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-10 14:55:50.538773', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-10 14:55:50.538774', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-10 14:55:50.538774', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-10 14:55:50.538774', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-10 14:55:50.538775', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-10 14:55:50.538775', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-10 14:55:51.001 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-10 14:55:51.001 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-10 14:55:51.001 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-10 14:55:50.538777', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-10 14:55:50.538778', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-10 14:55:50.538778', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-10 14:55:50.538778', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-10 14:55:50.538779', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-10 14:55:50.538779', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-10 14:55:51.001 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-10 14:55:51.001 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-10 14:55:51.002 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-10 14:55:51.002 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-10 14:55:51.002 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-10 14:55:51.002 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-10 14:55:51.002 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-10 14:55:51.002 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-10 14:55:51.002 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-10 14:55:51.003 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-10 14:55:51.003 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-10 14:55:51.003 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-10 14:55:51.003 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-10 14:55:51.003 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-10 14:55:51.003 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-10 14:55:51.003 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-10 14:55:51.004 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-10 14:55:51.004 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-10 14:55:51.004 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-10 14:55:51.004 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-10 14:55:51.004 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-10 14:55:51.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-10 14:55:51.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-10 14:55:51.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-10 14:55:51.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-10 14:55:51.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-10 14:55:51.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-10 14:55:51.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-10 14:55:51.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-10 14:55:51.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-10 14:55:51.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-10 14:55:51.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-10 14:55:51.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-10 14:55:51.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-10 14:55:51.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-10 14:55:51.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-10 14:55:51.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-10 14:55:51.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-10 14:55:51.008 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-10 14:55:51.008 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-10 14:55:51.008 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-10 14:55:51.008 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-10 14:55:51.008 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-10 14:55:51.008 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-10 14:55:51.008 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-10 14:55:51.009 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-10 14:55:51.009 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-10 14:55:51.009 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-10 14:55:51.009 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-10 14:55:51.009 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-10 14:55:51.009 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-10 14:55:51.009 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-10 14:55:51.010 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-10 14:55:51.010 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-10 14:55:51.010 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-10 14:55:51.010 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-10 14:55:51.010 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-10 14:55:51.010 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-10 14:55:51.010 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-10 14:55:51.011 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-10 14:55:51.011 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-10 14:55:51.011 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-10 14:55:51.011 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-10 14:55:51.011 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-10 14:55:51.011 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-10 14:55:51.072 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-10 14:55:51.771 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-10 14:55:51.772 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-10 14:55:51.773 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-10 14:55:51.774 +05:00 [INF] Hosting environment: Development
2023-03-10 14:55:51.774 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-10 14:55:53.455 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-10 14:55:53.604 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 150.4370ms
2023-03-10 14:55:53.719 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-10 14:55:54.129 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 410.4866ms
2023-03-10 14:56:21.590 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 14:56:21.893 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 14:56:21.921 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 14:56:22.415 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 14:56:42.968 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 21042.2713ms
2023-03-10 14:56:42.969 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 14:56:42.972 +05:00 [ERR] An unhandled exception has occurred while executing the request.
StackExchange.Redis.RedisTimeoutException: Timeout performing GET (5000ms), inst: 0, qu: 1, qs: 0, aw: False, bw: SpinningDown, rs: NotStarted, ws: Idle, in: 0, last-in: 0, cur-in: 0, sync-ops: 1, async-ops: 0, serverEndpoint: myrediscluster.baq32s.ng.0001.use1.cache.amazonaws.com:6379, conn-sec: n/a, mc: 1/1/0, mgr: 10 of 10 available, clientName: KDBs-MacBook-Pro(SE.Redis-v2.6.96.30123), IOCP: (Busy=0,Free=1000,Min=1,Max=1000), WORKER: (Busy=1,Free=32766,Min=8,Max=32767), POOL: (Threads=8,QueuedItems=0,CompletedItems=166), v: 2.6.96.30123 (Please take a look at this article for some common client-side issues that can cause timeouts: https://stackexchange.github.io/StackExchange.Redis/Timeouts)
   at StackExchange.Redis.ConnectionMultiplexer.ExecuteSyncImpl[T](Message message, ResultProcessor`1 processor, ServerEndPoint server, T defaultValue) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 1988
   at StackExchange.Redis.RedisBase.ExecuteSync[T](Message message, ResultProcessor`1 processor, ServerEndPoint server, T defaultValue) in /_/src/StackExchange.Redis/RedisBase.cs:line 62
   at StackExchange.Redis.RedisDatabase.StringGet(RedisKey key, CommandFlags flags) in /_/src/StackExchange.Redis/RedisDatabase.cs:line 2996
   at EDSystems.Persistence.Services.CacheService.GetData[T](String key) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/Services/CacheService.cs:line 26
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.GetBranchListWithPaginationQueryHandler.Handle(GetBranchListWithPaginationQuery request, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/EDSystems/Queries/Branches/GetBranchListWithPagination/GetBranchListWithPaginationQueryHandler.cs:line 29
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination(Int32 PageNumber, Int32 PageSize) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/BranchController.cs:line 92
   at lambda_method489(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-10 14:56:43.040 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 500 - text/plain;+charset=utf-8 21449.8827ms
2023-03-10 15:06:56.285 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 15:06:56.548 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:06:56.550 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:06:56.550 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:06:56.550 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:06:56.550 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:06:56.550 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:06:56.550 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:06:56.550 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:06:56.550 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:06:56.797 +05:00 [INF] Executed DbCommand (11ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-10 15:06:57.005 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 15:06:57.124 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:06:57.124 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:06:57.124 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:06:57.124 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:06:57.124 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:06:57.124 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:06:57.124 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:06:57.124 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:06:57.124 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:06:57.392 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-10 15:06:57.392 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 15:06:57.392 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 15:06:57.392 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-10 15:06:57.393 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 15:06:57.393 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 15:06:57.393 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" TEXT NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 15:06:57.393 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-10 15:06:57.393 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 15:06:57.393 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-10 15:06:57.393 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-10 15:06:57.394 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 15:06:57.394 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:06:57.394 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:06:57.394 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:06:57.394 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:06:57.394 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:06:57.395 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:06:57.395 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:06:57.395 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:06:57.395 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-10 15:06:57.395 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-10 15:06:57.395 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-10 15:06:57.396 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:06:57.396 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 15:06:57.396 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 15:06:57.396 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 15:06:57.396 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 15:06:57.397 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:06:57.397 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 15:06:57.397 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-10 15:06:57.398 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, 'd305292b-3ce3-4cf6-a5f1-855cdb558d69', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '001d8ec1-5f34-4835-8fc0-b7d397a002a4', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '65c891a2-8666-4c8e-b79c-fe35f065862e', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '639d24ea-8a3b-405d-8f0d-b00708b043af', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, 'a9c4b497-d12b-4e0a-9dcb-c8c9084c1925', 'Customer', 'CUSTOMER');
2023-03-10 15:06:57.398 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'ba645e80-5b85-495f-81ed-2d9118e43672', '2023-03-10 15:06:57.001191', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAELbq2QHgIDqvYg+38TyhszPpZGS+bHPJQLKCiqJVyuiM1T88tT+cj/6fp8dmPznEHw==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'e3094d63-e657-4f20-9fec-7e35f4f5d954', '2023-03-10 15:06:57.00121', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAELbq2QHgIDqvYg+38TyhszPpZGS+bHPJQLKCiqJVyuiM1T88tT+cj/6fp8dmPznEHw==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '3e5a4b58-1c43-4a54-97ec-805bc5492464', '2023-03-10 15:06:57.001211', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAELbq2QHgIDqvYg+38TyhszPpZGS+bHPJQLKCiqJVyuiM1T88tT+cj/6fp8dmPznEHw==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '1a65e745-8e5b-4508-aa83-510a92079e1e', '2023-03-10 15:06:57.001226', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAELbq2QHgIDqvYg+38TyhszPpZGS+bHPJQLKCiqJVyuiM1T88tT+cj/6fp8dmPznEHw==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '11410105-bbb3-4064-af52-98f42e505fa8', '2023-03-10 15:06:57.001227', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAELbq2QHgIDqvYg+38TyhszPpZGS+bHPJQLKCiqJVyuiM1T88tT+cj/6fp8dmPznEHw==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-10 15:06:57.398 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-10 15:06:56.920985', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-10 15:06:56.920986', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-10 15:06:56.920986', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-10 15:06:56.920986', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-10 15:06:56.920987', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-10 15:06:56.920987', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-10 15:06:57.398 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-10 15:06:57.001345', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-10 15:06:57.001345', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-10 15:06:57.001345', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-10 15:06:57.001346', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-10 15:06:57.001346', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-10 15:06:57.001346', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-10 15:06:57.001347', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-10 15:06:57.001348', NULL, NULL, 'Сомони', 972);
2023-03-10 15:06:57.398 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-10 15:06:56.921006', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-10 15:06:56.921006', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-10 15:06:56.921006', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-10 15:06:56.921006', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-10 15:06:56.921007', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-10 15:06:56.921007', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-10 15:06:56.921007', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-10 15:06:56.921007', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-10 15:06:56.921007', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-10 15:06:56.921008', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-10 15:06:56.921008', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-10 15:06:56.921008', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-10 15:06:56.921008', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-10 15:06:57.399 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-10 15:06:57.001335', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-10 15:06:57.001337', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-10 15:06:57.001337', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-10 15:06:57.001337', NULL, 'Description', NULL, 'Авто');
2023-03-10 15:06:57.399 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-10 15:06:56.920973', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-10 15:06:56.920977', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-10 15:06:56.920977', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-10 15:06:56.920978', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-10 15:06:56.920978', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-10 15:06:56.920978', NULL, 'Выдан', NULL, 'Выдан');
2023-03-10 15:06:57.399 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-10 15:06:56.920991', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-10 15:06:56.920991', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-10 15:06:56.920992', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-10 15:06:56.920992', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-10 15:06:56.920992', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-10 15:06:56.920992', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-10 15:06:56.920993', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-10 15:06:56.920993', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-10 15:06:56.920994', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-10 15:06:56.920994', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-10 15:06:56.920994', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-10 15:06:56.920994', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-10 15:06:57.400 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-10 15:06:57.400 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-10 15:06:57.400 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-10 15:06:56.921002', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-10 15:06:56.921002', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-10 15:06:56.921003', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-10 15:06:56.921003', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-10 15:06:56.921003', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-10 15:06:56.921003', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-10 15:06:57.400 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-10 15:06:57.401 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-10 15:06:57.401 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-10 15:06:57.401 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-10 15:06:57.401 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-10 15:06:57.401 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-10 15:06:57.401 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-10 15:06:57.401 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-10 15:06:57.402 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-10 15:06:57.402 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-10 15:06:57.402 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-10 15:06:57.402 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-10 15:06:57.402 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-10 15:06:57.402 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-10 15:06:57.403 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-10 15:06:57.403 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-10 15:06:57.403 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-10 15:06:57.403 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-10 15:06:57.403 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-10 15:06:57.403 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-10 15:06:57.404 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-10 15:06:57.404 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-10 15:06:57.404 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-10 15:06:57.404 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-10 15:06:57.404 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-10 15:06:57.404 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-10 15:06:57.405 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-10 15:06:57.405 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-10 15:06:57.405 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-10 15:06:57.405 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-10 15:06:57.405 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-10 15:06:57.405 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-10 15:06:57.405 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-10 15:06:57.406 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-10 15:06:57.406 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-10 15:06:57.406 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-10 15:06:57.406 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-10 15:06:57.406 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-10 15:06:57.406 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-10 15:06:57.406 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-10 15:06:57.407 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-10 15:06:57.407 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-10 15:06:57.407 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-10 15:06:57.407 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-10 15:06:57.407 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-10 15:06:57.407 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-10 15:06:57.407 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-10 15:06:57.408 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-10 15:06:57.408 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-10 15:06:57.408 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-10 15:06:57.408 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-10 15:06:57.408 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-10 15:06:57.408 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-10 15:06:57.408 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-10 15:06:57.408 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-10 15:06:57.409 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-10 15:06:57.409 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-10 15:06:57.409 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-10 15:06:57.409 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-10 15:06:57.409 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-10 15:06:57.409 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-10 15:06:57.409 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-10 15:06:57.410 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-10 15:06:57.410 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-10 15:06:57.410 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-10 15:06:57.471 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-10 15:06:58.096 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-10 15:06:58.096 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-10 15:06:58.098 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-10 15:06:58.098 +05:00 [INF] Hosting environment: Development
2023-03-10 15:06:58.098 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-10 15:06:59.701 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-10 15:06:59.855 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 154.5364ms
2023-03-10 15:06:59.971 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-10 15:07:00.377 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 406.1521ms
2023-03-10 15:07:17.509 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-10 15:07:17.581 +05:00 [INF] CORS policy execution successful.
2023-03-10 15:07:17.660 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-10 15:07:17.690 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-10 15:07:18.656 +05:00 [INF] Executed DbCommand (5ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-10 15:07:18.908 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ClaimType", "a"."ClaimValue", "a"."UserId"
FROM "AspNetUserClaims" AS "a"
WHERE "a"."UserId" = @__user_Id_0
2023-03-10 15:07:18.938 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-10 15:07:18.944 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 13)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-10 15:07:18.960 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."ClaimType", "a"."ClaimValue"
FROM "AspNetRoleClaims" AS "a"
WHERE "a"."RoleId" = @__role_Id_0
2023-03-10 15:07:18.964 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-10 15:07:19.084 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"1B83D7LEAT990X2ZOBI4CE90E00LDE6OWMQ68bbc4e4-0fc4-4e23-abb3-0b937d87823b","JwtId":"d4103462-3e8a-4499-8a2a-e90d390cac6c","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-10T10:07:19.0647330Z","ExpiryDateTime":"2023-09-10T10:07:19.0647870Z","$type":"RefreshTokenCommand"}
2023-03-10 15:07:19.219 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 36), @p5='?' (Size = 71), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-10 15:07:19.284 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-10 15:07:19.311 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 1616.9718ms
2023-03-10 15:07:19.311 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-10 15:07:19.322 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 2412 application/json;+charset=utf-8 1812.2753ms
2023-03-10 15:07:34.010 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - -
2023-03-10 15:07:34.100 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 15:07:34.111 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.BranchListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-10 15:07:34.164 +05:00 [INF] NotesRequest: GetBranchListWithPaginationQuery {"PageNumber":1,"PageSize":2,"$type":"GetBranchListWithPaginationQuery"}
2023-03-10 15:07:54.683 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi) in 20571.525ms
2023-03-10 15:07:54.683 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-10 15:07:54.684 +05:00 [ERR] An unhandled exception has occurred while executing the request.
StackExchange.Redis.RedisTimeoutException: Timeout performing GET (5000ms), inst: 0, qu: 1, qs: 0, aw: False, bw: SpinningDown, rs: NotStarted, ws: Idle, in: 0, last-in: 0, cur-in: 0, sync-ops: 1, async-ops: 0, serverEndpoint: myrediscluster.baq32s.ng.0001.use1.cache.amazonaws.com:6379, conn-sec: n/a, mc: 1/1/0, mgr: 10 of 10 available, clientName: KDBs-MacBook-Pro(SE.Redis-v2.6.96.30123), IOCP: (Busy=0,Free=1000,Min=1,Max=1000), WORKER: (Busy=1,Free=32766,Min=8,Max=32767), POOL: (Threads=9,QueuedItems=0,CompletedItems=201), v: 2.6.96.30123 (Please take a look at this article for some common client-side issues that can cause timeouts: https://stackexchange.github.io/StackExchange.Redis/Timeouts)
   at StackExchange.Redis.ConnectionMultiplexer.ExecuteSyncImpl[T](Message message, ResultProcessor`1 processor, ServerEndPoint server, T defaultValue) in /_/src/StackExchange.Redis/ConnectionMultiplexer.cs:line 1988
   at StackExchange.Redis.RedisBase.ExecuteSync[T](Message message, ResultProcessor`1 processor, ServerEndPoint server, T defaultValue) in /_/src/StackExchange.Redis/RedisBase.cs:line 62
   at StackExchange.Redis.RedisDatabase.StringGet(RedisKey key, CommandFlags flags) in /_/src/StackExchange.Redis/RedisDatabase.cs:line 2996
   at EDSystems.Persistence.Services.CacheService.GetData[T](String key) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Persistence/Services/CacheService.cs:line 29
   at EDSystems.Application.EDSystems.Queries.Branches.GetBranchListWithPagination.GetBranchListWithPaginationQueryHandler.Handle(GetBranchListWithPaginationQuery request, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/EDSystems/Queries/Branches/GetBranchListWithPagination/GetBranchListWithPaginationQueryHandler.cs:line 29
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.BranchController.GetAllWithPagination(Int32 PageNumber, Int32 PageSize) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/BranchController.cs:line 92
   at lambda_method898(Closure, Object)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.AwaitableObjectResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-10 15:07:54.757 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/WithPagination?PageNumber=1&PageSize=2 - - - 500 - text/plain;+charset=utf-8 20746.6483ms
2023-03-10 15:29:53.786 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 15:29:54.024 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:29:54.025 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:29:54.025 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:29:54.025 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:29:54.025 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:29:54.025 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:29:54.025 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:29:54.025 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:29:54.025 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:29:55.756 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 15:29:55.862 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:29:55.862 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:29:55.862 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:29:55.862 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:29:55.862 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:29:55.862 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:29:55.862 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:29:55.862 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:29:55.862 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:29:57.273 +05:00 [INF] Executed DbCommand (412ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE edbase;
2023-03-10 15:29:59.008 +05:00 [INF] Executed DbCommand (211ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2023-03-10 15:30:00.371 +05:00 [INF] Executed DbCommand (195ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-03-10 15:30:01.095 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-03-10 15:30:01.113 +05:00 [INF] Applying migration '20230307173432_myMigration01'.
2023-03-10 15:30:02.029 +05:00 [INF] Executed DbCommand (231ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-03-10 15:30:02.282 +05:00 [INF] Executed DbCommand (253ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" text NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-03-10 15:30:02.464 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Currency" PRIMARY KEY ("Id")
);
2023-03-10 15:30:02.640 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT "PK_Expenses" PRIMARY KEY ("Id")
);
2023-03-10 15:30:02.821 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ExpenseType" PRIMARY KEY ("Id")
);
2023-03-10 15:30:03.005 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Parcel" PRIMARY KEY ("Id")
);
2023-03-10 15:30:03.179 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Cost" numeric(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Plan" PRIMARY KEY ("Id")
);
2023-03-10 15:30:03.358 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "Token" text NULL,
    "JwtId" text NULL,
    "IsUsed" boolean NOT NULL,
    "IsRevoked" boolean NOT NULL,
    "AddedDateTime" timestamp without time zone NOT NULL,
    "ExpiryDateTime" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_RefreshToken" PRIMARY KEY ("Id")
);
2023-03-10 15:30:03.536 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Status" PRIMARY KEY ("Id")
);
2023-03-10 15:30:03.711 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TokenId" text NULL,
    "RefreshToken" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Tokens" PRIMARY KEY ("Id")
);
2023-03-10 15:30:03.894 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-10 15:30:04.080 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric(18,3) NOT NULL,
    "BranchId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Account" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 15:30:04.263 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ToBranchId" integer NOT NULL,
    "FromBranchId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelBranch" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:30:04.440 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StateDeliveryToBranch" boolean NOT NULL,
    "StatePickingUp" boolean NOT NULL,
    "StateDeliveryToPoint" boolean NOT NULL,
    "StateBuyout" boolean NOT NULL,
    "CostPickingUp" numeric(18,3) NOT NULL,
    "CostDeliveryToPoint" numeric(18,3) NOT NULL,
    "CostDeliveryToBranch" numeric(18,3) NOT NULL,
    "CostBuyout" numeric NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelCost" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:30:04.614 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Description" varchar NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelDescription" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:30:04.790 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelImage" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:30:04.985 +05:00 [INF] Executed DbCommand (194ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" text NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelItem" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:30:05.168 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Cost" numeric(18,3) NOT NULL,
    "CourierId" text NULL,
    "JobType" varchar NULL,
    "ParcelId" integer NOT NULL,
    "PaymentState" boolean NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelJob" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:30:05.348 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Weight" numeric(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSize" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:30:05.522 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSound" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:30:05.699 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PlanId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelPlan" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-10 15:30:05.886 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StatusId" integer NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelStatus" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-10 15:30:06.062 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NULL,
    "LastName" text NULL,
    "Address" text NULL,
    "UserNameT" text NULL,
    "ChatId" bigint NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "ParcelJobId" integer NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-10 15:30:06.241 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "PayerId" text NULL,
    "PayerId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_AccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:30:06.458 +05:00 [INF] Executed DbCommand (216ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 15:30:06.649 +05:00 [INF] Executed DbCommand (191ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 15:30:06.825 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" integer NOT NULL,
    "RoleId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 15:30:07.003 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" integer NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 15:30:07.181 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SenderId" text NULL,
    "SenderId1" integer NULL,
    "RecepientId" text NULL,
    "RecepientId1" integer NULL,
    "RecepientStaffId" text NULL,
    "RecepientStaffId1" integer NULL,
    "SenderStaffId" text NULL,
    "SenderStaffId1" integer NULL,
    "RecepientCourierId" text NULL,
    "RecepientCourierId1" integer NULL,
    "SenderCourierId" text NULL,
    "SenderCourierId1" integer NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelOwners" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:30:07.365 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccount" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 15:30:07.566 +05:00 [INF] Executed DbCommand (200ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-10 15:30:07.745 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '62d65bae-26fe-4478-8c5a-028912ed52f8', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '745a2a87-3eec-4831-9648-ff3e0ca27f5f', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, 'ca38d0cc-67c2-4fcb-83fa-9ecdd0ee6130', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '18be39b6-69fa-4303-acb2-13c9ad627d6e', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '3072d295-e268-445f-9aae-2c5c58501d87', 'Customer', 'CUSTOMER');
2023-03-10 15:30:07.938 +05:00 [INF] Executed DbCommand (193ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '537ead06-91c5-4e77-9d74-8a4c24c98c0c', TIMESTAMP '2023-03-07 22:34:32.818126', NULL, 'administrator@gmail.com', FALSE, 'EDSystem', 'Administrator', FALSE, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998970000675', FALSE, NULL, FALSE, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '4d518d26-2c13-460b-b918-30d018a73dce', TIMESTAMP '2023-03-07 22:34:32.818127', NULL, 'hayrulloh@gmail.com', FALSE, 'EDTashkent', 'Hayrulloh', FALSE, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998935788886', FALSE, NULL, FALSE, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '99484c3d-c5a9-40b4-996f-43b88d4fd06e', TIMESTAMP '2023-03-07 22:34:32.818128', NULL, 'Nodir@gmail.com', FALSE, 'EDTashkent', 'Nodir', FALSE, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998909046605', FALSE, NULL, FALSE, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '7dfa1f3d-3dfb-4990-b102-f2254a385477', TIMESTAMP '2023-03-07 22:34:32.818131', NULL, 'Javohir@gmail.com', FALSE, 'EDTashkent', 'Javohir', FALSE, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998931710966', FALSE, NULL, FALSE, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '97a5ddd0-0a30-4208-af4d-79f82fe2dbcd', TIMESTAMP '2023-03-07 22:34:32.818132', NULL, 'Ismoil@gmail.com', FALSE, 'EDTashkent', 'Ismoil', FALSE, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998977093262', FALSE, NULL, FALSE, 'ismoil', 'UserName');
2023-03-10 15:30:08.121 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, TIMESTAMP '2023-03-07 22:34:32.786015', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, TIMESTAMP '2023-03-07 22:34:32.786015', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, TIMESTAMP '2023-03-07 22:34:32.786015', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, TIMESTAMP '2023-03-07 22:34:32.786016', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, TIMESTAMP '2023-03-07 22:34:32.786016', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, TIMESTAMP '2023-03-07 22:34:32.786016', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-10 15:30:08.302 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, TIMESTAMP '2023-03-07 22:34:32.818142', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, TIMESTAMP '2023-03-07 22:34:32.818142', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, TIMESTAMP '2023-03-07 22:34:32.818142', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, TIMESTAMP '2023-03-07 22:34:32.818142', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, TIMESTAMP '2023-03-07 22:34:32.818143', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, TIMESTAMP '2023-03-07 22:34:32.818143', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, TIMESTAMP '2023-03-07 22:34:32.818143', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, TIMESTAMP '2023-03-07 22:34:32.818143', NULL, NULL, 'Сомони', 972);
2023-03-10 15:30:08.477 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-07 22:34:32.786024', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-07 22:34:32.786024', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-10 15:30:08.656 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, 7.0, NULL, TIMESTAMP '2023-03-07 22:34:32.81814', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, 12.0, NULL, TIMESTAMP '2023-03-07 22:34:32.81814', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, 30.0, NULL, TIMESTAMP '2023-03-07 22:34:32.81814', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, 5.0, NULL, TIMESTAMP '2023-03-07 22:34:32.818141', NULL, 'Description', NULL, 'Авто');
2023-03-10 15:30:08.838 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-07 22:34:32.786002', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-07 22:34:32.786006', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-07 22:34:32.786006', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-07 22:34:32.786007', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-07 22:34:32.786007', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-07 22:34:32.786007', NULL, 'Выдан', NULL, 'Выдан');
2023-03-10 15:30:09.118 +05:00 [INF] Executed DbCommand (280ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 0.0, 1, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 0.0, 1, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 0.0, 2, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 0.0, 2, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 0.0, 3, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 0.0, 3, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.786019', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 0.0, 4, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786019', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 0.0, 4, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.786019', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, 0.0, 5, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.78602', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, 0.0, 5, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.78602', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, 0.0, 6, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.78602', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, 0.0, 6, NULL, 5, TIMESTAMP '2023-03-07 22:34:32.78602', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-10 15:30:09.458 +05:00 [INF] Executed DbCommand (341ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-10 15:30:09.754 +05:00 [INF] Executed DbCommand (296ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-10 15:30:10.111 +05:00 [INF] Executed DbCommand (356ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786022', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786022', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786022', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786023', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786023', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786023', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-10 15:30:10.442 +05:00 [INF] Executed DbCommand (331ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-10 15:30:11.222 +05:00 [INF] Executed DbCommand (780ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-10 15:30:11.400 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-10 15:30:11.596 +05:00 [INF] Executed DbCommand (196ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-10 15:30:11.770 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-10 15:30:11.944 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-10 15:30:12.138 +05:00 [INF] Executed DbCommand (194ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-10 15:30:12.332 +05:00 [INF] Executed DbCommand (194ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-10 15:30:12.510 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-10 15:30:12.683 +05:00 [INF] Executed DbCommand (173ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-10 15:30:12.856 +05:00 [INF] Executed DbCommand (173ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-10 15:30:13.033 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-10 15:30:13.207 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-10 15:30:13.391 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-10 15:30:13.567 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-10 15:30:13.741 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-10 15:30:13.916 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-10 15:30:14.090 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-10 15:30:14.272 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-10 15:30:14.450 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-10 15:30:14.624 +05:00 [INF] Executed DbCommand (173ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-10 15:30:14.799 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-10 15:30:14.978 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-10 15:30:15.164 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-10 15:30:15.361 +05:00 [INF] Executed DbCommand (196ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-10 15:30:15.535 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-10 15:30:15.708 +05:00 [INF] Executed DbCommand (173ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-10 15:30:15.881 +05:00 [INF] Executed DbCommand (172ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-10 15:30:16.058 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-10 15:30:16.232 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-10 15:30:16.407 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-10 15:30:16.582 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-10 15:30:16.756 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-10 15:30:16.929 +05:00 [INF] Executed DbCommand (173ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-10 15:30:17.108 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-10 15:30:17.284 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-10 15:30:17.460 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-10 15:30:17.639 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-10 15:30:17.814 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-10 15:30:17.990 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-10 15:30:18.177 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-10 15:30:18.357 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-10 15:30:18.532 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-10 15:30:18.706 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-10 15:30:18.881 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-10 15:30:19.054 +05:00 [INF] Executed DbCommand (173ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-10 15:30:19.227 +05:00 [INF] Executed DbCommand (173ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-10 15:30:19.406 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-10 15:30:19.583 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-10 15:30:19.761 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-10 15:30:19.950 +05:00 [INF] Executed DbCommand (189ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-10 15:30:20.125 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-10 15:30:20.310 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-10 15:30:20.489 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-10 15:30:20.662 +05:00 [INF] Executed DbCommand (172ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-10 15:30:20.850 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-10 15:30:21.063 +05:00 [INF] Executed DbCommand (213ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-10 15:30:21.239 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-10 15:30:21.414 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-10 15:30:21.588 +05:00 [INF] Executed DbCommand (173ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-10 15:30:22.136 +05:00 [INF] Executed DbCommand (548ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-10 15:30:22.358 +05:00 [INF] Executed DbCommand (222ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-10 15:30:23.352 +05:00 [INF] Executed DbCommand (994ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-10 15:30:24.369 +05:00 [INF] Executed DbCommand (1,016ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-10 15:30:24.681 +05:00 [INF] Executed DbCommand (312ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-10 15:30:24.865 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT setval(
    pg_get_serial_sequence('"AspNetRoles"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetRoles") + 1,
        nextval(pg_get_serial_sequence('"AspNetRoles"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUsers"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUsers") + 1,
        nextval(pg_get_serial_sequence('"AspNetUsers"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Branch"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Branch") + 1,
        nextval(pg_get_serial_sequence('"Branch"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Currency"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Currency") + 1,
        nextval(pg_get_serial_sequence('"Currency"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ExpenseType"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ExpenseType") + 1,
        nextval(pg_get_serial_sequence('"ExpenseType"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Plan"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Plan") + 1,
        nextval(pg_get_serial_sequence('"Plan"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Status"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Status") + 1,
        nextval(pg_get_serial_sequence('"Status"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Account"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Account") + 1,
        nextval(pg_get_serial_sequence('"Account"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUserClaims"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUserClaims") + 1,
        nextval(pg_get_serial_sequence('"AspNetUserClaims"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"UserAccount"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "UserAccount") + 1,
        nextval(pg_get_serial_sequence('"UserAccount"', 'Id'))),
    false);
2023-03-10 15:30:25.215 +05:00 [INF] Executed DbCommand (349ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20230307173432_myMigration01', '7.0.3');
2023-03-10 15:34:31.130 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 15:34:31.375 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:34:31.376 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:34:31.376 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:34:31.376 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:34:31.376 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:34:31.376 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:34:31.376 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:34:31.376 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:34:31.376 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:34:33.403 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-10 15:34:33.513 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:34:33.514 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:34:33.514 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:34:33.514 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:34:33.514 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:34:33.514 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:34:33.514 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:34:33.514 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:34:33.514 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-10 15:34:35.057 +05:00 [INF] Executed DbCommand (496ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE newdatabasemine;
2023-03-10 15:34:36.827 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);
2023-03-10 15:34:38.145 +05:00 [INF] Executed DbCommand (195ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT EXISTS (SELECT 1 FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON n.oid=c.relnamespace WHERE c.relname='__EFMigrationsHistory');
2023-03-10 15:34:38.897 +05:00 [INF] Executed DbCommand (207ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT "MigrationId", "ProductVersion"
FROM "__EFMigrationsHistory"
ORDER BY "MigrationId";
2023-03-10 15:34:38.915 +05:00 [INF] Applying migration '20230307173432_myMigration01'.
2023-03-10 15:34:39.818 +05:00 [INF] Executed DbCommand (217ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-03-10 15:34:40.004 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" text NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-03-10 15:34:40.185 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Currency" PRIMARY KEY ("Id")
);
2023-03-10 15:34:40.849 +05:00 [INF] Executed DbCommand (661ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT "PK_Expenses" PRIMARY KEY ("Id")
);
2023-03-10 15:34:41.032 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ExpenseType" PRIMARY KEY ("Id")
);
2023-03-10 15:34:41.211 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Parcel" PRIMARY KEY ("Id")
);
2023-03-10 15:34:41.391 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Cost" numeric(18,3) NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Plan" PRIMARY KEY ("Id")
);
2023-03-10 15:34:41.580 +05:00 [INF] Executed DbCommand (189ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "Token" text NULL,
    "JwtId" text NULL,
    "IsUsed" boolean NOT NULL,
    "IsRevoked" boolean NOT NULL,
    "AddedDateTime" timestamp without time zone NOT NULL,
    "ExpiryDateTime" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_RefreshToken" PRIMARY KEY ("Id")
);
2023-03-10 15:34:41.765 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Status" PRIMARY KEY ("Id")
);
2023-03-10 15:34:41.959 +05:00 [INF] Executed DbCommand (193ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TokenId" text NULL,
    "RefreshToken" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Tokens" PRIMARY KEY ("Id")
);
2023-03-10 15:34:42.143 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-10 15:34:42.327 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric(18,3) NOT NULL,
    "BranchId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Account" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 15:34:42.538 +05:00 [INF] Executed DbCommand (211ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ToBranchId" integer NOT NULL,
    "FromBranchId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelBranch" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:34:42.725 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StateDeliveryToBranch" boolean NOT NULL,
    "StatePickingUp" boolean NOT NULL,
    "StateDeliveryToPoint" boolean NOT NULL,
    "StateBuyout" boolean NOT NULL,
    "CostPickingUp" numeric(18,3) NOT NULL,
    "CostDeliveryToPoint" numeric(18,3) NOT NULL,
    "CostDeliveryToBranch" numeric(18,3) NOT NULL,
    "CostBuyout" numeric NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelCost" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:34:43.154 +05:00 [INF] Executed DbCommand (428ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Description" varchar NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelDescription" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:34:43.335 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelImage" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:34:43.515 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" text NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelItem" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:34:43.697 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Cost" numeric(18,3) NOT NULL,
    "CourierId" text NULL,
    "JobType" varchar NULL,
    "ParcelId" integer NOT NULL,
    "PaymentState" boolean NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelJob" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:34:43.878 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Weight" numeric(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSize" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:34:44.058 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSound" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:34:44.243 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PlanId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelPlan" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-10 15:34:44.424 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StatusId" integer NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelStatus" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-10 15:34:44.606 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NULL,
    "LastName" text NULL,
    "Address" text NULL,
    "UserNameT" text NULL,
    "ChatId" bigint NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "ParcelJobId" integer NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-10 15:34:44.785 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "PayerId" text NULL,
    "PayerId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_AccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:34:44.965 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 15:34:45.150 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 15:34:45.328 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" integer NOT NULL,
    "RoleId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 15:34:46.209 +05:00 [INF] Executed DbCommand (880ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" integer NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-10 15:34:46.419 +05:00 [INF] Executed DbCommand (210ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SenderId" text NULL,
    "SenderId1" integer NULL,
    "RecepientId" text NULL,
    "RecepientId1" integer NULL,
    "RecepientStaffId" text NULL,
    "RecepientStaffId1" integer NULL,
    "SenderStaffId" text NULL,
    "SenderStaffId1" integer NULL,
    "RecepientCourierId" text NULL,
    "RecepientCourierId1" integer NULL,
    "SenderCourierId" text NULL,
    "SenderCourierId1" integer NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelOwners" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-10 15:34:46.609 +05:00 [INF] Executed DbCommand (189ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccount" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-10 15:34:46.788 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-10 15:34:46.982 +05:00 [INF] Executed DbCommand (194ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '62d65bae-26fe-4478-8c5a-028912ed52f8', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '745a2a87-3eec-4831-9648-ff3e0ca27f5f', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, 'ca38d0cc-67c2-4fcb-83fa-9ecdd0ee6130', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '18be39b6-69fa-4303-acb2-13c9ad627d6e', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '3072d295-e268-445f-9aae-2c5c58501d87', 'Customer', 'CUSTOMER');
2023-03-10 15:34:47.161 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '537ead06-91c5-4e77-9d74-8a4c24c98c0c', TIMESTAMP '2023-03-07 22:34:32.818126', NULL, 'administrator@gmail.com', FALSE, 'EDSystem', 'Administrator', FALSE, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998970000675', FALSE, NULL, FALSE, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '4d518d26-2c13-460b-b918-30d018a73dce', TIMESTAMP '2023-03-07 22:34:32.818127', NULL, 'hayrulloh@gmail.com', FALSE, 'EDTashkent', 'Hayrulloh', FALSE, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998935788886', FALSE, NULL, FALSE, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '99484c3d-c5a9-40b4-996f-43b88d4fd06e', TIMESTAMP '2023-03-07 22:34:32.818128', NULL, 'Nodir@gmail.com', FALSE, 'EDTashkent', 'Nodir', FALSE, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998909046605', FALSE, NULL, FALSE, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '7dfa1f3d-3dfb-4990-b102-f2254a385477', TIMESTAMP '2023-03-07 22:34:32.818131', NULL, 'Javohir@gmail.com', FALSE, 'EDTashkent', 'Javohir', FALSE, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998931710966', FALSE, NULL, FALSE, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '97a5ddd0-0a30-4208-af4d-79f82fe2dbcd', TIMESTAMP '2023-03-07 22:34:32.818132', NULL, 'Ismoil@gmail.com', FALSE, 'EDTashkent', 'Ismoil', FALSE, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEG96UZInZlqlB7GEfsljsHadi+M+gyuEt9ueoxFf/3f3wCIWCDN9c+bQaOWsM8M05A==', '998977093262', FALSE, NULL, FALSE, 'ismoil', 'UserName');
2023-03-10 15:34:47.350 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, TIMESTAMP '2023-03-07 22:34:32.786015', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, TIMESTAMP '2023-03-07 22:34:32.786015', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, TIMESTAMP '2023-03-07 22:34:32.786015', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, TIMESTAMP '2023-03-07 22:34:32.786016', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, TIMESTAMP '2023-03-07 22:34:32.786016', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, TIMESTAMP '2023-03-07 22:34:32.786016', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-10 15:34:47.529 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, TIMESTAMP '2023-03-07 22:34:32.818142', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, TIMESTAMP '2023-03-07 22:34:32.818142', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, TIMESTAMP '2023-03-07 22:34:32.818142', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, TIMESTAMP '2023-03-07 22:34:32.818142', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, TIMESTAMP '2023-03-07 22:34:32.818143', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, TIMESTAMP '2023-03-07 22:34:32.818143', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, TIMESTAMP '2023-03-07 22:34:32.818143', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, TIMESTAMP '2023-03-07 22:34:32.818143', NULL, NULL, 'Сомони', 972);
2023-03-10 15:34:47.712 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-07 22:34:32.786024', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-07 22:34:32.786024', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, TIMESTAMP '2023-03-07 22:34:32.786025', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, TIMESTAMP '2023-03-07 22:34:32.786026', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-10 15:34:47.935 +05:00 [INF] Executed DbCommand (222ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, 7.0, NULL, TIMESTAMP '2023-03-07 22:34:32.81814', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, 12.0, NULL, TIMESTAMP '2023-03-07 22:34:32.81814', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, 30.0, NULL, TIMESTAMP '2023-03-07 22:34:32.81814', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, 5.0, NULL, TIMESTAMP '2023-03-07 22:34:32.818141', NULL, 'Description', NULL, 'Авто');
2023-03-10 15:34:48.122 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-07 22:34:32.786002', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-07 22:34:32.786006', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-07 22:34:32.786006', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-07 22:34:32.786007', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-07 22:34:32.786007', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-07 22:34:32.786007', NULL, 'Выдан', NULL, 'Выдан');
2023-03-10 15:34:49.025 +05:00 [INF] Executed DbCommand (902ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 0.0, 1, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 0.0, 1, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 0.0, 2, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 0.0, 2, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 0.0, 3, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786018', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 0.0, 3, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.786019', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 0.0, 4, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786019', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 0.0, 4, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.786019', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, 0.0, 5, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.78602', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, 0.0, 5, NULL, 2, TIMESTAMP '2023-03-07 22:34:32.78602', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, 0.0, 6, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.78602', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, 0.0, 6, NULL, 5, TIMESTAMP '2023-03-07 22:34:32.78602', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-10 15:34:49.210 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-10 15:34:49.411 +05:00 [INF] Executed DbCommand (201ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-10 15:34:49.598 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786022', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786022', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786022', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786023', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786023', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, 0.0, NULL, 1, TIMESTAMP '2023-03-07 22:34:32.786023', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-10 15:34:49.781 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-10 15:34:49.967 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-10 15:34:50.159 +05:00 [INF] Executed DbCommand (192ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-10 15:34:50.340 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-10 15:34:50.524 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-10 15:34:50.701 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-10 15:34:50.879 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-10 15:34:51.056 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-10 15:34:51.233 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-10 15:34:51.409 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-10 15:34:51.585 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-10 15:34:51.765 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-10 15:34:51.945 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-10 15:34:52.125 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-10 15:34:52.312 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-10 15:34:52.510 +05:00 [INF] Executed DbCommand (197ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-10 15:34:52.715 +05:00 [INF] Executed DbCommand (205ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-10 15:34:52.901 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-10 15:34:53.080 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-10 15:34:53.259 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-10 15:34:53.447 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-10 15:34:53.631 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-10 15:34:53.808 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-10 15:34:53.991 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-10 15:34:54.178 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-10 15:34:54.774 +05:00 [INF] Executed DbCommand (596ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-10 15:34:54.953 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-10 15:34:55.145 +05:00 [INF] Executed DbCommand (192ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-10 15:34:55.323 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-10 15:34:55.503 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-10 15:34:55.707 +05:00 [INF] Executed DbCommand (204ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-10 15:34:55.891 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-10 15:34:56.068 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-10 15:34:56.246 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-10 15:34:56.475 +05:00 [INF] Executed DbCommand (229ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-10 15:34:56.654 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-10 15:34:56.832 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-10 15:34:57.011 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-10 15:34:57.214 +05:00 [INF] Executed DbCommand (202ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-10 15:34:57.397 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-10 15:34:57.574 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-10 15:34:57.753 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-10 15:34:57.931 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-10 15:34:58.107 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-10 15:34:58.290 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-10 15:34:58.466 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-10 15:34:58.644 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-10 15:34:58.826 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-10 15:34:59.005 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-10 15:34:59.184 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-10 15:34:59.372 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-10 15:34:59.552 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-10 15:34:59.729 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-10 15:34:59.925 +05:00 [INF] Executed DbCommand (196ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-10 15:35:00.104 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-10 15:35:00.295 +05:00 [INF] Executed DbCommand (191ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-10 15:35:00.474 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-10 15:35:00.650 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-10 15:35:00.829 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-10 15:35:01.007 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-10 15:35:01.185 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-10 15:35:01.361 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-10 15:35:01.536 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-10 15:35:01.715 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-10 15:35:01.890 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-10 15:35:02.075 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT setval(
    pg_get_serial_sequence('"AspNetRoles"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetRoles") + 1,
        nextval(pg_get_serial_sequence('"AspNetRoles"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUsers"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUsers") + 1,
        nextval(pg_get_serial_sequence('"AspNetUsers"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Branch"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Branch") + 1,
        nextval(pg_get_serial_sequence('"Branch"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Currency"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Currency") + 1,
        nextval(pg_get_serial_sequence('"Currency"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ExpenseType"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ExpenseType") + 1,
        nextval(pg_get_serial_sequence('"ExpenseType"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Plan"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Plan") + 1,
        nextval(pg_get_serial_sequence('"Plan"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Status"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Status") + 1,
        nextval(pg_get_serial_sequence('"Status"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Account"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Account") + 1,
        nextval(pg_get_serial_sequence('"Account"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUserClaims"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUserClaims") + 1,
        nextval(pg_get_serial_sequence('"AspNetUserClaims"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"UserAccount"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "UserAccount") + 1,
        nextval(pg_get_serial_sequence('"UserAccount"', 'Id'))),
    false);
2023-03-10 15:35:02.253 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20230307173432_myMigration01', '7.0.3');
