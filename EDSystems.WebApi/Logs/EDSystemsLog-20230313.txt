2023-03-13 11:21:31.430 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-13 11:21:31.814 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 11:21:31.815 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 11:21:31.815 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 11:21:31.815 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 11:21:31.815 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 11:21:31.815 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 11:21:31.815 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 11:21:31.815 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 11:21:31.816 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 11:21:34.245 +05:00 [INF] Executed DbCommand (208ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
REVOKE CONNECT ON DATABASE edsystemsdatabase FROM PUBLIC;
SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE datname = 'edsystemsdatabase';
2023-03-13 11:21:34.449 +05:00 [INF] Executed DbCommand (201ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE edsystemsdatabase;
2023-03-13 11:21:35.270 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-13 11:21:35.396 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 11:21:35.396 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 11:21:35.396 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 11:21:35.396 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 11:21:35.396 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 11:21:35.396 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 11:21:35.396 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 11:21:35.396 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 11:21:35.396 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 11:21:36.342 +05:00 [INF] Executed DbCommand (365ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE edsystemsdatabase;
2023-03-13 11:21:38.066 +05:00 [INF] Executed DbCommand (205ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-03-13 11:21:38.244 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" text NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-03-13 11:21:38.420 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Currency" PRIMARY KEY ("Id")
);
2023-03-13 11:21:38.596 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT "PK_Expenses" PRIMARY KEY ("Id")
);
2023-03-13 11:21:38.772 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ExpenseType" PRIMARY KEY ("Id")
);
2023-03-13 11:21:38.967 +05:00 [INF] Executed DbCommand (195ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Parcel" PRIMARY KEY ("Id")
);
2023-03-13 11:21:39.142 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Cost" numeric NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Plan" PRIMARY KEY ("Id")
);
2023-03-13 11:21:39.319 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "Token" text NULL,
    "JwtId" text NULL,
    "IsUsed" boolean NOT NULL,
    "IsRevoked" boolean NOT NULL,
    "AddedDateTime" timestamp without time zone NOT NULL,
    "ExpiryDateTime" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_RefreshToken" PRIMARY KEY ("Id")
);
2023-03-13 11:21:39.495 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Status" PRIMARY KEY ("Id")
);
2023-03-13 11:21:39.670 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TokenId" text NULL,
    "RefreshToken" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Tokens" PRIMARY KEY ("Id")
);
2023-03-13 11:21:39.875 +05:00 [INF] Executed DbCommand (205ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-13 11:21:40.056 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric(18,3) NOT NULL,
    "BranchId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Account" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-13 11:21:40.233 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ToBranchId" integer NOT NULL,
    "FromBranchId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelBranch" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 11:21:40.426 +05:00 [INF] Executed DbCommand (193ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StateDeliveryToBranch" boolean NOT NULL,
    "StatePickingUp" boolean NOT NULL,
    "StateDeliveryToPoint" boolean NOT NULL,
    "StateBuyout" boolean NOT NULL,
    "CostPickingUp" numeric(18,3) NOT NULL,
    "CostDeliveryToPoint" numeric(18,3) NOT NULL,
    "CostDeliveryToBranch" numeric(18,3) NOT NULL,
    "CostBuyout" numeric NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelCost" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 11:21:40.603 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Description" varchar NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelDescription" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 11:21:40.782 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelImage" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 11:21:40.958 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" text NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelItem" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 11:21:41.134 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Cost" numeric(18,3) NOT NULL,
    "CourierId" text NULL,
    "JobType" varchar NULL,
    "ParcelId" integer NOT NULL,
    "PaymentState" boolean NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelJob" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 11:21:41.329 +05:00 [INF] Executed DbCommand (194ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Weight" numeric(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSize" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 11:21:41.509 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSound" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 11:21:41.685 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PlanId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelPlan" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-13 11:21:41.861 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StatusId" integer NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelStatus" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-13 11:21:42.046 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NULL,
    "LastName" text NULL,
    "Address" text NULL,
    "UserNameT" text NULL,
    "ChatId" bigint NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "ParcelJobId" integer NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-13 11:21:42.271 +05:00 [INF] Executed DbCommand (225ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "PayerId" text NULL,
    "PayerId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_AccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 11:21:42.453 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 11:21:42.628 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 11:21:42.805 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" integer NOT NULL,
    "RoleId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 11:21:42.980 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" integer NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 11:21:43.183 +05:00 [INF] Executed DbCommand (202ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SenderId" text NULL,
    "SenderId1" integer NULL,
    "RecepientId" text NULL,
    "RecepientId1" integer NULL,
    "RecepientStaffId" text NULL,
    "RecepientStaffId1" integer NULL,
    "SenderStaffId" text NULL,
    "SenderStaffId1" integer NULL,
    "RecepientCourierId" text NULL,
    "RecepientCourierId1" integer NULL,
    "SenderCourierId" text NULL,
    "SenderCourierId1" integer NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelOwners" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 11:21:43.359 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccount" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-13 11:21:43.545 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-13 11:21:43.730 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, 'a1629b4b-554f-4f12-8c10-633dabca43f2', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '57006129-a2fc-494f-8712-0cf474d6cf6e', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '45395003-4598-4e1b-84cc-ca90a10a1b1f', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '8a51d98b-b69c-43df-83dc-ac04690a2b74', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '93d1c212-5c31-4296-9dae-3ba7eddfe511', 'Customer', 'CUSTOMER');
2023-03-13 11:21:43.909 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'a1233dc6-0d8c-46d1-b04b-17039ed7c123', TIMESTAMP '2023-03-13 11:21:35.268543', NULL, 'administrator@gmail.com', FALSE, 'EDSystem', 'Administrator', FALSE, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAENROC9xPoqjscJ4a3kDIc8XAhtIWGl0FXHNPADl1axMVo2tepw2l4n32pPmF5SssgQ==', '998970000675', FALSE, NULL, FALSE, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '727562e6-4018-4081-85a3-957bdcf981bd', TIMESTAMP '2023-03-13 11:21:35.268551', NULL, 'hayrulloh@gmail.com', FALSE, 'EDTashkent', 'Hayrulloh', FALSE, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAENROC9xPoqjscJ4a3kDIc8XAhtIWGl0FXHNPADl1axMVo2tepw2l4n32pPmF5SssgQ==', '998935788886', FALSE, NULL, FALSE, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '584218bb-6e70-4a46-a378-33d9dff378ad', TIMESTAMP '2023-03-13 11:21:35.268565', NULL, 'Nodir@gmail.com', FALSE, 'EDTashkent', 'Nodir', FALSE, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAENROC9xPoqjscJ4a3kDIc8XAhtIWGl0FXHNPADl1axMVo2tepw2l4n32pPmF5SssgQ==', '998909046605', FALSE, NULL, FALSE, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'b81edf60-c1d1-405b-aebe-3cdfbda3fcd1', TIMESTAMP '2023-03-13 11:21:35.268566', NULL, 'Javohir@gmail.com', FALSE, 'EDTashkent', 'Javohir', FALSE, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAENROC9xPoqjscJ4a3kDIc8XAhtIWGl0FXHNPADl1axMVo2tepw2l4n32pPmF5SssgQ==', '998931710966', FALSE, NULL, FALSE, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '5a7a7b79-f8de-4919-bf84-27e4a669144d', TIMESTAMP '2023-03-13 11:21:35.268566', NULL, 'Ismoil@gmail.com', FALSE, 'EDTashkent', 'Ismoil', FALSE, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAENROC9xPoqjscJ4a3kDIc8XAhtIWGl0FXHNPADl1axMVo2tepw2l4n32pPmF5SssgQ==', '998977093262', FALSE, NULL, FALSE, 'ismoil', 'UserName');
2023-03-13 11:21:44.084 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, TIMESTAMP '2023-03-13 11:21:35.181722', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, TIMESTAMP '2023-03-13 11:21:35.181723', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, TIMESTAMP '2023-03-13 11:21:35.181723', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, TIMESTAMP '2023-03-13 11:21:35.181723', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, TIMESTAMP '2023-03-13 11:21:35.181723', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, TIMESTAMP '2023-03-13 11:21:35.181724', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-13 11:21:44.260 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, TIMESTAMP '2023-03-13 11:21:35.268597', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, TIMESTAMP '2023-03-13 11:21:35.268597', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, TIMESTAMP '2023-03-13 11:21:35.268598', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, TIMESTAMP '2023-03-13 11:21:35.268598', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, TIMESTAMP '2023-03-13 11:21:35.268598', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, TIMESTAMP '2023-03-13 11:21:35.268598', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, TIMESTAMP '2023-03-13 11:21:35.268599', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, TIMESTAMP '2023-03-13 11:21:35.268599', NULL, NULL, 'Сомони', 972);
2023-03-13 11:21:44.438 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-13 11:21:35.181747', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-13 11:21:35.181748', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-13 11:21:35.181748', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-13 11:21:35.181748', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-13 11:21:35.181749', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-13 11:21:35.181749', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, TIMESTAMP '2023-03-13 11:21:35.181749', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, TIMESTAMP '2023-03-13 11:21:35.181749', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, TIMESTAMP '2023-03-13 11:21:35.181749', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, TIMESTAMP '2023-03-13 11:21:35.18175', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, TIMESTAMP '2023-03-13 11:21:35.18175', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, TIMESTAMP '2023-03-13 11:21:35.18175', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, TIMESTAMP '2023-03-13 11:21:35.18175', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-13 11:21:44.631 +05:00 [INF] Executed DbCommand (193ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, 7.0, NULL, TIMESTAMP '2023-03-13 11:21:35.268592', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, 12.0, NULL, TIMESTAMP '2023-03-13 11:21:35.268593', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, 30.0, NULL, TIMESTAMP '2023-03-13 11:21:35.268593', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, 5.0, NULL, TIMESTAMP '2023-03-13 11:21:35.268593', NULL, 'Description', NULL, 'Авто');
2023-03-13 11:21:44.806 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-13 11:21:35.181709', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-13 11:21:35.181713', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-13 11:21:35.181714', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-13 11:21:35.181715', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-13 11:21:35.181715', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-13 11:21:35.181715', NULL, 'Выдан', NULL, 'Выдан');
2023-03-13 11:21:44.989 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 0.0, 1, NULL, 1, TIMESTAMP '2023-03-13 11:21:35.181728', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 0.0, 1, NULL, 2, TIMESTAMP '2023-03-13 11:21:35.181729', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 0.0, 2, NULL, 1, TIMESTAMP '2023-03-13 11:21:35.181729', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 0.0, 2, NULL, 2, TIMESTAMP '2023-03-13 11:21:35.181734', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 0.0, 3, NULL, 1, TIMESTAMP '2023-03-13 11:21:35.181734', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 0.0, 3, NULL, 2, TIMESTAMP '2023-03-13 11:21:35.181734', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 0.0, 4, NULL, 1, TIMESTAMP '2023-03-13 11:21:35.181734', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 0.0, 4, NULL, 2, TIMESTAMP '2023-03-13 11:21:35.181735', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, 0.0, 5, NULL, 1, TIMESTAMP '2023-03-13 11:21:35.181735', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, 0.0, 5, NULL, 2, TIMESTAMP '2023-03-13 11:21:35.181735', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, 0.0, 6, NULL, 1, TIMESTAMP '2023-03-13 11:21:35.181735', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, 0.0, 6, NULL, 5, TIMESTAMP '2023-03-13 11:21:35.181736', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-13 11:21:45.170 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-13 11:21:45.348 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-13 11:21:45.547 +05:00 [INF] Executed DbCommand (199ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, 0.0, NULL, 1, TIMESTAMP '2023-03-13 11:21:35.18174', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, 0.0, NULL, 1, TIMESTAMP '2023-03-13 11:21:35.181741', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, 0.0, NULL, 1, TIMESTAMP '2023-03-13 11:21:35.181743', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, 0.0, NULL, 1, TIMESTAMP '2023-03-13 11:21:35.181744', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, 0.0, NULL, 1, TIMESTAMP '2023-03-13 11:21:35.181744', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, 0.0, NULL, 1, TIMESTAMP '2023-03-13 11:21:35.181744', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-13 11:21:45.721 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-13 11:21:45.896 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-13 11:21:46.069 +05:00 [INF] Executed DbCommand (173ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-13 11:21:46.244 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-13 11:21:46.439 +05:00 [INF] Executed DbCommand (195ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-13 11:21:46.615 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-13 11:21:46.789 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-13 11:21:47.353 +05:00 [INF] Executed DbCommand (563ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-13 11:21:47.549 +05:00 [INF] Executed DbCommand (196ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-13 11:21:47.725 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-13 11:21:47.905 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-13 11:21:48.082 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-13 11:21:48.260 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-13 11:21:48.442 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-13 11:21:48.622 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-13 11:21:48.801 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-13 11:21:48.982 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-13 11:21:49.157 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-13 11:21:49.339 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-13 11:21:49.513 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-13 11:21:49.688 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-13 11:21:49.863 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-13 11:21:50.037 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-13 11:21:50.211 +05:00 [INF] Executed DbCommand (173ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-13 11:21:50.385 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-13 11:21:50.559 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-13 11:21:50.733 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-13 11:21:50.911 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-13 11:21:51.089 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-13 11:21:51.272 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-13 11:21:51.448 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-13 11:21:51.627 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-13 11:21:51.803 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-13 11:21:51.980 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-13 11:21:52.167 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-13 11:21:52.344 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-13 11:21:52.520 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-13 11:21:52.695 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-13 11:21:52.873 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-13 11:21:53.052 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-13 11:21:53.230 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-13 11:21:53.405 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-13 11:21:53.589 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-13 11:21:53.775 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-13 11:21:53.950 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-13 11:21:54.126 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-13 11:21:54.306 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-13 11:21:54.484 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-13 11:21:54.663 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-13 11:21:54.850 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-13 11:21:55.032 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-13 11:21:55.208 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-13 11:21:55.385 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-13 11:21:55.577 +05:00 [INF] Executed DbCommand (192ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-13 11:21:55.773 +05:00 [INF] Executed DbCommand (195ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-13 11:21:55.952 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-13 11:21:56.126 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-13 11:21:56.301 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-13 11:21:56.484 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-13 11:21:56.684 +05:00 [INF] Executed DbCommand (200ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-13 11:21:56.862 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-13 11:21:57.042 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-13 11:21:57.250 +05:00 [INF] Executed DbCommand (209ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-13 11:21:57.427 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-13 11:21:57.606 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-13 11:21:57.791 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT setval(
    pg_get_serial_sequence('"AspNetRoles"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetRoles") + 1,
        nextval(pg_get_serial_sequence('"AspNetRoles"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUsers"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUsers") + 1,
        nextval(pg_get_serial_sequence('"AspNetUsers"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Branch"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Branch") + 1,
        nextval(pg_get_serial_sequence('"Branch"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Currency"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Currency") + 1,
        nextval(pg_get_serial_sequence('"Currency"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ExpenseType"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ExpenseType") + 1,
        nextval(pg_get_serial_sequence('"ExpenseType"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Plan"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Plan") + 1,
        nextval(pg_get_serial_sequence('"Plan"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Status"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Status") + 1,
        nextval(pg_get_serial_sequence('"Status"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Account"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Account") + 1,
        nextval(pg_get_serial_sequence('"Account"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUserClaims"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUserClaims") + 1,
        nextval(pg_get_serial_sequence('"AspNetUserClaims"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"UserAccount"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "UserAccount") + 1,
        nextval(pg_get_serial_sequence('"UserAccount"', 'Id'))),
    false);
2023-03-13 11:21:58.143 +05:00 [INF] User profile is available. Using '/Users/kdbiosdeveloper/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-13 11:21:58.955 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-13 11:21:58.955 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-13 11:21:58.987 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-13 11:21:58.987 +05:00 [INF] Hosting environment: Development
2023-03-13 11:21:58.987 +05:00 [INF] Content root path: /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-13 11:22:00.257 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-13 11:22:00.459 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 204.7340ms
2023-03-13 11:22:00.698 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-13 11:22:01.090 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 391.1866ms
2023-03-13 11:28:48.170 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-13 11:28:48.230 +05:00 [INF] CORS policy execution successful.
2023-03-13 11:28:48.434 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-13 11:28:48.462 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-13 11:28:50.895 +05:00 [INF] Executed DbCommand (410ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
FROM "AspNetUsers" AS a
WHERE a."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-13 11:28:55.634 +05:00 [INF] Executed DbCommand (1,922ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2023-03-13 11:28:56.851 +05:00 [INF] Executed DbCommand (232ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2023-03-13 11:28:57.747 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-13 11:28:58.508 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a."ClaimType", a."ClaimValue"
FROM "AspNetRoleClaims" AS a
WHERE a."RoleId" = @__role_Id_0
2023-03-13 11:29:00.810 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2023-03-13 11:29:02.174 +05:00 [INF] Executed DbCommand (356ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
FROM "AspNetUsers" AS a
WHERE a."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-13 11:29:03.213 +05:00 [INF] Executed DbCommand (325ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
FROM "AspNetUsers" AS a
WHERE a."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-13 11:29:03.428 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"1I31U8L3RNTA1TKP47CLZVU11MIVSQMJLDQ1302506c-5b5f-45e8-b91d-466bffe4c100","JwtId":"da152043-2db4-4e67-89aa-2fe06ffd22b9","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-13T06:29:03.3881060Z","ExpiryDateTime":"2023-09-13T06:29:03.3882030Z","$type":"RefreshTokenCommand"}
2023-03-13 11:29:05.547 +05:00 [INF] Executed DbCommand (239ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-13 11:29:05.678 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-13 11:29:05.757 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 17280.3595ms
2023-03-13 11:29:05.764 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-13 11:29:05.846 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 2464 application/json;+charset=utf-8 17676.3011ms
2023-03-13 11:30:14.228 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - -
2023-03-13 11:30:14.330 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 11:30:14.339 +05:00 [INF] Route matched with {action = "Get", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm]] Get(Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 11:30:14.347 +05:00 [INF] NotesRequest: GetUserDetailsQuery {"Id":2,"$type":"GetUserDetailsQuery"}
2023-03-13 11:30:14.503 +05:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-03-13 11:30:15.365 +05:00 [INF] Executed DbCommand (208ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Address", t."ChatId", t."ConcurrencyStamp", t."DateCreated", t."DateUpdated", t."Email", t."EmailConfirmed", t."FirstName", t."LastName", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."ParcelJobId", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."UserNameT", t0."UserId", t0."RoleId", t0."Id", t0."ConcurrencyStamp", t0."Name", t0."NormalizedName", a2."Id", a2."ClaimType", a2."ClaimValue", a2."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__request_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT a0."UserId", a0."RoleId", a1."Id", a1."ConcurrencyStamp", a1."Name", a1."NormalizedName"
    FROM "AspNetUserRoles" AS a0
    INNER JOIN "AspNetRoles" AS a1 ON a0."RoleId" = a1."Id"
) AS t0 ON t."Id" = t0."UserId"
LEFT JOIN "AspNetUserClaims" AS a2 ON t."Id" = a2."UserId"
ORDER BY t."Id", t0."UserId", t0."RoleId", t0."Id"
2023-03-13 11:30:15.414 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm'.
2023-03-13 11:30:15.439 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi) in 1099.9868ms
2023-03-13 11:30:15.439 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 11:30:15.439 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - - - 200 363 application/json;+charset=utf-8 1211.6923ms
2023-03-13 11:30:51.342 +05:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json-patch+json 244
2023-03-13 11:30:51.344 +05:00 [INF] CORS policy execution successful.
2023-03-13 11:30:51.351 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 11:30:51.360 +05:00 [INF] Route matched with {action = "Update", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(EDSystems.WebApi.Models.UserManager.UpdateUserDto) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 11:30:51.387 +05:00 [INF] NotesRequest: UpdateUserCommand {"Id":"2","FirstName":"Hayrulloh","LastName":"Hayrulloh","Address":"Республика Уasdasdsзбекистан, г. Ташкент, Кашгар 11, 100099","UserName":"hayrulloh","Email":null,"PhoneNumber":"998935788886","$type":"UpdateUserCommand"}
2023-03-13 11:30:52.232 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2023-03-13 11:30:52.569 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi) in 1208.6898ms
2023-03-13 11:30:52.570 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 11:30:52.572 +05:00 [ERR] An unhandled exception has occurred while executing the request.
System.InvalidOperationException: User security stamp cannot be null.
   at Microsoft.AspNetCore.Identity.UserManager`1.GetSecurityStampAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.ValidateUserAsync(TUser user)
   at Microsoft.AspNetCore.Identity.UserManager`1.UpdateUserAsync(TUser user)
   at EDSystems.Application.Users.Commands.UpdateUser.UpdateUserCommandHandler.Handle(UpdateUserCommand request, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/Users/Commands/UpdateUser/UpdateUserCommandHandler.cs:line 39
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.UserManagerController.Update(UpdateUserDto updateUserDto) in /Users/kdbiosdeveloper/Documents/XProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/UserManagerController.cs:line 160
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeInnerFilterAsync>g__Awaited|13_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-13 11:30:52.659 +05:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json-patch+json 244 - 500 - text/plain;+charset=utf-8 1317.2289ms
2023-03-13 22:03:36.427 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-13 22:03:36.524 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:03:36.524 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:03:36.524 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:03:36.524 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:03:36.524 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:03:36.524 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:03:36.524 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:03:36.524 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:03:36.524 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:03:38.934 +05:00 [INF] Executed DbCommand (205ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
REVOKE CONNECT ON DATABASE edsystemsdatabase FROM PUBLIC;
SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE datname = 'edsystemsdatabase';
2023-03-13 22:03:39.140 +05:00 [INF] Executed DbCommand (203ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE edsystemsdatabase;
2023-03-13 22:03:39.798 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-13 22:03:39.840 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:03:39.840 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:03:39.840 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:03:39.840 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:03:39.840 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:03:39.840 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:03:39.840 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:03:39.840 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:03:39.840 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:03:40.733 +05:00 [INF] Executed DbCommand (339ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE edsystemsdatabase;
2023-03-13 22:03:42.293 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-03-13 22:03:42.475 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" text NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-03-13 22:03:42.668 +05:00 [INF] Executed DbCommand (193ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Currency" PRIMARY KEY ("Id")
);
2023-03-13 22:03:42.846 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT "PK_Expenses" PRIMARY KEY ("Id")
);
2023-03-13 22:03:43.034 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ExpenseType" PRIMARY KEY ("Id")
);
2023-03-13 22:03:43.225 +05:00 [INF] Executed DbCommand (191ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Parcel" PRIMARY KEY ("Id")
);
2023-03-13 22:03:43.413 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Cost" numeric NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Plan" PRIMARY KEY ("Id")
);
2023-03-13 22:03:43.597 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "Token" text NULL,
    "JwtId" text NULL,
    "IsUsed" boolean NOT NULL,
    "IsRevoked" boolean NOT NULL,
    "AddedDateTime" timestamp without time zone NOT NULL,
    "ExpiryDateTime" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_RefreshToken" PRIMARY KEY ("Id")
);
2023-03-13 22:03:43.776 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Status" PRIMARY KEY ("Id")
);
2023-03-13 22:03:43.960 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TokenId" text NULL,
    "RefreshToken" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Tokens" PRIMARY KEY ("Id")
);
2023-03-13 22:03:44.140 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-13 22:03:44.318 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric(18,3) NOT NULL,
    "BranchId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Account" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-13 22:03:44.508 +05:00 [INF] Executed DbCommand (190ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ToBranchId" integer NOT NULL,
    "FromBranchId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelBranch" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:03:44.693 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StateDeliveryToBranch" boolean NOT NULL,
    "StatePickingUp" boolean NOT NULL,
    "StateDeliveryToPoint" boolean NOT NULL,
    "StateBuyout" boolean NOT NULL,
    "CostPickingUp" numeric(18,3) NOT NULL,
    "CostDeliveryToPoint" numeric(18,3) NOT NULL,
    "CostDeliveryToBranch" numeric(18,3) NOT NULL,
    "CostBuyout" numeric NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelCost" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:03:44.880 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Description" varchar NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelDescription" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:03:45.068 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelImage" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:03:45.255 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" text NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelItem" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:03:45.445 +05:00 [INF] Executed DbCommand (189ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Cost" numeric(18,3) NOT NULL,
    "CourierId" text NULL,
    "JobType" varchar NULL,
    "ParcelId" integer NOT NULL,
    "PaymentState" boolean NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelJob" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:03:45.640 +05:00 [INF] Executed DbCommand (195ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Weight" numeric(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSize" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:03:45.830 +05:00 [INF] Executed DbCommand (190ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSound" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:03:46.014 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PlanId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelPlan" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-13 22:03:46.193 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StatusId" integer NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelStatus" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-13 22:03:46.370 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NULL,
    "LastName" text NULL,
    "Address" text NULL,
    "UserNameT" text NULL,
    "ChatId" bigint NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "ParcelJobId" integer NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-13 22:03:46.553 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "PayerId" text NULL,
    "PayerId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_AccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:03:46.735 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:03:46.914 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:03:47.092 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" integer NOT NULL,
    "RoleId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:03:47.269 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" integer NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:03:47.451 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SenderId" text NULL,
    "SenderId1" integer NULL,
    "RecepientId" text NULL,
    "RecepientId1" integer NULL,
    "RecepientStaffId" text NULL,
    "RecepientStaffId1" integer NULL,
    "SenderStaffId" text NULL,
    "SenderStaffId1" integer NULL,
    "RecepientCourierId" text NULL,
    "RecepientCourierId1" integer NULL,
    "SenderCourierId" text NULL,
    "SenderCourierId1" integer NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelOwners" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:03:47.629 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccount" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-13 22:03:47.807 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-13 22:03:47.986 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '62ceca6b-aa06-4b2d-9840-a960a1cc633c', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, 'ce721882-41cb-46ba-8851-066cf722fef7', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '6d652fe5-99b7-43ef-aa8b-a4f84115192a', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '6a5358cf-290e-4227-9b45-fbb249e0bc1e', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '195ab4d2-4d02-4093-95b3-f6efa15bf6b6', 'Customer', 'CUSTOMER');
2023-03-13 22:03:48.163 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'ebb93b29-6c84-483e-80ed-d1a98c88d56d', TIMESTAMP '2023-03-13 22:03:39.798184', NULL, 'administrator@gmail.com', FALSE, 'EDSystem', 'Administrator', FALSE, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEGNSO3oGxjnWncaEb/RJhJHolYPLrgW0+S+y0mu8m58Q2cTVBKsSD6eLasGGjCBVzA==', '998970000675', FALSE, NULL, FALSE, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '28c0d21f-c4a6-449e-8a36-9afebddc11b9', TIMESTAMP '2023-03-13 22:03:39.798186', NULL, 'hayrulloh@gmail.com', FALSE, 'EDTashkent', 'Hayrulloh', FALSE, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEGNSO3oGxjnWncaEb/RJhJHolYPLrgW0+S+y0mu8m58Q2cTVBKsSD6eLasGGjCBVzA==', '998935788886', FALSE, NULL, FALSE, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '3a04f6ef-4f4d-4ff1-bae3-036f9f7cfbb3', TIMESTAMP '2023-03-13 22:03:39.798188', NULL, 'Nodir@gmail.com', FALSE, 'EDTashkent', 'Nodir', FALSE, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEGNSO3oGxjnWncaEb/RJhJHolYPLrgW0+S+y0mu8m58Q2cTVBKsSD6eLasGGjCBVzA==', '998909046605', FALSE, NULL, FALSE, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '5ee8f568-dead-404e-9b3e-be7145be60be', TIMESTAMP '2023-03-13 22:03:39.798189', NULL, 'Javohir@gmail.com', FALSE, 'EDTashkent', 'Javohir', FALSE, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEGNSO3oGxjnWncaEb/RJhJHolYPLrgW0+S+y0mu8m58Q2cTVBKsSD6eLasGGjCBVzA==', '998931710966', FALSE, NULL, FALSE, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '07a29ff6-9fb1-4c99-92b9-58750da58299', TIMESTAMP '2023-03-13 22:03:39.79819', NULL, 'Ismoil@gmail.com', FALSE, 'EDTashkent', 'Ismoil', FALSE, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEGNSO3oGxjnWncaEb/RJhJHolYPLrgW0+S+y0mu8m58Q2cTVBKsSD6eLasGGjCBVzA==', '998977093262', FALSE, NULL, FALSE, 'ismoil', 'UserName');
2023-03-13 22:03:48.339 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, TIMESTAMP '2023-03-13 22:03:39.764563', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, TIMESTAMP '2023-03-13 22:03:39.764564', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, TIMESTAMP '2023-03-13 22:03:39.764564', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, TIMESTAMP '2023-03-13 22:03:39.764564', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, TIMESTAMP '2023-03-13 22:03:39.764564', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, TIMESTAMP '2023-03-13 22:03:39.764565', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-13 22:03:48.517 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, TIMESTAMP '2023-03-13 22:03:39.798211', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, TIMESTAMP '2023-03-13 22:03:39.798211', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, TIMESTAMP '2023-03-13 22:03:39.798212', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, TIMESTAMP '2023-03-13 22:03:39.798212', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, TIMESTAMP '2023-03-13 22:03:39.798212', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, TIMESTAMP '2023-03-13 22:03:39.798212', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, TIMESTAMP '2023-03-13 22:03:39.798212', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, TIMESTAMP '2023-03-13 22:03:39.798212', NULL, NULL, 'Сомони', 972);
2023-03-13 22:03:48.697 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-13 22:03:39.764575', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-13 22:03:39.764575', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-13 22:03:39.764575', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-13 22:03:39.764575', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-13 22:03:39.764576', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-13 22:03:39.764576', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, TIMESTAMP '2023-03-13 22:03:39.764576', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, TIMESTAMP '2023-03-13 22:03:39.764576', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, TIMESTAMP '2023-03-13 22:03:39.764576', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, TIMESTAMP '2023-03-13 22:03:39.764576', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, TIMESTAMP '2023-03-13 22:03:39.764577', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, TIMESTAMP '2023-03-13 22:03:39.764577', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, TIMESTAMP '2023-03-13 22:03:39.764577', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-13 22:03:48.873 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, 7.0, NULL, TIMESTAMP '2023-03-13 22:03:39.798209', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, 12.0, NULL, TIMESTAMP '2023-03-13 22:03:39.798209', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, 30.0, NULL, TIMESTAMP '2023-03-13 22:03:39.798209', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, 5.0, NULL, TIMESTAMP '2023-03-13 22:03:39.798209', NULL, 'Description', NULL, 'Авто');
2023-03-13 22:03:49.051 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-13 22:03:39.764552', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-13 22:03:39.764558', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-13 22:03:39.764558', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-13 22:03:39.764559', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-13 22:03:39.764559', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-13 22:03:39.764559', NULL, 'Выдан', NULL, 'Выдан');
2023-03-13 22:03:49.228 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 0.0, 1, NULL, 1, TIMESTAMP '2023-03-13 22:03:39.764567', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 0.0, 1, NULL, 2, TIMESTAMP '2023-03-13 22:03:39.764567', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 0.0, 2, NULL, 1, TIMESTAMP '2023-03-13 22:03:39.764567', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 0.0, 2, NULL, 2, TIMESTAMP '2023-03-13 22:03:39.764567', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 0.0, 3, NULL, 1, TIMESTAMP '2023-03-13 22:03:39.764568', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 0.0, 3, NULL, 2, TIMESTAMP '2023-03-13 22:03:39.764568', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 0.0, 4, NULL, 1, TIMESTAMP '2023-03-13 22:03:39.764568', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 0.0, 4, NULL, 2, TIMESTAMP '2023-03-13 22:03:39.764568', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, 0.0, 5, NULL, 1, TIMESTAMP '2023-03-13 22:03:39.764568', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, 0.0, 5, NULL, 2, TIMESTAMP '2023-03-13 22:03:39.764568', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, 0.0, 6, NULL, 1, TIMESTAMP '2023-03-13 22:03:39.764569', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, 0.0, 6, NULL, 5, TIMESTAMP '2023-03-13 22:03:39.764569', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-13 22:03:49.407 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-13 22:03:49.584 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-13 22:03:49.766 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, 0.0, NULL, 1, TIMESTAMP '2023-03-13 22:03:39.764571', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, 0.0, NULL, 1, TIMESTAMP '2023-03-13 22:03:39.764571', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, 0.0, NULL, 1, TIMESTAMP '2023-03-13 22:03:39.764572', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, 0.0, NULL, 1, TIMESTAMP '2023-03-13 22:03:39.764573', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, 0.0, NULL, 1, TIMESTAMP '2023-03-13 22:03:39.764573', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, 0.0, NULL, 1, TIMESTAMP '2023-03-13 22:03:39.764573', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-13 22:03:49.941 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-13 22:03:50.123 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-13 22:03:50.298 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-13 22:03:50.475 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-13 22:03:50.650 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-13 22:03:50.830 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-13 22:03:51.013 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-13 22:03:51.190 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-13 22:03:51.367 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-13 22:03:51.545 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-13 22:03:51.723 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-13 22:03:51.899 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-13 22:03:52.076 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-13 22:03:52.253 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-13 22:03:52.428 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-13 22:03:52.603 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-13 22:03:52.781 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-13 22:03:52.958 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-13 22:03:53.135 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-13 22:03:53.316 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-13 22:03:53.503 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-13 22:03:53.692 +05:00 [INF] Executed DbCommand (189ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-13 22:03:53.875 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-13 22:03:54.051 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-13 22:03:54.226 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-13 22:03:54.403 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-13 22:03:54.580 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-13 22:03:54.755 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-13 22:03:54.931 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-13 22:03:55.114 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-13 22:03:55.291 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-13 22:03:55.468 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-13 22:03:55.646 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-13 22:03:55.824 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-13 22:03:56.004 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-13 22:03:56.185 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-13 22:03:56.365 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-13 22:03:56.541 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-13 22:03:56.726 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-13 22:03:56.904 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-13 22:03:57.089 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-13 22:03:57.272 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-13 22:03:57.459 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-13 22:03:57.643 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-13 22:03:57.831 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-13 22:03:58.015 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-13 22:03:58.196 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-13 22:03:58.376 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-13 22:03:58.556 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-13 22:03:58.734 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-13 22:03:58.914 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-13 22:03:59.090 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-13 22:03:59.266 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-13 22:03:59.444 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-13 22:03:59.620 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-13 22:03:59.795 +05:00 [INF] Executed DbCommand (174ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-13 22:03:59.980 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-13 22:04:00.158 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-13 22:04:00.337 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-13 22:04:00.521 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-13 22:04:00.704 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-13 22:04:00.880 +05:00 [INF] Executed DbCommand (175ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-13 22:04:01.057 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-13 22:04:01.238 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-13 22:04:01.426 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-13 22:04:01.611 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT setval(
    pg_get_serial_sequence('"AspNetRoles"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetRoles") + 1,
        nextval(pg_get_serial_sequence('"AspNetRoles"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUsers"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUsers") + 1,
        nextval(pg_get_serial_sequence('"AspNetUsers"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Branch"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Branch") + 1,
        nextval(pg_get_serial_sequence('"Branch"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Currency"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Currency") + 1,
        nextval(pg_get_serial_sequence('"Currency"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ExpenseType"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ExpenseType") + 1,
        nextval(pg_get_serial_sequence('"ExpenseType"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Plan"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Plan") + 1,
        nextval(pg_get_serial_sequence('"Plan"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Status"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Status") + 1,
        nextval(pg_get_serial_sequence('"Status"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Account"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Account") + 1,
        nextval(pg_get_serial_sequence('"Account"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUserClaims"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUserClaims") + 1,
        nextval(pg_get_serial_sequence('"AspNetUserClaims"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"UserAccount"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "UserAccount") + 1,
        nextval(pg_get_serial_sequence('"UserAccount"', 'Id'))),
    false);
2023-03-13 22:04:01.850 +05:00 [INF] User profile is available. Using '/Users/a_ashurov/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-13 22:04:02.044 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-13 22:04:02.069 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-13 22:04:02.097 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-13 22:04:02.097 +05:00 [INF] Hosting environment: Development
2023-03-13 22:04:02.097 +05:00 [INF] Content root path: /Users/a_ashurov/Desktop/MyFutureProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-13 22:04:04.238 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-13 22:04:04.296 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 59.3106ms
2023-03-13 22:04:04.455 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-13 22:04:04.641 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/apple-touch-icon-precomposed.png - -
2023-03-13 22:04:04.663 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/apple-touch-icon-precomposed.png - - - 404 0 - 21.5390ms
2023-03-13 22:04:04.735 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/apple-touch-icon.png - -
2023-03-13 22:04:04.736 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/apple-touch-icon.png - - - 404 0 - 1.2340ms
2023-03-13 22:04:04.897 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 442.6213ms
2023-03-13 22:04:29.123 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-13 22:04:29.218 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:04:29.218 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:04:29.218 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:04:29.218 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:04:29.218 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:04:29.218 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:04:29.218 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:04:29.218 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:04:29.219 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:04:31.299 +05:00 [INF] Executed DbCommand (204ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
REVOKE CONNECT ON DATABASE edsystemsdatabase FROM PUBLIC;
SELECT pg_terminate_backend(pg_stat_activity.pid) FROM pg_stat_activity WHERE datname = 'edsystemsdatabase';
2023-03-13 22:04:31.492 +05:00 [INF] Executed DbCommand (192ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DROP DATABASE edsystemsdatabase;
2023-03-13 22:04:32.146 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-13 22:04:32.187 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:04:32.187 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:04:32.187 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:04:32.187 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:04:32.187 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:04:32.187 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:04:32.187 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:04:32.187 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:04:32.187 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:04:33.021 +05:00 [INF] Executed DbCommand (299ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE DATABASE edsystemsdatabase;
2023-03-13 22:04:34.563 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "NormalizedName" character varying(256) NULL,
    "ConcurrencyStamp" text NULL,
    "Name" character varying(256) NULL,
    CONSTRAINT "PK_AspNetRoles" PRIMARY KEY ("Id")
);
2023-03-13 22:04:34.743 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" text NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Branch" PRIMARY KEY ("Id")
);
2023-03-13 22:04:34.920 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Currency" PRIMARY KEY ("Id")
);
2023-03-13 22:04:35.105 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    CONSTRAINT "PK_Expenses" PRIMARY KEY ("Id")
);
2023-03-13 22:04:35.290 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ExpenseType" PRIMARY KEY ("Id")
);
2023-03-13 22:04:35.495 +05:00 [INF] Executed DbCommand (204ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Code" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Parcel" PRIMARY KEY ("Id")
);
2023-03-13 22:04:35.695 +05:00 [INF] Executed DbCommand (199ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar NULL,
    "Cost" numeric NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Plan" PRIMARY KEY ("Id")
);
2023-03-13 22:04:35.900 +05:00 [INF] Executed DbCommand (204ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "Token" text NULL,
    "JwtId" text NULL,
    "IsUsed" boolean NOT NULL,
    "IsRevoked" boolean NOT NULL,
    "AddedDateTime" timestamp without time zone NOT NULL,
    "ExpiryDateTime" timestamp without time zone NOT NULL,
    CONSTRAINT "PK_RefreshToken" PRIMARY KEY ("Id")
);
2023-03-13 22:04:36.100 +05:00 [INF] Executed DbCommand (199ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" text NULL,
    "Description" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Status" PRIMARY KEY ("Id")
);
2023-03-13 22:04:36.301 +05:00 [INF] Executed DbCommand (200ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "TokenId" text NULL,
    "RefreshToken" text NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Tokens" PRIMARY KEY ("Id")
);
2023-03-13 22:04:36.502 +05:00 [INF] Executed DbCommand (201ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "RoleId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-13 22:04:36.709 +05:00 [INF] Executed DbCommand (206ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric(18,3) NOT NULL,
    "BranchId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_Account" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-13 22:04:36.914 +05:00 [INF] Executed DbCommand (204ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ToBranchId" integer NOT NULL,
    "FromBranchId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelBranch" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:04:37.110 +05:00 [INF] Executed DbCommand (195ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StateDeliveryToBranch" boolean NOT NULL,
    "StatePickingUp" boolean NOT NULL,
    "StateDeliveryToPoint" boolean NOT NULL,
    "StateBuyout" boolean NOT NULL,
    "CostPickingUp" numeric(18,3) NOT NULL,
    "CostDeliveryToPoint" numeric(18,3) NOT NULL,
    "CostDeliveryToBranch" numeric(18,3) NOT NULL,
    "CostBuyout" numeric NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelCost" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:04:37.301 +05:00 [INF] Executed DbCommand (191ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Description" varchar NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelDescription" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:04:37.481 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelImage" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:04:37.663 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Name" varchar(200) NULL,
    "Description" text NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelItem" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:04:37.843 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Cost" numeric(18,3) NOT NULL,
    "CourierId" text NULL,
    "JobType" varchar NULL,
    "ParcelId" integer NOT NULL,
    "PaymentState" boolean NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelJob" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:04:38.027 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Weight" numeric(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSize" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:04:38.209 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelSound" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:04:38.387 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "PlanId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelPlan" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-13 22:04:38.571 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "StatusId" integer NULL,
    "ParcelId" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelStatus" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-13 22:04:38.755 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "FirstName" text NULL,
    "LastName" text NULL,
    "Address" text NULL,
    "UserNameT" text NULL,
    "ChatId" bigint NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "ParcelJobId" integer NULL,
    "UserName" character varying(256) NULL,
    "NormalizedUserName" character varying(256) NULL,
    "Email" character varying(256) NULL,
    "NormalizedEmail" character varying(256) NULL,
    "EmailConfirmed" boolean NOT NULL,
    "PasswordHash" text NULL,
    "SecurityStamp" text NULL,
    "ConcurrencyStamp" text NULL,
    "PhoneNumber" text NULL,
    "PhoneNumberConfirmed" boolean NOT NULL,
    "TwoFactorEnabled" boolean NOT NULL,
    "LockoutEnd" timestamp with time zone NULL,
    "LockoutEnabled" boolean NOT NULL,
    "AccessFailedCount" integer NOT NULL,
    CONSTRAINT "PK_AspNetUsers" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-13 22:04:38.934 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "PayerId" text NULL,
    "PayerId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_AccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:04:39.115 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "UserId" integer NOT NULL,
    "ClaimType" text NULL,
    "ClaimValue" text NULL,
    CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:04:39.295 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" text NOT NULL,
    "ProviderKey" text NOT NULL,
    "ProviderDisplayName" text NULL,
    "UserId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:04:39.474 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" integer NOT NULL,
    "RoleId" integer NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:04:39.656 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" integer NOT NULL,
    "LoginProvider" text NOT NULL,
    "Name" text NOT NULL,
    "Value" text NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:04:39.840 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "SenderId" text NULL,
    "SenderId1" integer NULL,
    "RecepientId" text NULL,
    "RecepientId1" integer NULL,
    "RecepientStaffId" text NULL,
    "RecepientStaffId1" integer NULL,
    "SenderStaffId" text NULL,
    "SenderStaffId1" integer NULL,
    "RecepientCourierId" text NULL,
    "RecepientCourierId1" integer NULL,
    "SenderCourierId" text NULL,
    "SenderCourierId1" integer NULL,
    "ParcelId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_ParcelOwners" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:04:40.020 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" numeric NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "CurrencyId" integer NOT NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccount" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-13 22:04:40.203 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    "Amount" numeric(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" integer NOT NULL,
    "CurrencyId" integer NOT NULL,
    "ParcelId" integer NOT NULL,
    "UserId" text NULL,
    "UserId1" integer NULL,
    "DateCreated" timestamp without time zone NOT NULL,
    "DateUpdated" timestamp without time zone NULL,
    "CreatedBy" text NULL,
    "ModifiedBy" text NULL,
    CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY ("Id"),
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-13 22:04:40.394 +05:00 [INF] Executed DbCommand (190ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '8154d5a6-c507-462a-b1fb-7d251b321f54', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '02dddc82-41b8-4e1e-9f21-b93e3fa84c25', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '49bf131c-3b54-40ad-8e1c-ea38a1e8ec0f', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '782b168d-b51a-493b-b738-0993f940673c', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '3e05a5dd-6fb8-4770-b7f3-d49557de15c1', 'Customer', 'CUSTOMER');
2023-03-13 22:04:40.579 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '0d17266e-b3b3-43ec-8b63-1e69dbbe62b2', TIMESTAMP '2023-03-13 22:04:32.14555', NULL, 'administrator@gmail.com', FALSE, 'EDSystem', 'Administrator', FALSE, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAENK6ZvOslrPJnBTuriocmpn7Z7U30lBGfYii9rVb5Tp3KIalbE5Iuem3z6bTQFm4vA==', '998970000675', FALSE, NULL, FALSE, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '87eaa0ae-17c8-466f-8262-8f6e106a8b89', TIMESTAMP '2023-03-13 22:04:32.145552', NULL, 'hayrulloh@gmail.com', FALSE, 'EDTashkent', 'Hayrulloh', FALSE, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAENK6ZvOslrPJnBTuriocmpn7Z7U30lBGfYii9rVb5Tp3KIalbE5Iuem3z6bTQFm4vA==', '998935788886', FALSE, NULL, FALSE, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '93330112-c192-440a-a0a7-9bd3eb2c1c8b', TIMESTAMP '2023-03-13 22:04:32.145553', NULL, 'Nodir@gmail.com', FALSE, 'EDTashkent', 'Nodir', FALSE, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAENK6ZvOslrPJnBTuriocmpn7Z7U30lBGfYii9rVb5Tp3KIalbE5Iuem3z6bTQFm4vA==', '998909046605', FALSE, NULL, FALSE, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '00e2563a-21b3-4437-9e45-290b880abcc9', TIMESTAMP '2023-03-13 22:04:32.145554', NULL, 'Javohir@gmail.com', FALSE, 'EDTashkent', 'Javohir', FALSE, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAENK6ZvOslrPJnBTuriocmpn7Z7U30lBGfYii9rVb5Tp3KIalbE5Iuem3z6bTQFm4vA==', '998931710966', FALSE, NULL, FALSE, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '43a82f9e-e479-4a09-bf5b-4dfdcf738b8f', TIMESTAMP '2023-03-13 22:04:32.145555', NULL, 'Ismoil@gmail.com', FALSE, 'EDTashkent', 'Ismoil', FALSE, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAENK6ZvOslrPJnBTuriocmpn7Z7U30lBGfYii9rVb5Tp3KIalbE5Iuem3z6bTQFm4vA==', '998977093262', FALSE, NULL, FALSE, 'ismoil', 'UserName');
2023-03-13 22:04:40.761 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, TIMESTAMP '2023-03-13 22:04:32.111839', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, TIMESTAMP '2023-03-13 22:04:32.111839', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, TIMESTAMP '2023-03-13 22:04:32.11184', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, TIMESTAMP '2023-03-13 22:04:32.11184', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, TIMESTAMP '2023-03-13 22:04:32.11184', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, TIMESTAMP '2023-03-13 22:04:32.111841', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-13 22:04:40.945 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, TIMESTAMP '2023-03-13 22:04:32.145569', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, TIMESTAMP '2023-03-13 22:04:32.145569', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, TIMESTAMP '2023-03-13 22:04:32.14557', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, TIMESTAMP '2023-03-13 22:04:32.14557', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, TIMESTAMP '2023-03-13 22:04:32.14557', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, TIMESTAMP '2023-03-13 22:04:32.14557', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, TIMESTAMP '2023-03-13 22:04:32.14557', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, TIMESTAMP '2023-03-13 22:04:32.14557', NULL, NULL, 'Сомони', 972);
2023-03-13 22:04:41.137 +05:00 [INF] Executed DbCommand (191ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-13 22:04:32.111853', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-13 22:04:32.111853', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-13 22:04:32.111854', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-13 22:04:32.111854', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-13 22:04:32.111854', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-13 22:04:32.111854', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, TIMESTAMP '2023-03-13 22:04:32.111854', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, TIMESTAMP '2023-03-13 22:04:32.111854', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, TIMESTAMP '2023-03-13 22:04:32.111854', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, TIMESTAMP '2023-03-13 22:04:32.111855', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, TIMESTAMP '2023-03-13 22:04:32.111855', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, TIMESTAMP '2023-03-13 22:04:32.111855', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, TIMESTAMP '2023-03-13 22:04:32.111855', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-13 22:04:41.316 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, 7.0, NULL, TIMESTAMP '2023-03-13 22:04:32.145567', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, 12.0, NULL, TIMESTAMP '2023-03-13 22:04:32.145567', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, 30.0, NULL, TIMESTAMP '2023-03-13 22:04:32.145568', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, 5.0, NULL, TIMESTAMP '2023-03-13 22:04:32.145568', NULL, 'Description', NULL, 'Авто');
2023-03-13 22:04:41.506 +05:00 [INF] Executed DbCommand (190ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, TIMESTAMP '2023-03-13 22:04:32.111831', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, TIMESTAMP '2023-03-13 22:04:32.111833', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, TIMESTAMP '2023-03-13 22:04:32.111834', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, TIMESTAMP '2023-03-13 22:04:32.111834', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, TIMESTAMP '2023-03-13 22:04:32.111834', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, TIMESTAMP '2023-03-13 22:04:32.111835', NULL, 'Выдан', NULL, 'Выдан');
2023-03-13 22:04:41.693 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 0.0, 1, NULL, 1, TIMESTAMP '2023-03-13 22:04:32.111845', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 0.0, 1, NULL, 2, TIMESTAMP '2023-03-13 22:04:32.111845', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 0.0, 2, NULL, 1, TIMESTAMP '2023-03-13 22:04:32.111845', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 0.0, 2, NULL, 2, TIMESTAMP '2023-03-13 22:04:32.111845', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 0.0, 3, NULL, 1, TIMESTAMP '2023-03-13 22:04:32.111845', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 0.0, 3, NULL, 2, TIMESTAMP '2023-03-13 22:04:32.111846', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 0.0, 4, NULL, 1, TIMESTAMP '2023-03-13 22:04:32.111846', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 0.0, 4, NULL, 2, TIMESTAMP '2023-03-13 22:04:32.111846', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, 0.0, 5, NULL, 1, TIMESTAMP '2023-03-13 22:04:32.111846', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, 0.0, 5, NULL, 2, TIMESTAMP '2023-03-13 22:04:32.111847', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, 0.0, 6, NULL, 1, TIMESTAMP '2023-03-13 22:04:32.111847', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, 0.0, 6, NULL, 5, TIMESTAMP '2023-03-13 22:04:32.111847', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-13 22:04:41.877 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-13 22:04:42.055 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-13 22:04:42.244 +05:00 [INF] Executed DbCommand (189ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, 0.0, NULL, 1, TIMESTAMP '2023-03-13 22:04:32.111849', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, 0.0, NULL, 1, TIMESTAMP '2023-03-13 22:04:32.111849', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, 0.0, NULL, 1, TIMESTAMP '2023-03-13 22:04:32.111851', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, 0.0, NULL, 1, TIMESTAMP '2023-03-13 22:04:32.111851', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, 0.0, NULL, 1, TIMESTAMP '2023-03-13 22:04:32.111851', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, 0.0, NULL, 1, TIMESTAMP '2023-03-13 22:04:32.111851', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-13 22:04:42.436 +05:00 [INF] Executed DbCommand (191ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-13 22:04:42.626 +05:00 [INF] Executed DbCommand (190ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-13 22:04:42.821 +05:00 [INF] Executed DbCommand (194ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-13 22:04:43.003 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-13 22:04:43.191 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-13 22:04:43.380 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-13 22:04:43.573 +05:00 [INF] Executed DbCommand (193ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-13 22:04:43.761 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-13 22:04:43.952 +05:00 [INF] Executed DbCommand (190ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-13 22:04:44.146 +05:00 [INF] Executed DbCommand (193ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-13 22:04:44.331 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-13 22:04:44.515 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-13 22:04:44.693 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-13 22:04:44.876 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-13 22:04:45.058 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-13 22:04:45.248 +05:00 [INF] Executed DbCommand (190ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-13 22:04:45.449 +05:00 [INF] Executed DbCommand (201ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-13 22:04:45.655 +05:00 [INF] Executed DbCommand (205ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-13 22:04:45.853 +05:00 [INF] Executed DbCommand (198ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-13 22:04:46.040 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-13 22:04:46.233 +05:00 [INF] Executed DbCommand (192ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-13 22:04:46.436 +05:00 [INF] Executed DbCommand (203ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-13 22:04:46.619 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-13 22:04:46.798 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-13 22:04:46.979 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-13 22:04:47.163 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-13 22:04:47.348 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-13 22:04:47.539 +05:00 [INF] Executed DbCommand (191ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-13 22:04:47.728 +05:00 [INF] Executed DbCommand (189ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-13 22:04:47.921 +05:00 [INF] Executed DbCommand (193ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-13 22:04:48.102 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-13 22:04:48.308 +05:00 [INF] Executed DbCommand (205ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-13 22:04:48.502 +05:00 [INF] Executed DbCommand (193ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-13 22:04:48.697 +05:00 [INF] Executed DbCommand (195ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-13 22:04:48.895 +05:00 [INF] Executed DbCommand (197ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-13 22:04:49.095 +05:00 [INF] Executed DbCommand (200ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-13 22:04:49.302 +05:00 [INF] Executed DbCommand (206ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-13 22:04:49.690 +05:00 [INF] Executed DbCommand (388ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-13 22:04:49.882 +05:00 [INF] Executed DbCommand (191ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-13 22:04:50.078 +05:00 [INF] Executed DbCommand (196ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-13 22:04:50.276 +05:00 [INF] Executed DbCommand (197ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-13 22:04:50.470 +05:00 [INF] Executed DbCommand (194ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-13 22:04:50.653 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-13 22:04:50.840 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-13 22:04:51.020 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-13 22:04:51.207 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-13 22:04:51.395 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-13 22:04:51.581 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-13 22:04:51.770 +05:00 [INF] Executed DbCommand (189ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-13 22:04:51.948 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-13 22:04:52.128 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-13 22:04:52.304 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-13 22:04:52.480 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-13 22:04:52.665 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-13 22:04:52.847 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-13 22:04:53.028 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-13 22:04:53.207 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-13 22:04:53.384 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-13 22:04:53.563 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-13 22:04:53.742 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-13 22:04:53.920 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-13 22:04:54.107 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-13 22:04:54.284 +05:00 [INF] Executed DbCommand (177ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-13 22:04:54.472 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-13 22:04:54.664 +05:00 [INF] Executed DbCommand (192ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-13 22:04:54.860 +05:00 [INF] Executed DbCommand (196ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT setval(
    pg_get_serial_sequence('"AspNetRoles"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetRoles") + 1,
        nextval(pg_get_serial_sequence('"AspNetRoles"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUsers"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUsers") + 1,
        nextval(pg_get_serial_sequence('"AspNetUsers"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Branch"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Branch") + 1,
        nextval(pg_get_serial_sequence('"Branch"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Currency"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Currency") + 1,
        nextval(pg_get_serial_sequence('"Currency"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"ExpenseType"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "ExpenseType") + 1,
        nextval(pg_get_serial_sequence('"ExpenseType"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Plan"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Plan") + 1,
        nextval(pg_get_serial_sequence('"Plan"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Status"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Status") + 1,
        nextval(pg_get_serial_sequence('"Status"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"Account"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "Account") + 1,
        nextval(pg_get_serial_sequence('"Account"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"AspNetUserClaims"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "AspNetUserClaims") + 1,
        nextval(pg_get_serial_sequence('"AspNetUserClaims"', 'Id'))),
    false);
SELECT setval(
    pg_get_serial_sequence('"UserAccount"', 'Id'),
    GREATEST(
        (SELECT MAX("Id") FROM "UserAccount") + 1,
        nextval(pg_get_serial_sequence('"UserAccount"', 'Id'))),
    false);
2023-03-13 22:04:55.096 +05:00 [INF] User profile is available. Using '/Users/a_ashurov/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-13 22:04:55.292 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-13 22:04:55.293 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-13 22:04:55.293 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-13 22:04:55.293 +05:00 [INF] Hosting environment: Development
2023-03-13 22:04:55.293 +05:00 [INF] Content root path: /Users/a_ashurov/Desktop/MyFutureProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-13 22:04:56.507 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-13 22:04:56.566 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 59.8449ms
2023-03-13 22:04:56.572 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/swagger-ui-bundle.js - -
2023-03-13 22:04:56.573 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/swagger-ui.css - -
2023-03-13 22:04:56.592 +05:00 [INF] Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
2023-03-13 22:04:56.743 +05:00 [INF] Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
2023-03-13 22:04:56.769 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/swagger-ui-bundle.js - - - 200 1061536 text/javascript 172.1552ms
2023-03-13 22:04:56.769 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/swagger-ui.css - - - 200 144929 text/css 171.1784ms
2023-03-13 22:04:56.770 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/swagger-ui-standalone-preset.js - -
2023-03-13 22:04:56.798 +05:00 [INF] Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
2023-03-13 22:04:56.799 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/swagger-ui-standalone-preset.js - - - 200 312163 text/javascript 28.5431ms
2023-03-13 22:04:56.830 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-13 22:04:57.059 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 228.1685ms
2023-03-13 22:05:24.539 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-13 22:05:24.568 +05:00 [INF] CORS policy execution successful.
2023-03-13 22:05:24.589 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-13 22:05:24.598 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-13 22:05:26.073 +05:00 [INF] Executed DbCommand (210ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
FROM "AspNetUsers" AS a
WHERE a."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-13 22:05:26.967 +05:00 [INF] Executed DbCommand (190ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ClaimType", a."ClaimValue", a."UserId"
FROM "AspNetUserClaims" AS a
WHERE a."UserId" = @__user_Id_0
2023-03-13 22:05:27.767 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2023-03-13 22:05:28.523 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[@__normalizedName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."ConcurrencyStamp", a."Name", a."NormalizedName"
FROM "AspNetRoles" AS a
WHERE a."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-13 22:05:29.313 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a."ClaimType", a."ClaimValue"
FROM "AspNetRoleClaims" AS a
WHERE a."RoleId" = @__role_Id_0
2023-03-13 22:05:30.057 +05:00 [INF] Executed DbCommand (186ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a0."Name"
FROM "AspNetUserRoles" AS a
INNER JOIN "AspNetRoles" AS a0 ON a."RoleId" = a0."Id"
WHERE a."UserId" = @__userId_0
2023-03-13 22:05:30.795 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
FROM "AspNetUsers" AS a
WHERE a."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-13 22:05:31.522 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[@__normalizedEmail_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
FROM "AspNetUsers" AS a
WHERE a."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-13 22:05:31.613 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"QRYOZCV3CHO5GXQS5YZQZ5EJFCN4J9UKE15aba4259a-f2b4-46ea-a4dd-8cebe267fcf0","JwtId":"c1e207a1-8c35-4705-9fed-b524663a2c2d","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-13T17:05:31.6045340Z","ExpiryDateTime":"2023-09-13T17:05:31.6045610Z","$type":"RefreshTokenCommand"}
2023-03-13 22:05:32.444 +05:00 [INF] Executed DbCommand (198ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?', @p5='?', @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-13 22:05:32.505 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-13 22:05:32.518 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 7918.3653ms
2023-03-13 22:05:32.518 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-13 22:05:32.521 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 2464 application/json;+charset=utf-8 7981.9823ms
2023-03-13 22:05:50.455 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - -
2023-03-13 22:05:50.504 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:05:50.507 +05:00 [INF] Route matched with {action = "Get", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm]] Get(Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:05:50.511 +05:00 [INF] NotesRequest: GetUserDetailsQuery {"Id":2,"$type":"GetUserDetailsQuery"}
2023-03-13 22:05:50.561 +05:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-03-13 22:05:51.490 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Address", t."ChatId", t."ConcurrencyStamp", t."DateCreated", t."DateUpdated", t."Email", t."EmailConfirmed", t."FirstName", t."LastName", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."ParcelJobId", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."UserNameT", t0."UserId", t0."RoleId", t0."Id", t0."ConcurrencyStamp", t0."Name", t0."NormalizedName", a2."Id", a2."ClaimType", a2."ClaimValue", a2."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__request_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT a0."UserId", a0."RoleId", a1."Id", a1."ConcurrencyStamp", a1."Name", a1."NormalizedName"
    FROM "AspNetUserRoles" AS a0
    INNER JOIN "AspNetRoles" AS a1 ON a0."RoleId" = a1."Id"
) AS t0 ON t."Id" = t0."UserId"
LEFT JOIN "AspNetUserClaims" AS a2 ON t."Id" = a2."UserId"
ORDER BY t."Id", t0."UserId", t0."RoleId", t0."Id"
2023-03-13 22:05:51.529 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm'.
2023-03-13 22:05:51.539 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi) in 1031.4552ms
2023-03-13 22:05:51.539 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:05:51.539 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - - - 200 363 application/json;+charset=utf-8 1083.8049ms
2023-03-13 22:06:20.550 +05:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json-patch+json 195
2023-03-13 22:06:20.551 +05:00 [INF] CORS policy execution successful.
2023-03-13 22:06:20.557 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:06:20.560 +05:00 [INF] Route matched with {action = "Update", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(EDSystems.WebApi.Models.UserManager.UpdateUserDto) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:06:20.570 +05:00 [INF] NotesRequest: UpdateUserCommand {"Id":"2","FirstName":"Aziz","LastName":"Aziz","Address":"Azizzasdas, г. Ташкент, Кашгар 11, 100099","UserName":"asdasdas","Email":null,"PhoneNumber":"998935788886","$type":"UpdateUserCommand"}
2023-03-13 22:06:21.650 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2023-03-13 22:06:22.408 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[@__normalizedUserName_0='?'], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
FROM "AspNetUsers" AS a
WHERE a."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2023-03-13 22:06:23.188 +05:00 [INF] Executed DbCommand (189ms) [Parameters=[@p22='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?', @p2='?' (DbType = Int64), @p3='?', @p23='?', @p4='?' (DbType = DateTime), @p5='?' (DbType = DateTime), @p6='?', @p7='?' (DbType = Boolean), @p8='?', @p9='?', @p10='?' (DbType = Boolean), @p11='?' (DbType = DateTimeOffset), @p12='?', @p13='?', @p14='?' (DbType = Int32), @p15='?', @p16='?', @p17='?' (DbType = Boolean), @p18='?', @p19='?' (DbType = Boolean), @p20='?', @p21='?'], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "Address" = @p1, "ChatId" = @p2, "ConcurrencyStamp" = @p3, "DateCreated" = @p4, "DateUpdated" = @p5, "Email" = @p6, "EmailConfirmed" = @p7, "FirstName" = @p8, "LastName" = @p9, "LockoutEnabled" = @p10, "LockoutEnd" = @p11, "NormalizedEmail" = @p12, "NormalizedUserName" = @p13, "ParcelJobId" = @p14, "PasswordHash" = @p15, "PhoneNumber" = @p16, "PhoneNumberConfirmed" = @p17, "SecurityStamp" = @p18, "TwoFactorEnabled" = @p19, "UserName" = @p20, "UserNameT" = @p21
WHERE "Id" = @p22 AND "ConcurrencyStamp" = @p23;
2023-03-13 22:06:23.210 +05:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2023-03-13 22:06:23.210 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi) in 2649.509ms
2023-03-13 22:06:23.210 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:06:23.211 +05:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json-patch+json 195 - 204 - - 2661.3044ms
2023-03-13 22:08:58.322 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - -
2023-03-13 22:08:58.325 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:08:58.326 +05:00 [INF] Route matched with {action = "Get", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm]] Get(Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:08:58.326 +05:00 [INF] NotesRequest: GetUserDetailsQuery {"Id":2,"$type":"GetUserDetailsQuery"}
2023-03-13 22:08:59.332 +05:00 [INF] Executed DbCommand (184ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Address", t."ChatId", t."ConcurrencyStamp", t."DateCreated", t."DateUpdated", t."Email", t."EmailConfirmed", t."FirstName", t."LastName", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."ParcelJobId", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."UserNameT", t0."UserId", t0."RoleId", t0."Id", t0."ConcurrencyStamp", t0."Name", t0."NormalizedName", a2."Id", a2."ClaimType", a2."ClaimValue", a2."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__request_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT a0."UserId", a0."RoleId", a1."Id", a1."ConcurrencyStamp", a1."Name", a1."NormalizedName"
    FROM "AspNetUserRoles" AS a0
    INNER JOIN "AspNetRoles" AS a1 ON a0."RoleId" = a1."Id"
) AS t0 ON t."Id" = t0."UserId"
LEFT JOIN "AspNetUserClaims" AS a2 ON t."Id" = a2."UserId"
ORDER BY t."Id", t0."UserId", t0."RoleId", t0."Id"
2023-03-13 22:08:59.339 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm'.
2023-03-13 22:08:59.340 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi) in 1014.664ms
2023-03-13 22:08:59.340 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:08:59.341 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - - - 200 344 application/json;+charset=utf-8 1019.0226ms
2023-03-13 22:09:15.542 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/WithPagination?PageNumber=1&PageSize=3 - -
2023-03-13 22:09:15.543 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-13 22:09:15.553 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserListWithPagination.UserListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:09:15.578 +05:00 [INF] NotesRequest: GetUserListWithPaginationQuery {"PageNumber":1,"PageSize":3,"$type":"GetUserListWithPaginationQuery"}
2023-03-13 22:09:16.596 +05:00 [INF] Executed DbCommand (180ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "AspNetUsers" AS a
2023-03-13 22:09:17.446 +05:00 [INF] Executed DbCommand (277ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.c, t."FirstName", t."LastName", t."Address", t."PhoneNumber", t."Id", t0."UserId", t0."RoleId", t0."Id", t0."ConcurrencyStamp", t0."Name", t0."NormalizedName", t."DateCreated", t."DateUpdated"
FROM (
    SELECT a."Id"::text AS c, a."FirstName", a."LastName", a."Address", a."PhoneNumber", a."DateCreated", a."DateUpdated", a."Id"
    FROM "AspNetUsers" AS a
    ORDER BY a."DateCreated"
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT a0."UserId", a0."RoleId", a1."Id", a1."ConcurrencyStamp", a1."Name", a1."NormalizedName"
    FROM "AspNetUserRoles" AS a0
    INNER JOIN "AspNetRoles" AS a1 ON a0."RoleId" = a1."Id"
) AS t0 ON t."Id" = t0."UserId"
ORDER BY t."DateCreated", t."Id", t0."UserId", t0."RoleId"
2023-03-13 22:09:17.461 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.Users.Queries.GetUserListWithPagination.UserLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-13 22:09:17.478 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.GetAllWithPagination (EDSystems.WebApi) in 1924.7397ms
2023-03-13 22:09:17.478 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-13 22:09:17.479 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/WithPagination?PageNumber=1&PageSize=3 - - - 200 926 application/json;+charset=utf-8 1936.7121ms
2023-03-13 22:10:11.429 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - -
2023-03-13 22:10:11.433 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:10:11.433 +05:00 [INF] Route matched with {action = "Get", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm]] Get(Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:10:11.434 +05:00 [INF] NotesRequest: GetUserDetailsQuery {"Id":2,"$type":"GetUserDetailsQuery"}
2023-03-13 22:10:12.472 +05:00 [INF] Executed DbCommand (187ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Address", t."ChatId", t."ConcurrencyStamp", t."DateCreated", t."DateUpdated", t."Email", t."EmailConfirmed", t."FirstName", t."LastName", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."ParcelJobId", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."UserNameT", t0."UserId", t0."RoleId", t0."Id", t0."ConcurrencyStamp", t0."Name", t0."NormalizedName", a2."Id", a2."ClaimType", a2."ClaimValue", a2."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__request_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT a0."UserId", a0."RoleId", a1."Id", a1."ConcurrencyStamp", a1."Name", a1."NormalizedName"
    FROM "AspNetUserRoles" AS a0
    INNER JOIN "AspNetRoles" AS a1 ON a0."RoleId" = a1."Id"
) AS t0 ON t."Id" = t0."UserId"
LEFT JOIN "AspNetUserClaims" AS a2 ON t."Id" = a2."UserId"
ORDER BY t."Id", t0."UserId", t0."RoleId", t0."Id"
2023-03-13 22:10:12.475 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm'.
2023-03-13 22:10:12.477 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi) in 1043.6818ms
2023-03-13 22:10:12.478 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:10:12.478 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - - - 200 344 application/json;+charset=utf-8 1048.5017ms
2023-03-13 22:10:16.323 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - -
2023-03-13 22:10:16.324 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:10:16.324 +05:00 [INF] Route matched with {action = "Get", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm]] Get(Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:10:16.324 +05:00 [INF] NotesRequest: GetUserDetailsQuery {"Id":2,"$type":"GetUserDetailsQuery"}
2023-03-13 22:10:17.058 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Address", t."ChatId", t."ConcurrencyStamp", t."DateCreated", t."DateUpdated", t."Email", t."EmailConfirmed", t."FirstName", t."LastName", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."ParcelJobId", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."UserNameT", t0."UserId", t0."RoleId", t0."Id", t0."ConcurrencyStamp", t0."Name", t0."NormalizedName", a2."Id", a2."ClaimType", a2."ClaimValue", a2."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__request_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT a0."UserId", a0."RoleId", a1."Id", a1."ConcurrencyStamp", a1."Name", a1."NormalizedName"
    FROM "AspNetUserRoles" AS a0
    INNER JOIN "AspNetRoles" AS a1 ON a0."RoleId" = a1."Id"
) AS t0 ON t."Id" = t0."UserId"
LEFT JOIN "AspNetUserClaims" AS a2 ON t."Id" = a2."UserId"
ORDER BY t."Id", t0."UserId", t0."RoleId", t0."Id"
2023-03-13 22:10:17.061 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm'.
2023-03-13 22:10:17.062 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi) in 738.1296ms
2023-03-13 22:10:17.062 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:10:17.063 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - - - 200 344 application/json;+charset=utf-8 739.8436ms
2023-03-13 22:13:04.443 +05:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 237
2023-03-13 22:13:04.444 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:13:04.444 +05:00 [INF] Route matched with {action = "Update", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(EDSystems.WebApi.Models.UserManager.UpdateUserDto) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:13:04.445 +05:00 [INF] NotesRequest: UpdateUserCommand {"Id":"2","FirstName":"asdddasdasdasdasd","LastName":"asdddasdasdasdasd","Address":"Республика fghfgh, г. Ташкент, Кашгар 11, 100099 Updated","UserName":null,"Email":null,"PhoneNumber":"9989400000","$type":"UpdateUserCommand"}
2023-03-13 22:13:05.442 +05:00 [INF] Executed DbCommand (183ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2023-03-13 22:13:05.459 +05:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2023-03-13 22:13:05.459 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi) in 1014.9917ms
2023-03-13 22:13:05.459 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:13:05.460 +05:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 237 - 204 - - 1017.4007ms
2023-03-13 22:13:13.522 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - -
2023-03-13 22:13:13.523 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:13:13.523 +05:00 [INF] Route matched with {action = "Get", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm]] Get(Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:13:13.525 +05:00 [INF] NotesRequest: GetUserDetailsQuery {"Id":2,"$type":"GetUserDetailsQuery"}
2023-03-13 22:13:14.243 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Address", t."ChatId", t."ConcurrencyStamp", t."DateCreated", t."DateUpdated", t."Email", t."EmailConfirmed", t."FirstName", t."LastName", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."ParcelJobId", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."UserNameT", t0."UserId", t0."RoleId", t0."Id", t0."ConcurrencyStamp", t0."Name", t0."NormalizedName", a2."Id", a2."ClaimType", a2."ClaimValue", a2."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__request_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT a0."UserId", a0."RoleId", a1."Id", a1."ConcurrencyStamp", a1."Name", a1."NormalizedName"
    FROM "AspNetUserRoles" AS a0
    INNER JOIN "AspNetRoles" AS a1 ON a0."RoleId" = a1."Id"
) AS t0 ON t."Id" = t0."UserId"
LEFT JOIN "AspNetUserClaims" AS a2 ON t."Id" = a2."UserId"
ORDER BY t."Id", t0."UserId", t0."RoleId", t0."Id"
2023-03-13 22:13:14.246 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm'.
2023-03-13 22:13:14.246 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi) in 723.2202ms
2023-03-13 22:13:14.246 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:13:14.247 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - - - 200 344 application/json;+charset=utf-8 724.6552ms
2023-03-13 22:13:16.719 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - -
2023-03-13 22:13:16.720 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:13:16.720 +05:00 [INF] Route matched with {action = "Get", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm]] Get(Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:13:16.720 +05:00 [INF] NotesRequest: GetUserDetailsQuery {"Id":2,"$type":"GetUserDetailsQuery"}
2023-03-13 22:13:17.482 +05:00 [INF] Executed DbCommand (198ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Address", t."ChatId", t."ConcurrencyStamp", t."DateCreated", t."DateUpdated", t."Email", t."EmailConfirmed", t."FirstName", t."LastName", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."ParcelJobId", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."UserNameT", t0."UserId", t0."RoleId", t0."Id", t0."ConcurrencyStamp", t0."Name", t0."NormalizedName", a2."Id", a2."ClaimType", a2."ClaimValue", a2."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__request_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT a0."UserId", a0."RoleId", a1."Id", a1."ConcurrencyStamp", a1."Name", a1."NormalizedName"
    FROM "AspNetUserRoles" AS a0
    INNER JOIN "AspNetRoles" AS a1 ON a0."RoleId" = a1."Id"
) AS t0 ON t."Id" = t0."UserId"
LEFT JOIN "AspNetUserClaims" AS a2 ON t."Id" = a2."UserId"
ORDER BY t."Id", t0."UserId", t0."RoleId", t0."Id"
2023-03-13 22:13:17.486 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm'.
2023-03-13 22:13:17.487 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi) in 767.2117ms
2023-03-13 22:13:17.488 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:13:17.488 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - - - 200 344 application/json;+charset=utf-8 769.2428ms
2023-03-13 22:13:18.244 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - -
2023-03-13 22:13:18.245 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:13:18.246 +05:00 [INF] Route matched with {action = "Get", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm]] Get(Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:13:18.246 +05:00 [INF] NotesRequest: GetUserDetailsQuery {"Id":2,"$type":"GetUserDetailsQuery"}
2023-03-13 22:13:18.960 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Address", t."ChatId", t."ConcurrencyStamp", t."DateCreated", t."DateUpdated", t."Email", t."EmailConfirmed", t."FirstName", t."LastName", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."ParcelJobId", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."UserNameT", t0."UserId", t0."RoleId", t0."Id", t0."ConcurrencyStamp", t0."Name", t0."NormalizedName", a2."Id", a2."ClaimType", a2."ClaimValue", a2."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__request_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT a0."UserId", a0."RoleId", a1."Id", a1."ConcurrencyStamp", a1."Name", a1."NormalizedName"
    FROM "AspNetUserRoles" AS a0
    INNER JOIN "AspNetRoles" AS a1 ON a0."RoleId" = a1."Id"
) AS t0 ON t."Id" = t0."UserId"
LEFT JOIN "AspNetUserClaims" AS a2 ON t."Id" = a2."UserId"
ORDER BY t."Id", t0."UserId", t0."RoleId", t0."Id"
2023-03-13 22:13:18.963 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm'.
2023-03-13 22:13:18.964 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi) in 718.4597ms
2023-03-13 22:13:18.964 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:13:18.965 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - - - 200 344 application/json;+charset=utf-8 720.6566ms
2023-03-13 22:13:19.546 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - -
2023-03-13 22:13:19.547 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:13:19.547 +05:00 [INF] Route matched with {action = "Get", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm]] Get(Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:13:19.548 +05:00 [INF] NotesRequest: GetUserDetailsQuery {"Id":2,"$type":"GetUserDetailsQuery"}
2023-03-13 22:13:20.258 +05:00 [INF] Executed DbCommand (178ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Address", t."ChatId", t."ConcurrencyStamp", t."DateCreated", t."DateUpdated", t."Email", t."EmailConfirmed", t."FirstName", t."LastName", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."ParcelJobId", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."UserNameT", t0."UserId", t0."RoleId", t0."Id", t0."ConcurrencyStamp", t0."Name", t0."NormalizedName", a2."Id", a2."ClaimType", a2."ClaimValue", a2."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__request_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT a0."UserId", a0."RoleId", a1."Id", a1."ConcurrencyStamp", a1."Name", a1."NormalizedName"
    FROM "AspNetUserRoles" AS a0
    INNER JOIN "AspNetRoles" AS a1 ON a0."RoleId" = a1."Id"
) AS t0 ON t."Id" = t0."UserId"
LEFT JOIN "AspNetUserClaims" AS a2 ON t."Id" = a2."UserId"
ORDER BY t."Id", t0."UserId", t0."RoleId", t0."Id"
2023-03-13 22:13:20.259 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm'.
2023-03-13 22:13:20.260 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi) in 713.0541ms
2023-03-13 22:13:20.261 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:13:20.261 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - - - 200 344 application/json;+charset=utf-8 714.7780ms
2023-03-13 22:13:20.779 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - -
2023-03-13 22:13:20.780 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:13:20.780 +05:00 [INF] Route matched with {action = "Get", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm]] Get(Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:13:20.781 +05:00 [INF] NotesRequest: GetUserDetailsQuery {"Id":2,"$type":"GetUserDetailsQuery"}
2023-03-13 22:13:21.767 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Address", t."ChatId", t."ConcurrencyStamp", t."DateCreated", t."DateUpdated", t."Email", t."EmailConfirmed", t."FirstName", t."LastName", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."ParcelJobId", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."UserNameT", t0."UserId", t0."RoleId", t0."Id", t0."ConcurrencyStamp", t0."Name", t0."NormalizedName", a2."Id", a2."ClaimType", a2."ClaimValue", a2."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__request_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT a0."UserId", a0."RoleId", a1."Id", a1."ConcurrencyStamp", a1."Name", a1."NormalizedName"
    FROM "AspNetUserRoles" AS a0
    INNER JOIN "AspNetRoles" AS a1 ON a0."RoleId" = a1."Id"
) AS t0 ON t."Id" = t0."UserId"
LEFT JOIN "AspNetUserClaims" AS a2 ON t."Id" = a2."UserId"
ORDER BY t."Id", t0."UserId", t0."RoleId", t0."Id"
2023-03-13 22:13:21.771 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm'.
2023-03-13 22:13:21.772 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi) in 992.155ms
2023-03-13 22:13:21.773 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:13:21.773 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - - - 200 344 application/json;+charset=utf-8 994.0540ms
2023-03-13 22:13:32.528 +05:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 231
2023-03-13 22:13:32.529 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:13:32.530 +05:00 [INF] Route matched with {action = "Update", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(EDSystems.WebApi.Models.UserManager.UpdateUserDto) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:13:32.531 +05:00 [INF] NotesRequest: UpdateUserCommand {"Id":"2","FirstName":"asdddasdasdasdasd","LastName":"asdddasdasdasdasd","Address":"Республика fghfgh, г. Ташкент, Кашгар 11, 100099 Updated","UserName":null,"Email":null,"PhoneNumber":"9989400000","$type":"UpdateUserCommand"}
2023-03-13 22:13:33.233 +05:00 [INF] Executed DbCommand (176ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2023-03-13 22:13:33.235 +05:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2023-03-13 22:13:33.235 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi) in 705.734ms
2023-03-13 22:13:33.236 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:13:33.236 +05:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 231 - 204 - - 708.0219ms
2023-03-13 22:13:55.999 +05:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 231
2023-03-13 22:13:56.026 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:13:56.026 +05:00 [INF] Route matched with {action = "Update", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(EDSystems.WebApi.Models.UserManager.UpdateUserDto) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:13:56.027 +05:00 [INF] NotesRequest: UpdateUserCommand {"Id":"2","FirstName":"asdddasdasdasdasd","LastName":"asdddasdasdasdasd","Address":"Республика fghfgh, г. Ташкент, Кашгар 11, 100099 Updated","UserName":null,"Email":null,"PhoneNumber":"9989400000","$type":"UpdateUserCommand"}
2023-03-13 22:13:57.021 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2023-03-13 22:13:57.024 +05:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2023-03-13 22:13:57.025 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi) in 998.5705ms
2023-03-13 22:13:57.025 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:13:57.026 +05:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 231 - 204 - - 1026.3030ms
2023-03-13 22:14:02.274 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - -
2023-03-13 22:14:02.276 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:14:02.276 +05:00 [INF] Route matched with {action = "Get", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm]] Get(Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:14:02.277 +05:00 [INF] NotesRequest: GetUserDetailsQuery {"Id":2,"$type":"GetUserDetailsQuery"}
2023-03-13 22:14:03.035 +05:00 [INF] Executed DbCommand (188ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t."Id", t."AccessFailedCount", t."Address", t."ChatId", t."ConcurrencyStamp", t."DateCreated", t."DateUpdated", t."Email", t."EmailConfirmed", t."FirstName", t."LastName", t."LockoutEnabled", t."LockoutEnd", t."NormalizedEmail", t."NormalizedUserName", t."ParcelJobId", t."PasswordHash", t."PhoneNumber", t."PhoneNumberConfirmed", t."SecurityStamp", t."TwoFactorEnabled", t."UserName", t."UserNameT", t0."UserId", t0."RoleId", t0."Id", t0."ConcurrencyStamp", t0."Name", t0."NormalizedName", a2."Id", a2."ClaimType", a2."ClaimValue", a2."UserId"
FROM (
    SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
    FROM "AspNetUsers" AS a
    WHERE a."Id" = @__request_Id_0
    LIMIT 1
) AS t
LEFT JOIN (
    SELECT a0."UserId", a0."RoleId", a1."Id", a1."ConcurrencyStamp", a1."Name", a1."NormalizedName"
    FROM "AspNetUserRoles" AS a0
    INNER JOIN "AspNetRoles" AS a1 ON a0."RoleId" = a1."Id"
) AS t0 ON t."Id" = t0."UserId"
LEFT JOIN "AspNetUserClaims" AS a2 ON t."Id" = a2."UserId"
ORDER BY t."Id", t0."UserId", t0."RoleId", t0."Id"
2023-03-13 22:14:03.037 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm'.
2023-03-13 22:14:03.038 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi) in 761.6069ms
2023-03-13 22:14:03.038 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:14:03.040 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - - - 200 344 application/json;+charset=utf-8 765.2228ms
2023-03-13 22:14:58.220 +05:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 226
2023-03-13 22:14:58.223 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:14:58.223 +05:00 [INF] Route matched with {action = "Update", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(EDSystems.WebApi.Models.UserManager.UpdateUserDto) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:14:58.224 +05:00 [INF] NotesRequest: UpdateUserCommand {"Id":"2","FirstName":"asdddasdasdasdasd","LastName":"asdddasdasdasdasd","Address":"Республика fghfgh, г. Ташкент, Кашгар 11, 100099 Updated","UserName":null,"Email":null,"PhoneNumber":"9989400000","$type":"UpdateUserCommand"}
2023-03-13 22:14:59.234 +05:00 [INF] Executed DbCommand (185ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT a."Id", a."AccessFailedCount", a."Address", a."ChatId", a."ConcurrencyStamp", a."DateCreated", a."DateUpdated", a."Email", a."EmailConfirmed", a."FirstName", a."LastName", a."LockoutEnabled", a."LockoutEnd", a."NormalizedEmail", a."NormalizedUserName", a."ParcelJobId", a."PasswordHash", a."PhoneNumber", a."PhoneNumberConfirmed", a."SecurityStamp", a."TwoFactorEnabled", a."UserName", a."UserNameT"
FROM "AspNetUsers" AS a
WHERE a."Id" = @__p_0
LIMIT 1
2023-03-13 22:14:59.236 +05:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2023-03-13 22:14:59.237 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi) in 1013.2202ms
2023-03-13 22:14:59.237 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:14:59.237 +05:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 226 - 204 - - 1016.8720ms
2023-03-13 22:15:08.562 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/WithPagination?PageNumber=1&PageSize=3 - -
2023-03-13 22:15:08.563 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-13 22:15:08.564 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserListWithPagination.UserListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:15:08.566 +05:00 [INF] NotesRequest: GetUserListWithPaginationQuery {"PageNumber":1,"PageSize":3,"$type":"GetUserListWithPaginationQuery"}
2023-03-13 22:15:09.314 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "AspNetUsers" AS a
2023-03-13 22:15:10.046 +05:00 [INF] Executed DbCommand (182ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.c, t."FirstName", t."LastName", t."Address", t."PhoneNumber", t."Id", t0."UserId", t0."RoleId", t0."Id", t0."ConcurrencyStamp", t0."Name", t0."NormalizedName", t."DateCreated", t."DateUpdated"
FROM (
    SELECT a."Id"::text AS c, a."FirstName", a."LastName", a."Address", a."PhoneNumber", a."DateCreated", a."DateUpdated", a."Id"
    FROM "AspNetUsers" AS a
    ORDER BY a."DateCreated"
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT a0."UserId", a0."RoleId", a1."Id", a1."ConcurrencyStamp", a1."Name", a1."NormalizedName"
    FROM "AspNetUserRoles" AS a0
    INNER JOIN "AspNetRoles" AS a1 ON a0."RoleId" = a1."Id"
) AS t0 ON t."Id" = t0."UserId"
ORDER BY t."DateCreated", t."Id", t0."UserId", t0."RoleId"
2023-03-13 22:15:10.048 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.Users.Queries.GetUserListWithPagination.UserLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-13 22:15:10.051 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.GetAllWithPagination (EDSystems.WebApi) in 1486.9788ms
2023-03-13 22:15:10.051 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-13 22:15:10.051 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/WithPagination?PageNumber=1&PageSize=3 - - - 200 926 application/json;+charset=utf-8 1489.4800ms
2023-03-13 22:15:12.720 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/WithPagination?PageNumber=1&PageSize=3 - -
2023-03-13 22:15:12.721 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-13 22:15:12.722 +05:00 [INF] Route matched with {action = "GetAllWithPagination", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserListWithPagination.UserListVmWithPagination]] GetAllWithPagination(Int32, Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:15:12.724 +05:00 [INF] NotesRequest: GetUserListWithPaginationQuery {"PageNumber":1,"PageSize":3,"$type":"GetUserListWithPaginationQuery"}
2023-03-13 22:15:13.461 +05:00 [INF] Executed DbCommand (181ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT count(*)::int
FROM "AspNetUsers" AS a
2023-03-13 22:15:14.179 +05:00 [INF] Executed DbCommand (179ms) [Parameters=[@__p_1='?' (DbType = Int32), @__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT t.c, t."FirstName", t."LastName", t."Address", t."PhoneNumber", t."Id", t0."UserId", t0."RoleId", t0."Id", t0."ConcurrencyStamp", t0."Name", t0."NormalizedName", t."DateCreated", t."DateUpdated"
FROM (
    SELECT a."Id"::text AS c, a."FirstName", a."LastName", a."Address", a."PhoneNumber", a."DateCreated", a."DateUpdated", a."Id"
    FROM "AspNetUsers" AS a
    ORDER BY a."DateCreated"
    LIMIT @__p_1 OFFSET @__p_0
) AS t
LEFT JOIN (
    SELECT a0."UserId", a0."RoleId", a1."Id", a1."ConcurrencyStamp", a1."Name", a1."NormalizedName"
    FROM "AspNetUserRoles" AS a0
    INNER JOIN "AspNetRoles" AS a1 ON a0."RoleId" = a1."Id"
) AS t0 ON t."Id" = t0."UserId"
ORDER BY t."DateCreated", t."Id", t0."UserId", t0."RoleId"
2023-03-13 22:15:14.181 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Common.Models.PaginatedList`1[[EDSystems.Application.Users.Queries.GetUserListWithPagination.UserLookupDtoWithPagination, EDSystems.Application, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
2023-03-13 22:15:14.182 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.GetAllWithPagination (EDSystems.WebApi) in 1460.4625ms
2023-03-13 22:15:14.182 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.GetAllWithPagination (EDSystems.WebApi)'
2023-03-13 22:15:14.183 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/WithPagination?PageNumber=1&PageSize=3 - - - 200 926 application/json;+charset=utf-8 1462.2113ms
2023-03-13 22:20:18.390 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-13 22:20:18.484 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:20:18.484 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:20:18.484 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:20:18.484 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:20:18.484 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:20:18.484 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:20:18.484 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:20:18.484 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:20:18.484 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:20:18.569 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-13 22:20:18.657 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-13 22:20:18.697 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:20:18.697 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:20:18.697 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:20:18.697 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:20:18.697 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:20:18.697 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:20:18.697 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:20:18.697 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:20:18.697 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" TEXT NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:20:18.779 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:20:18.780 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-13 22:20:18.780 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-13 22:20:18.780 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-13 22:20:18.780 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:20:18.780 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:20:18.780 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:20:18.780 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:20:18.780 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:20:18.780 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:20:18.780 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-13 22:20:18.780 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-13 22:20:18.780 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, 'd591cea9-e2ae-49ca-945a-f957cae5bd7c', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '31736544-f646-4573-93f6-1283f4ae83fb', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '7b1e3d3a-35cd-4185-a621-e867f619cc81', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, 'd16dc1de-ff30-495e-8097-885ebce33892', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, 'd7b15644-735e-4c34-aca2-71cfdd15d243', 'Customer', 'CUSTOMER');
2023-03-13 22:20:18.780 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '5af8057d-b6d1-475c-a657-22ff76d1fc12', '2023-03-13 22:20:18.657156', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEJzrz1Z/az64iil11iIb5YI3saquvzk8Rq43dIKpKg45IjodA5zAM8Q15kZB7reUDw==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '380151f6-3e89-4786-a5eb-2504dd19be95', '2023-03-13 22:20:18.657158', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEJzrz1Z/az64iil11iIb5YI3saquvzk8Rq43dIKpKg45IjodA5zAM8Q15kZB7reUDw==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '16501821-5f0a-416d-95ee-6e1541c1a96e', '2023-03-13 22:20:18.657159', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEJzrz1Z/az64iil11iIb5YI3saquvzk8Rq43dIKpKg45IjodA5zAM8Q15kZB7reUDw==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'cdc98a51-e9b4-4f16-9042-e373ee695f15', '2023-03-13 22:20:18.65716', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEJzrz1Z/az64iil11iIb5YI3saquvzk8Rq43dIKpKg45IjodA5zAM8Q15kZB7reUDw==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '18e52882-cbee-4388-b8a1-bc71047be17e', '2023-03-13 22:20:18.657161', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEJzrz1Z/az64iil11iIb5YI3saquvzk8Rq43dIKpKg45IjodA5zAM8Q15kZB7reUDw==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-13 22:20:18.780 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-13 22:20:18.623857', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-13 22:20:18.623857', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-13 22:20:18.623858', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-13 22:20:18.623858', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-13 22:20:18.623858', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-13 22:20:18.623859', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-13 22:20:18.657181', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-13 22:20:18.657181', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-13 22:20:18.657181', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-13 22:20:18.657181', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-13 22:20:18.657182', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-13 22:20:18.657182', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-13 22:20:18.657182', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-13 22:20:18.657182', NULL, NULL, 'Сомони', 972);
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-13 22:20:18.623867', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-13 22:20:18.623867', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-13 22:20:18.623867', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-13 22:20:18.623867', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-13 22:20:18.623868', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-13 22:20:18.623868', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-13 22:20:18.623868', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-13 22:20:18.623868', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-13 22:20:18.623868', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-13 22:20:18.623868', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-13 22:20:18.623868', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-13 22:20:18.623869', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-13 22:20:18.623869', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-13 22:20:18.657178', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-13 22:20:18.657178', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-13 22:20:18.657178', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-13 22:20:18.657178', NULL, 'Description', NULL, 'Авто');
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-13 22:20:18.623847', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-13 22:20:18.623851', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-13 22:20:18.623852', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-13 22:20:18.623852', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-13 22:20:18.623852', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-13 22:20:18.623852', NULL, 'Выдан', NULL, 'Выдан');
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-13 22:20:18.623861', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-13 22:20:18.623861', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-13 22:20:18.623861', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-13 22:20:18.623861', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-13 22:20:18.623862', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-13 22:20:18.623862', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-13 22:20:18.623862', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-13 22:20:18.623862', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-13 22:20:18.623862', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-13 22:20:18.623862', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-13 22:20:18.623863', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-13 22:20:18.623863', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-13 22:20:18.623864', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-13 22:20:18.623865', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-13 22:20:18.623865', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-13 22:20:18.623865', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-13 22:20:18.623865', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-13 22:20:18.623865', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-13 22:20:18.781 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-13 22:20:18.782 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-13 22:20:18.783 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-13 22:20:18.800 +05:00 [INF] User profile is available. Using '/Users/a_ashurov/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-13 22:20:18.987 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-13 22:20:18.987 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-13 22:20:18.987 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-13 22:20:18.987 +05:00 [INF] Hosting environment: Development
2023-03-13 22:20:18.987 +05:00 [INF] Content root path: /Users/a_ashurov/Desktop/MyFutureProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-13 22:20:20.199 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-13 22:20:20.249 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 50.3844ms
2023-03-13 22:20:20.351 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-13 22:20:20.518 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 167.1790ms
2023-03-13 22:20:41.405 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72
2023-03-13 22:20:41.436 +05:00 [INF] CORS policy execution successful.
2023-03-13 22:20:41.457 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-13 22:20:41.465 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-13 22:20:41.798 +05:00 [INF] Executed DbCommand (3ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-13 22:20:41.889 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ClaimType", "a"."ClaimValue", "a"."UserId"
FROM "AspNetUserClaims" AS "a"
WHERE "a"."UserId" = @__user_Id_0
2023-03-13 22:20:41.906 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-13 22:20:41.908 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 13)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-13 22:20:41.915 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."ClaimType", "a"."ClaimValue"
FROM "AspNetRoleClaims" AS "a"
WHERE "a"."RoleId" = @__role_Id_0
2023-03-13 22:20:41.916 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-13 22:20:41.916 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-13 22:20:41.916 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-13 22:20:41.958 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"G47CYT4LCOXS9BMBXBEL8FWNHAZ34TACXVR3d9b155b-e1e4-434c-b351-c1309a8bed2b","JwtId":"e9cfb895-57db-4527-8b42-c52ff75870f8","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-13T17:20:41.9515130Z","ExpiryDateTime":"2023-09-13T17:20:41.9515340Z","$type":"RefreshTokenCommand"}
2023-03-13 22:20:41.999 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 36), @p5='?' (Size = 71), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-13 22:20:42.021 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-13 22:20:42.031 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 563.765ms
2023-03-13 22:20:42.031 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-13 22:20:42.033 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 72 - 200 2464 application/json;+charset=utf-8 627.6981ms
2023-03-13 22:21:44.100 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/Branch/1 - -
2023-03-13 22:21:44.146 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.BranchController.Get (EDSystems.WebApi)'
2023-03-13 22:21:44.149 +05:00 [INF] Route matched with {action = "Get", controller = "Branch"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.EDSystems.Queries.Branches.GetBranchDetails.BranchDetailsVm]] Get(Int32) on controller EDSystems.WebApi.Controllers.BranchController (EDSystems.WebApi).
2023-03-13 22:21:44.163 +05:00 [INF] NotesRequest: GetBranchDetailsQuery {"Id":1,"$type":"GetBranchDetailsQuery"}
2023-03-13 22:21:44.189 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "b"."Id", "b"."Address", "b"."City", "b"."Code", "b"."Country", "b"."CreatedBy", "b"."DateCreated", "b"."DateUpdated", "b"."Email", "b"."ModifiedBy", "b"."Name", "b"."Phone"
FROM "Branch" AS "b"
WHERE "b"."Id" = @__request_Id_0
LIMIT 1
2023-03-13 22:21:44.201 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.EDSystems.Queries.Branches.GetBranchDetails.BranchDetailsVm'.
2023-03-13 22:21:44.203 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.BranchController.Get (EDSystems.WebApi) in 53.8317ms
2023-03-13 22:21:44.203 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.BranchController.Get (EDSystems.WebApi)'
2023-03-13 22:21:44.203 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/Branch/1 - - - 200 431 application/json;+charset=utf-8 103.3913ms
2023-03-13 22:28:53.476 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-13 22:28:53.570 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:28:53.571 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:28:53.571 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:28:53.571 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:28:53.571 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:28:53.571 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:28:53.571 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:28:53.571 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:28:53.571 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:28:53.663 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-13 22:28:53.750 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-13 22:28:53.787 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:28:53.788 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:28:53.788 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:28:53.788 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:28:53.788 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:28:53.788 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:28:53.788 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:28:53.788 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:28:53.788 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:28:53.864 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-13 22:28:53.864 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:28:53.864 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:28:53.864 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-13 22:28:53.864 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:28:53.864 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:28:53.865 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" TEXT NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:28:53.865 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-13 22:28:53.865 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:28:53.865 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:28:53.865 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-13 22:28:53.865 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-13 22:28:53.865 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:28:53.865 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:28:53.865 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:28:53.865 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:28:53.865 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:28:53.865 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:28:53.865 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:28:53.865 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:28:53.865 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-13 22:28:53.870 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-13 22:28:53.871 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-13 22:28:53.871 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:28:53.871 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:28:53.871 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:28:53.871 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:28:53.871 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:28:53.871 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:28:53.871 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-13 22:28:53.871 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-13 22:28:53.871 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, 'a4b61e85-f4db-410a-9f3c-7bc32803fe79', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, '5f0278d9-f4af-48e5-896c-f2a428053024', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, '17abe8eb-79b6-4936-9e4b-42a46b58cf34', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, 'd981f993-8d25-4107-b8b7-8fb0ff59b788', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, '030763c2-527c-418d-ae19-de13e6d1cb4b', 'Customer', 'CUSTOMER');
2023-03-13 22:28:53.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '2c3fef0e-4e3e-4117-a5f2-22a05cd42cde', '2023-03-13 22:28:53.749672', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEONTDhzfZpKnL1ukl0xWXRinKZyohd3Cypj/9PjItXHgOemByg/KTwsS7PI9Gzfw+A==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '5ed928f8-a572-4fa7-ad60-2b50778d6050', '2023-03-13 22:28:53.749673', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEONTDhzfZpKnL1ukl0xWXRinKZyohd3Cypj/9PjItXHgOemByg/KTwsS7PI9Gzfw+A==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '19cd75a1-eb18-4c72-971f-e54bb6ded7b6', '2023-03-13 22:28:53.749674', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEONTDhzfZpKnL1ukl0xWXRinKZyohd3Cypj/9PjItXHgOemByg/KTwsS7PI9Gzfw+A==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '4f899ab2-63b3-4d2a-91f7-151488e26b63', '2023-03-13 22:28:53.749675', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEONTDhzfZpKnL1ukl0xWXRinKZyohd3Cypj/9PjItXHgOemByg/KTwsS7PI9Gzfw+A==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'fb5a4047-9edc-4717-b6c6-ca09872f5462', '2023-03-13 22:28:53.749676', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEONTDhzfZpKnL1ukl0xWXRinKZyohd3Cypj/9PjItXHgOemByg/KTwsS7PI9Gzfw+A==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-13 22:28:53.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-13 22:28:53.718208', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-13 22:28:53.718209', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-13 22:28:53.718209', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-13 22:28:53.718209', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-13 22:28:53.718209', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-13 22:28:53.71821', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-13 22:28:53.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-13 22:28:53.749688', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-13 22:28:53.749688', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-13 22:28:53.749689', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-13 22:28:53.749689', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-13 22:28:53.749689', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-13 22:28:53.749689', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-13 22:28:53.749689', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-13 22:28:53.74969', NULL, NULL, 'Сомони', 972);
2023-03-13 22:28:53.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-13 22:28:53.71822', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-13 22:28:53.718221', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-13 22:28:53.718221', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-13 22:28:53.718221', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-13 22:28:53.718221', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-13 22:28:53.718221', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-13 22:28:53.718222', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-13 22:28:53.718222', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-13 22:28:53.718222', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-13 22:28:53.718222', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-13 22:28:53.718222', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-13 22:28:53.718222', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-13 22:28:53.718223', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-13 22:28:53.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-13 22:28:53.749686', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-13 22:28:53.749686', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-13 22:28:53.749687', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-13 22:28:53.749687', NULL, 'Description', NULL, 'Авто');
2023-03-13 22:28:53.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-13 22:28:53.718202', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-13 22:28:53.718205', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-13 22:28:53.718205', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-13 22:28:53.718205', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-13 22:28:53.718205', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-13 22:28:53.718205', NULL, 'Выдан', NULL, 'Выдан');
2023-03-13 22:28:53.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-13 22:28:53.718211', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-13 22:28:53.718212', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-13 22:28:53.718212', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-13 22:28:53.718212', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-13 22:28:53.718212', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-13 22:28:53.718213', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-13 22:28:53.718213', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-13 22:28:53.718213', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-13 22:28:53.718216', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-13 22:28:53.718216', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-13 22:28:53.718216', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-13 22:28:53.718216', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-13 22:28:53.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-13 22:28:53.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-13 22:28:53.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-13 22:28:53.718218', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-13 22:28:53.718218', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-13 22:28:53.718219', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-13 22:28:53.718219', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-13 22:28:53.718219', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-13 22:28:53.718219', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-13 22:28:53.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-13 22:28:53.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-13 22:28:53.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-13 22:28:53.872 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-13 22:28:53.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-13 22:28:53.874 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-13 22:28:53.875 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-13 22:28:53.875 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-13 22:28:53.875 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-13 22:28:53.875 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-13 22:28:53.875 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-13 22:28:53.875 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-13 22:28:53.891 +05:00 [INF] User profile is available. Using '/Users/a_ashurov/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-13 22:28:54.069 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-13 22:28:54.069 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-13 22:28:54.069 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-13 22:28:54.069 +05:00 [INF] Hosting environment: Development
2023-03-13 22:28:54.069 +05:00 [INF] Content root path: /Users/a_ashurov/Desktop/MyFutureProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-13 22:28:55.254 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-13 22:28:55.308 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 55.1787ms
2023-03-13 22:28:55.362 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-13 22:28:55.535 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 173.4720ms
2023-03-13 22:32:30.762 +05:00 [INF] Request starting HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 76
2023-03-13 22:32:30.788 +05:00 [INF] CORS policy execution successful.
2023-03-13 22:32:30.809 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-13 22:32:30.820 +05:00 [INF] Route matched with {action = "Login", controller = "Authentication"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(EDSystems.WebApi.Models.AuthManager.UserLoginDto) on controller EDSystems.WebApi.Controllers.AuthenticationController (EDSystems.WebApi).
2023-03-13 22:32:31.157 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-13 22:32:31.253 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__user_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ClaimType", "a"."ClaimValue", "a"."UserId"
FROM "AspNetUserClaims" AS "a"
WHERE "a"."UserId" = @__user_Id_0
2023-03-13 22:32:31.271 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-13 22:32:31.274 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedName_0='?' (Size = 13)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."ConcurrencyStamp", "a"."Name", "a"."NormalizedName"
FROM "AspNetRoles" AS "a"
WHERE "a"."NormalizedName" = @__normalizedName_0
LIMIT 1
2023-03-13 22:32:31.281 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__role_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."ClaimType", "a"."ClaimValue"
FROM "AspNetRoleClaims" AS "a"
WHERE "a"."RoleId" = @__role_Id_0
2023-03-13 22:32:31.282 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__userId_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a0"."Name"
FROM "AspNetUserRoles" AS "a"
INNER JOIN "AspNetRoles" AS "a0" ON "a"."RoleId" = "a0"."Id"
WHERE "a"."UserId" = @__userId_0
2023-03-13 22:32:31.283 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-13 22:32:31.283 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedEmail_0='?' (Size = 23)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedEmail" = @__normalizedEmail_0
LIMIT 2
2023-03-13 22:32:31.325 +05:00 [INF] NotesRequest: RefreshTokenCommand {"Id":0,"UserId":1,"Token":"H4TQKOF21RGCXGQLP3UX04DB5Q13J42QL2M0f0c4dd3-7fd2-48f0-898d-e3b1dc5cb30a","JwtId":"94f48401-22c6-46b5-8fe0-d3447841e3b2","IsUsed":false,"IsRevoked":false,"AddedDateTime":"2023-03-13T17:32:31.3178500Z","ExpiryDateTime":"2023-09-13T17:32:31.3178720Z","$type":"RefreshTokenCommand"}
2023-03-13 22:32:31.369 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p0='?' (DbType = DateTime), @p1='?' (DbType = DateTime), @p2='?' (DbType = Boolean), @p3='?' (DbType = Boolean), @p4='?' (Size = 36), @p5='?' (Size = 71), @p6='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "RefreshToken" ("AddedDateTime", "ExpiryDateTime", "IsRevoked", "IsUsed", "JwtId", "Token", "UserId")
VALUES (@p0, @p1, @p2, @p3, @p4, @p5, @p6)
RETURNING "Id";
2023-03-13 22:32:31.390 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.WebApi.Models.AuthManager.AuthResult'.
2023-03-13 22:32:31.399 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi) in 578.1468ms
2023-03-13 22:32:31.399 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.AuthenticationController.Login (EDSystems.WebApi)'
2023-03-13 22:32:31.401 +05:00 [INF] Request finished HTTP/1.1 POST https://localhost:7271/api/Authentication/Login application/json-patch+json 76 - 200 2464 application/json;+charset=utf-8 639.2662ms
2023-03-13 22:32:51.378 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - -
2023-03-13 22:32:51.423 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:32:51.426 +05:00 [INF] Route matched with {action = "Get", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.ActionResult`1[EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm]] Get(Int32) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:32:51.429 +05:00 [INF] NotesRequest: GetUserDetailsQuery {"Id":2,"$type":"GetUserDetailsQuery"}
2023-03-13 22:32:51.480 +05:00 [WRN] Compiling a query which loads related collections for more than one collection navigation, either via 'Include' or through projection, but no 'QuerySplittingBehavior' has been configured. By default, Entity Framework will use 'QuerySplittingBehavior.SingleQuery', which can potentially result in slow query performance. See https://go.microsoft.com/fwlink/?linkid=2134277 for more information. To identify the query that's triggering this warning call 'ConfigureWarnings(w => w.Throw(RelationalEventId.MultipleCollectionIncludeWarning))'.
2023-03-13 22:32:51.484 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__request_Id_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "t"."Id", "t"."AccessFailedCount", "t"."Address", "t"."ChatId", "t"."ConcurrencyStamp", "t"."DateCreated", "t"."DateUpdated", "t"."Email", "t"."EmailConfirmed", "t"."FirstName", "t"."LastName", "t"."LockoutEnabled", "t"."LockoutEnd", "t"."NormalizedEmail", "t"."NormalizedUserName", "t"."ParcelJobId", "t"."PasswordHash", "t"."PhoneNumber", "t"."PhoneNumberConfirmed", "t"."SecurityStamp", "t"."TwoFactorEnabled", "t"."UserName", "t"."UserNameT", "t0"."UserId", "t0"."RoleId", "t0"."Id", "t0"."ConcurrencyStamp", "t0"."Name", "t0"."NormalizedName", "a2"."Id", "a2"."ClaimType", "a2"."ClaimValue", "a2"."UserId"
FROM (
    SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
    FROM "AspNetUsers" AS "a"
    WHERE "a"."Id" = @__request_Id_0
    LIMIT 1
) AS "t"
LEFT JOIN (
    SELECT "a0"."UserId", "a0"."RoleId", "a1"."Id", "a1"."ConcurrencyStamp", "a1"."Name", "a1"."NormalizedName"
    FROM "AspNetUserRoles" AS "a0"
    INNER JOIN "AspNetRoles" AS "a1" ON "a0"."RoleId" = "a1"."Id"
) AS "t0" ON "t"."Id" = "t0"."UserId"
LEFT JOIN "AspNetUserClaims" AS "a2" ON "t"."Id" = "a2"."UserId"
ORDER BY "t"."Id", "t0"."UserId", "t0"."RoleId", "t0"."Id"
2023-03-13 22:32:51.492 +05:00 [INF] Executing OkObjectResult, writing value of type 'EDSystems.Application.Users.Queries.GetUserDetails.UserDetailsVm'.
2023-03-13 22:32:51.497 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi) in 70.6933ms
2023-03-13 22:32:51.497 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Get (EDSystems.WebApi)'
2023-03-13 22:32:51.497 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/api/UserManager/2 - - - 200 363 application/json;+charset=utf-8 118.9950ms
2023-03-13 22:33:15.193 +05:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json-patch+json 233
2023-03-13 22:33:15.194 +05:00 [INF] CORS policy execution successful.
2023-03-13 22:33:15.198 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:33:15.202 +05:00 [INF] Route matched with {action = "Update", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(EDSystems.WebApi.Models.UserManager.UpdateUserDto) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:33:15.246 +05:00 [INF] NotesRequest: UpdateUserCommand {"Id":"2","FirstName":"asdasdasd","LastName":"asdasdasd","Address":"Республика Узбекистан, г. Ташкент, Кашгар 11, 100099","UserName":"hayrulloh","Email":null,"PhoneNumber":"998935788886","$type":"UpdateUserCommand"}
2023-03-13 22:33:15.259 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."Id" = @__p_0
LIMIT 1
2023-03-13 22:33:15.264 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedUserName_0='?' (Size = 9)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2023-03-13 22:33:15.274 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p22='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (Size = 52), @p2='?' (DbType = Int64), @p3='?' (Size = 36), @p23='?' (Size = 36), @p4='?' (DbType = DateTime), @p5='?' (DbType = DateTime), @p6='?' (Size = 19), @p7='?' (DbType = Boolean), @p8='?' (Size = 9), @p9='?' (Size = 9), @p10='?' (DbType = Boolean), @p11='?' (DbType = DateTimeOffset), @p12='?' (Size = 19), @p13='?' (Size = 9), @p14='?' (DbType = Int32), @p15='?' (Size = 84), @p16='?' (Size = 12), @p17='?' (DbType = Boolean), @p18='?' (Size = 36), @p19='?' (DbType = Boolean), @p20='?' (Size = 9), @p21='?' (Size = 8)], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "Address" = @p1, "ChatId" = @p2, "ConcurrencyStamp" = @p3, "DateCreated" = @p4, "DateUpdated" = @p5, "Email" = @p6, "EmailConfirmed" = @p7, "FirstName" = @p8, "LastName" = @p9, "LockoutEnabled" = @p10, "LockoutEnd" = @p11, "NormalizedEmail" = @p12, "NormalizedUserName" = @p13, "ParcelJobId" = @p14, "PasswordHash" = @p15, "PhoneNumber" = @p16, "PhoneNumberConfirmed" = @p17, "SecurityStamp" = @p18, "TwoFactorEnabled" = @p19, "UserName" = @p20, "UserNameT" = @p21
WHERE "Id" = @p22 AND "ConcurrencyStamp" = @p23
RETURNING 1;
2023-03-13 22:33:15.279 +05:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2023-03-13 22:33:15.279 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi) in 76.059ms
2023-03-13 22:33:15.279 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:33:15.279 +05:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json-patch+json 233 - 204 - - 86.0897ms
2023-03-13 22:34:24.206 +05:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 216
2023-03-13 22:34:24.208 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:34:24.209 +05:00 [INF] Route matched with {action = "Update", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(EDSystems.WebApi.Models.UserManager.UpdateUserDto) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:34:24.211 +05:00 [INF] NotesRequest: UpdateUserCommand {"Id":"2","FirstName":"fghfghfghfg","LastName":"fghfghfghfg","Address":"Республика fghfgh, г. Ташкент, Кашгар 11, 100099 Updated","UserName":null,"Email":null,"PhoneNumber":"9989400000","$type":"UpdateUserCommand"}
2023-03-13 22:34:24.214 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."Id" = @__p_0
LIMIT 1
2023-03-13 22:34:24.221 +05:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2023-03-13 22:34:24.222 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi) in 12.9342ms
2023-03-13 22:34:24.222 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:34:24.222 +05:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 216 - 204 - - 15.7729ms
2023-03-13 22:35:44.283 +05:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 217
2023-03-13 22:35:44.284 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:35:44.284 +05:00 [INF] Route matched with {action = "Update", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(EDSystems.WebApi.Models.UserManager.UpdateUserDto) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:35:44.285 +05:00 [INF] NotesRequest: UpdateUserCommand {"Id":"2","FirstName":"sdddsdsdsdsd","LastName":"sdddsdsdsdsd","Address":"Республика fghfgh, г. Ташкент, Кашгар 11, 100099 Updated","UserName":null,"Email":null,"PhoneNumber":"9989400000","$type":"UpdateUserCommand"}
2023-03-13 22:35:49.873 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."Id" = @__p_0
LIMIT 1
2023-03-13 22:36:08.614 +05:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2023-03-13 22:36:08.615 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi) in 24330.7426ms
2023-03-13 22:36:08.615 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:36:08.615 +05:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 217 - 204 - - 24332.6635ms
2023-03-13 22:36:41.948 +05:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 217
2023-03-13 22:36:41.951 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:36:41.951 +05:00 [INF] Route matched with {action = "Update", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(EDSystems.WebApi.Models.UserManager.UpdateUserDto) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:36:41.952 +05:00 [INF] NotesRequest: UpdateUserCommand {"Id":"2","FirstName":"sdddsdsdsdsd","LastName":"sdddsdsdsdsd","Address":"Республика fghfgh, г. Ташкент, Кашгар 11, 100099 Updated","UserName":null,"Email":null,"PhoneNumber":"9989400000","$type":"UpdateUserCommand"}
2023-03-13 22:36:43.920 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."Id" = @__p_0
LIMIT 1
2023-03-13 22:37:16.536 +05:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2023-03-13 22:37:16.536 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi) in 34585.2334ms
2023-03-13 22:37:16.536 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:37:16.537 +05:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 217 - 204 - - 34591.2514ms
2023-03-13 22:37:26.132 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-13 22:37:26.224 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:37:26.224 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:37:26.224 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:37:26.224 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:37:26.224 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:37:26.224 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:37:26.224 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:37:26.224 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:37:26.224 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:37:26.314 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-13 22:37:26.395 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-13 22:37:26.431 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:37:26.431 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:37:26.431 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:37:26.431 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:37:26.431 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:37:26.431 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:37:26.431 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:37:26.431 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:37:26.431 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:37:26.523 +05:00 [FTL] An error occured while app initialization
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 10: 'disk I/O error'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteNonQuery()
   at Microsoft.Data.Sqlite.SqliteConnectionExtensions.ExecuteNonQuery(SqliteConnection connection, String commandText, SqliteParameter[] parameters)
   at Microsoft.Data.Sqlite.SqliteTransaction..ctor(SqliteConnection connection, IsolationLevel isolationLevel, Boolean deferred)
   at Microsoft.Data.Sqlite.SqliteConnection.BeginTransaction(IsolationLevel isolationLevel, Boolean deferred)
   at Microsoft.Data.Sqlite.SqliteConnection.BeginTransaction(IsolationLevel isolationLevel)
   at Microsoft.Data.Sqlite.SqliteConnection.BeginDbTransaction(IsolationLevel isolationLevel)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.ConnectionBeginTransaction(IsolationLevel isolationLevel)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction(IsolationLevel isolationLevel)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction()
   at Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationCommandExecutor.ExecuteNonQuery(IEnumerable`1 migrationCommands, IRelationalConnection connection)
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTables()
   at Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreated()
   at Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureCreated()
   at EDSystems.Persistence.DbInitializer.Initialize(EDSystemsDbContext dbcontext) in /Users/a_ashurov/Desktop/MyFutureProjects/EDSystems.CICD.CD/EDSystems.Persistence/DbInitializer.cs:line 8
   at Program.<Main>$(String[] args) in /Users/a_ashurov/Desktop/MyFutureProjects/EDSystems.CICD.CD/EDSystems.WebApi/Program.cs:line 59
2023-03-13 22:37:26.554 +05:00 [INF] User profile is available. Using '/Users/a_ashurov/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-13 22:37:26.750 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-13 22:37:26.750 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-13 22:37:26.750 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-13 22:37:26.750 +05:00 [INF] Hosting environment: Development
2023-03-13 22:37:26.750 +05:00 [INF] Content root path: /Users/a_ashurov/Desktop/MyFutureProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-13 22:37:27.927 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-13 22:37:27.989 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 63.4425ms
2023-03-13 22:37:28.042 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-13 22:37:28.229 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 187.0179ms
2023-03-13 22:37:34.262 +05:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 217
2023-03-13 22:37:34.375 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:37:34.383 +05:00 [INF] Route matched with {action = "Update", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(EDSystems.WebApi.Models.UserManager.UpdateUserDto) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:37:34.567 +05:00 [INF] NotesRequest: UpdateUserCommand {"Id":"2","FirstName":"sdddsdsdsdsd","LastName":"sdddsdsdsdsd","Address":"Республика fghfgh, г. Ташкент, Кашгар 11, 100099 Updated","UserName":null,"Email":null,"PhoneNumber":"9989400000","$type":"UpdateUserCommand"}
2023-03-13 22:37:36.903 +05:00 [ERR] Failed executing DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."Id" = @__p_0
LIMIT 1
2023-03-13 22:37:36.906 +05:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EDSystems.Persistence.EDSystemsDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2023-03-13 22:37:44.240 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi) in 9854.4377ms
2023-03-13 22:37:44.241 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:37:44.242 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at EDSystems.Application.Users.Commands.UpdateUser.UpdateUserCommandHandler.Handle(UpdateUserCommand request, CancellationToken cancellationToken) in /Users/a_ashurov/Desktop/MyFutureProjects/EDSystems.CICD.CD/EDSystems.Application/Users/Commands/UpdateUser/UpdateUserCommandHandler.cs:line 22
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/a_ashurov/Desktop/MyFutureProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.UserManagerController.Update(UpdateUserDto updateUserDto) in /Users/a_ashurov/Desktop/MyFutureProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/UserManagerController.cs:line 160
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-13 22:37:44.249 +05:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 217 - 500 - text/plain;+charset=utf-8 9987.3564ms
2023-03-13 22:38:00.702 +05:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 217
2023-03-13 22:38:00.718 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:38:00.718 +05:00 [INF] Route matched with {action = "Update", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(EDSystems.WebApi.Models.UserManager.UpdateUserDto) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:38:00.720 +05:00 [INF] NotesRequest: UpdateUserCommand {"Id":"2","FirstName":"sdddsdsdsdsd","LastName":"sdddsdsdsdsd","Address":"Республика fghfgh, г. Ташкент, Кашгар 11, 100099 Updated","UserName":null,"Email":null,"PhoneNumber":"9989400000","$type":"UpdateUserCommand"}
2023-03-13 22:38:03.671 +05:00 [ERR] Failed executing DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."Id" = @__p_0
LIMIT 1
2023-03-13 22:38:03.672 +05:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EDSystems.Persistence.EDSystemsDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2023-03-13 22:38:16.859 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi) in 16140.8208ms
2023-03-13 22:38:16.859 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:38:16.859 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at EDSystems.Application.Users.Commands.UpdateUser.UpdateUserCommandHandler.Handle(UpdateUserCommand request, CancellationToken cancellationToken) in /Users/a_ashurov/Desktop/MyFutureProjects/EDSystems.CICD.CD/EDSystems.Application/Users/Commands/UpdateUser/UpdateUserCommandHandler.cs:line 22
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/a_ashurov/Desktop/MyFutureProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.UserManagerController.Update(UpdateUserDto updateUserDto) in /Users/a_ashurov/Desktop/MyFutureProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/UserManagerController.cs:line 160
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-13 22:38:16.862 +05:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 217 - 500 - text/plain;+charset=utf-8 16160.2982ms
2023-03-13 22:38:20.469 +05:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 217
2023-03-13 22:38:20.474 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:38:20.474 +05:00 [INF] Route matched with {action = "Update", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(EDSystems.WebApi.Models.UserManager.UpdateUserDto) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:38:20.476 +05:00 [INF] NotesRequest: UpdateUserCommand {"Id":"2","FirstName":"sdddsdsdsdsd","LastName":"sdddsdsdsdsd","Address":"Республика fghfgh, г. Ташкент, Кашгар 11, 100099 Updated","UserName":null,"Email":null,"PhoneNumber":"9989400000","$type":"UpdateUserCommand"}
2023-03-13 22:38:23.116 +05:00 [ERR] Failed executing DbCommand (1ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."Id" = @__p_0
LIMIT 1
2023-03-13 22:38:23.117 +05:00 [ERR] An exception occurred while iterating over the results of a query for context type 'EDSystems.Persistence.EDSystemsDbContext'.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
2023-03-13 22:39:49.881 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi) in 89408.0937ms
2023-03-13 22:39:49.881 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:39:49.881 +05:00 [ERR] An unhandled exception has occurred while executing the request.
Microsoft.Data.Sqlite.SqliteException (0x80004005): SQLite Error 1: 'no such table: AspNetUsers'.
   at Microsoft.Data.Sqlite.SqliteException.ThrowExceptionForRC(Int32 rc, sqlite3 db)
   at Microsoft.Data.Sqlite.SqliteCommand.PrepareAndEnumerateStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteCommand.GetStatements(Stopwatch timer)+MoveNext()
   at Microsoft.Data.Sqlite.SqliteDataReader.NextResult()
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReader(CommandBehavior behavior)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.Data.Sqlite.SqliteCommand.ExecuteDbDataReaderAsync(CommandBehavior behavior, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.ShapedQueryCompilingExpressionVisitor.SingleOrDefaultAsync[TSource](IAsyncEnumerable`1 asyncEnumerable, CancellationToken cancellationToken)
   at EDSystems.Application.Users.Commands.UpdateUser.UpdateUserCommandHandler.Handle(UpdateUserCommand request, CancellationToken cancellationToken) in /Users/a_ashurov/Desktop/MyFutureProjects/EDSystems.CICD.CD/EDSystems.Application/Users/Commands/UpdateUser/UpdateUserCommandHandler.cs:line 22
   at EDSystems.Application.Common.Behaviors.LoggingBehavior`2.Handle(TRequest request, RequestHandlerDelegate`1 next, CancellationToken cancellationToken) in /Users/a_ashurov/Desktop/MyFutureProjects/EDSystems.CICD.CD/EDSystems.Application/Common/Behaviors/LoggingBehavior.cs:line 18
   at EDSystems.WebApi.Controllers.UserManagerController.Update(UpdateUserDto updateUserDto) in /Users/a_ashurov/Desktop/MyFutureProjects/EDSystems.CICD.CD/EDSystems.WebApi/Controllers/UserManagerController.cs:line 160
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(ActionContext actionContext, IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|20_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Swashbuckle.AspNetCore.SwaggerUI.SwaggerUIMiddleware.Invoke(HttpContext httpContext)
   at Swashbuckle.AspNetCore.Swagger.SwaggerMiddleware.Invoke(HttpContext httpContext, ISwaggerProvider swaggerProvider)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddlewareImpl.Invoke(HttpContext context)
2023-03-13 22:39:49.884 +05:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 217 - 500 - text/plain;+charset=utf-8 89416.8189ms
2023-03-13 22:40:15.619 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-13 22:40:15.714 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:40:15.715 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:40:15.715 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:40:15.715 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:40:15.715 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:40:15.715 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:40:15.715 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:40:15.715 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:40:15.715 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:40:15.801 +05:00 [INF] Executed DbCommand (4ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
PRAGMA journal_mode = 'wal';
2023-03-13 22:40:15.882 +05:00 [WRN] There are multiple relationships between 'ParcelOwners' and 'User' without configured foreign key properties. This will cause Entity Framework to create shadow properties on 'ParcelOwners' with names dependent on the discovery order. Consider configuring the foreign key properties using the [ForeignKey] attribute or in 'OnModelCreating'.
2023-03-13 22:40:15.918 +05:00 [WRN] The foreign key property 'AccountHistory.PayerId1' was created in shadow state because a conflicting property with the simple name 'PayerId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:40:15.918 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientCourierId1' was created in shadow state because a conflicting property with the simple name 'RecepientCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:40:15.918 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientId1' was created in shadow state because a conflicting property with the simple name 'RecepientId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:40:15.918 +05:00 [WRN] The foreign key property 'ParcelOwners.RecepientStaffId1' was created in shadow state because a conflicting property with the simple name 'RecepientStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:40:15.918 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderCourierId1' was created in shadow state because a conflicting property with the simple name 'SenderCourierId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:40:15.918 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderId1' was created in shadow state because a conflicting property with the simple name 'SenderId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:40:15.918 +05:00 [WRN] The foreign key property 'ParcelOwners.SenderStaffId1' was created in shadow state because a conflicting property with the simple name 'SenderStaffId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:40:15.918 +05:00 [WRN] The foreign key property 'UserAccount.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:40:15.918 +05:00 [WRN] The foreign key property 'UserAccountHistory.UserId1' was created in shadow state because a conflicting property with the simple name 'UserId' exists in the entity type, but is either not mapped, is already used for another relationship, or is incompatible with the associated primary key type. See https://aka.ms/efcore-relationships for information on mapping relationships in EF Core.
2023-03-13 22:40:15.996 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoles" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoles" PRIMARY KEY AUTOINCREMENT,
    "NormalizedName" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "Name" TEXT NULL
);
2023-03-13 22:40:15.996 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Branch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Branch" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NOT NULL,
    "Country" varchar NOT NULL,
    "Code" TEXT NULL,
    "City" varchar NOT NULL,
    "Address" varchar NOT NULL,
    "Email" varchar NULL,
    "Phone" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:40:15.996 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Currency" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Currency" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Code" varchar NULL,
    "Number" integer NOT NULL,
    "Country" varchar NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Expenses" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Expenses" PRIMARY KEY AUTOINCREMENT
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ExpenseType" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ExpenseType" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Parcel" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Parcel" PRIMARY KEY AUTOINCREMENT,
    "Code" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Plan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Plan" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar NULL,
    "Cost" TEXT NOT NULL,
    "Description" varchar NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "RefreshToken" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_RefreshToken" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "Token" TEXT NULL,
    "JwtId" TEXT NULL,
    "IsUsed" INTEGER NOT NULL,
    "IsRevoked" INTEGER NOT NULL,
    "AddedDateTime" TEXT NOT NULL,
    "ExpiryDateTime" TEXT NOT NULL
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Status" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Status" PRIMARY KEY AUTOINCREMENT,
    "Name" TEXT NULL,
    "Description" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Tokens" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Tokens" PRIMARY KEY AUTOINCREMENT,
    "TokenId" TEXT NULL,
    "RefreshToken" TEXT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetRoleClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetRoleClaims" PRIMARY KEY AUTOINCREMENT,
    "RoleId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetRoleClaims_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "Account" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_Account" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" decimal(18,3) NOT NULL,
    "BranchId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_Account_Branch_BranchId" FOREIGN KEY ("BranchId") REFERENCES "Branch" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_Account_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelBranch" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelBranch" PRIMARY KEY AUTOINCREMENT,
    "ToBranchId" INTEGER NOT NULL,
    "FromBranchId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_FromBranchId" FOREIGN KEY ("FromBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Branch_ToBranchId" FOREIGN KEY ("ToBranchId") REFERENCES "Branch" ("Id") ON DELETE SET NULL,
    CONSTRAINT "FK_ParcelBranch_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelCost" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelCost" PRIMARY KEY AUTOINCREMENT,
    "StateDeliveryToBranch" INTEGER NOT NULL,
    "StatePickingUp" INTEGER NOT NULL,
    "StateDeliveryToPoint" INTEGER NOT NULL,
    "StateBuyout" INTEGER NOT NULL,
    "CostPickingUp" decimal(18,3) NOT NULL,
    "CostDeliveryToPoint" decimal(18,3) NOT NULL,
    "CostDeliveryToBranch" decimal(18,3) NOT NULL,
    "CostBuyout" TEXT NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelCost_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelCost_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelDescription" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelDescription" PRIMARY KEY AUTOINCREMENT,
    "Description" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelDescription_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelImage" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelImage" PRIMARY KEY AUTOINCREMENT,
    "ImageName" varchar NULL,
    "ImageBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelImage_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelItem" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelItem" PRIMARY KEY AUTOINCREMENT,
    "Name" varchar(200) NULL,
    "Description" TEXT NULL,
    "Cost" varchar(200) NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelItem_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelItem_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelJob" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelJob" PRIMARY KEY AUTOINCREMENT,
    "Cost" decimal(18,3) NOT NULL,
    "CourierId" TEXT NULL,
    "JobType" varchar NULL,
    "ParcelId" INTEGER NOT NULL,
    "PaymentState" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelJob_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSize" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSize" PRIMARY KEY AUTOINCREMENT,
    "Weight" decimal(18,3) NOT NULL,
    "NumberOfPoint" int NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSize_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelSound" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelSound" PRIMARY KEY AUTOINCREMENT,
    "SoundName" varchar NULL,
    "SoundBytes" varchar NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelSound_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelPlan" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelPlan" PRIMARY KEY AUTOINCREMENT,
    "PlanId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelPlan_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelPlan_Plan_PlanId" FOREIGN KEY ("PlanId") REFERENCES "Plan" ("Id") ON DELETE SET NULL
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelStatus" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelStatus" PRIMARY KEY AUTOINCREMENT,
    "StatusId" INTEGER NULL,
    "ParcelId" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelStatus_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_ParcelStatus_Status_StatusId" FOREIGN KEY ("StatusId") REFERENCES "Status" ("Id") ON DELETE SET NULL
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUsers" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUsers" PRIMARY KEY AUTOINCREMENT,
    "FirstName" TEXT NULL,
    "LastName" TEXT NULL,
    "Address" TEXT NULL,
    "UserNameT" TEXT NULL,
    "ChatId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "ParcelJobId" INTEGER NULL,
    "UserName" TEXT NULL,
    "NormalizedUserName" TEXT NULL,
    "Email" TEXT NULL,
    "NormalizedEmail" TEXT NULL,
    "EmailConfirmed" INTEGER NOT NULL,
    "PasswordHash" TEXT NULL,
    "SecurityStamp" TEXT NULL,
    "ConcurrencyStamp" TEXT NULL,
    "PhoneNumber" TEXT NULL,
    "PhoneNumberConfirmed" INTEGER NOT NULL,
    "TwoFactorEnabled" INTEGER NOT NULL,
    "LockoutEnd" TEXT NULL,
    "LockoutEnabled" INTEGER NOT NULL,
    "AccessFailedCount" INTEGER NOT NULL,
    CONSTRAINT "FK_AspNetUsers_ParcelJob_ParcelJobId" FOREIGN KEY ("ParcelJobId") REFERENCES "ParcelJob" ("Id")
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "BranchAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "PayerId" TEXT NULL,
    "PayerId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_AccountHistory_Account_BranchAccountId" FOREIGN KEY ("BranchAccountId") REFERENCES "Account" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_AspNetUsers_PayerId1" FOREIGN KEY ("PayerId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_AccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserClaims" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_AspNetUserClaims" PRIMARY KEY AUTOINCREMENT,
    "UserId" INTEGER NOT NULL,
    "ClaimType" TEXT NULL,
    "ClaimValue" TEXT NULL,
    CONSTRAINT "FK_AspNetUserClaims_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserLogins" (
    "LoginProvider" TEXT NOT NULL,
    "ProviderKey" TEXT NOT NULL,
    "ProviderDisplayName" TEXT NULL,
    "UserId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserLogins" PRIMARY KEY ("LoginProvider", "ProviderKey"),
    CONSTRAINT "FK_AspNetUserLogins_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:40:15.997 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserRoles" (
    "UserId" INTEGER NOT NULL,
    "RoleId" INTEGER NOT NULL,
    CONSTRAINT "PK_AspNetUserRoles" PRIMARY KEY ("UserId", "RoleId"),
    CONSTRAINT "FK_AspNetUserRoles_AspNetRoles_RoleId" FOREIGN KEY ("RoleId") REFERENCES "AspNetRoles" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_AspNetUserRoles_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:40:15.998 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "AspNetUserTokens" (
    "UserId" INTEGER NOT NULL,
    "LoginProvider" TEXT NOT NULL,
    "Name" TEXT NOT NULL,
    "Value" TEXT NULL,
    CONSTRAINT "PK_AspNetUserTokens" PRIMARY KEY ("UserId", "LoginProvider", "Name"),
    CONSTRAINT "FK_AspNetUserTokens_AspNetUsers_UserId" FOREIGN KEY ("UserId") REFERENCES "AspNetUsers" ("Id") ON DELETE CASCADE
);
2023-03-13 22:40:16.004 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "ParcelOwners" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_ParcelOwners" PRIMARY KEY AUTOINCREMENT,
    "SenderId" TEXT NULL,
    "SenderId1" INTEGER NULL,
    "RecepientId" TEXT NULL,
    "RecepientId1" INTEGER NULL,
    "RecepientStaffId" TEXT NULL,
    "RecepientStaffId1" INTEGER NULL,
    "SenderStaffId" TEXT NULL,
    "SenderStaffId1" INTEGER NULL,
    "RecepientCourierId" TEXT NULL,
    "RecepientCourierId1" INTEGER NULL,
    "SenderCourierId" TEXT NULL,
    "SenderCourierId1" INTEGER NULL,
    "ParcelId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientCourierId1" FOREIGN KEY ("RecepientCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientId1" FOREIGN KEY ("RecepientId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_RecepientStaffId1" FOREIGN KEY ("RecepientStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderCourierId1" FOREIGN KEY ("SenderCourierId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderId1" FOREIGN KEY ("SenderId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_AspNetUsers_SenderStaffId1" FOREIGN KEY ("SenderStaffId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_ParcelOwners_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE
);
2023-03-13 22:40:16.004 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccount" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccount" PRIMARY KEY AUTOINCREMENT,
    "Number" varchar NULL,
    "Name" varchar NULL,
    "Balance" TEXT NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "CurrencyId" INTEGER NOT NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccount_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccount_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE
);
2023-03-13 22:40:16.004 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE TABLE "UserAccountHistory" (
    "Id" INTEGER NOT NULL CONSTRAINT "PK_UserAccountHistory" PRIMARY KEY AUTOINCREMENT,
    "Amount" decimal(18,3) NOT NULL,
    "JobType" bool NOT NULL,
    "UserAccountId" INTEGER NOT NULL,
    "CurrencyId" INTEGER NOT NULL,
    "ParcelId" INTEGER NOT NULL,
    "UserId" TEXT NULL,
    "UserId1" INTEGER NULL,
    "DateCreated" TEXT NOT NULL,
    "DateUpdated" TEXT NULL,
    "CreatedBy" TEXT NULL,
    "ModifiedBy" TEXT NULL,
    CONSTRAINT "FK_UserAccountHistory_AspNetUsers_UserId1" FOREIGN KEY ("UserId1") REFERENCES "AspNetUsers" ("Id"),
    CONSTRAINT "FK_UserAccountHistory_Currency_CurrencyId" FOREIGN KEY ("CurrencyId") REFERENCES "Currency" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_Parcel_ParcelId" FOREIGN KEY ("ParcelId") REFERENCES "Parcel" ("Id") ON DELETE CASCADE,
    CONSTRAINT "FK_UserAccountHistory_UserAccount_UserAccountId" FOREIGN KEY ("UserAccountId") REFERENCES "UserAccount" ("Id") ON DELETE CASCADE
);
2023-03-13 22:40:16.004 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (1, '7882d95f-f19d-4f2e-b26c-a59079afc1c3', 'Administrator', 'ADMINISTRATOR');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (2, 'f5875d3e-d6e0-4d16-be10-8236f7d816cb', 'Manager', 'MANAGER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (3, 'eb10c814-e24f-4ae7-a623-f98aa27cfdd1', 'Staff', 'STAFF');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (4, '15a2c683-8bfb-4175-b2bc-498b4e8a4545', 'Courier', 'COURIER');
INSERT INTO "AspNetRoles" ("Id", "ConcurrencyStamp", "Name", "NormalizedName")
VALUES (5, 'b098bd30-b4c3-45bb-bac0-1c214c8a580b', 'Customer', 'CUSTOMER');
2023-03-13 22:40:16.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (1, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '61d35df4-c550-486a-926f-891da77fde8a', '2023-03-13 22:40:15.882273', NULL, 'administrator@gmail.com', 0, 'EDSystem', 'Administrator', 0, NULL, 'ADMINISTRATOR@GMAIL.COM', 'ADMINISTRATOR', NULL, 'AQAAAAIAAYagAAAAEG1ZSvNdPJexx7S9EAfltKIoM9VHTKTZd8+38R6ruQWKKcatK96/JY92PpYdOwRQVw==', '998970000675', 0, NULL, 0, 'administrator', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (2, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, '83094e8b-5998-4f44-a805-0a4e539bbb9f', '2023-03-13 22:40:15.882275', NULL, 'hayrulloh@gmail.com', 0, 'EDTashkent', 'Hayrulloh', 0, NULL, 'HAYRULLOH@GMAIL.COM', 'HAYRULLOH', NULL, 'AQAAAAIAAYagAAAAEG1ZSvNdPJexx7S9EAfltKIoM9VHTKTZd8+38R6ruQWKKcatK96/JY92PpYdOwRQVw==', '998935788886', 0, NULL, 0, 'hayrulloh', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (3, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'bd3088fc-1397-40f5-b54d-79d0cce976ad', '2023-03-13 22:40:15.882276', NULL, 'Nodir@gmail.com', 0, 'EDTashkent', 'Nodir', 0, NULL, 'NODIR@GMAIL.COM', 'NODIR', NULL, 'AQAAAAIAAYagAAAAEG1ZSvNdPJexx7S9EAfltKIoM9VHTKTZd8+38R6ruQWKKcatK96/JY92PpYdOwRQVw==', '998909046605', 0, NULL, 0, 'nodir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (4, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'd431abca-9478-4482-abb3-2b985fcfdf5f', '2023-03-13 22:40:15.882278', NULL, 'Javohir@gmail.com', 0, 'EDTashkent', 'Javohir', 0, NULL, 'JAVOHIR@GMAIL.COM', 'JAVOHIR', NULL, 'AQAAAAIAAYagAAAAEG1ZSvNdPJexx7S9EAfltKIoM9VHTKTZd8+38R6ruQWKKcatK96/JY92PpYdOwRQVw==', '998931710966', 0, NULL, 0, 'javohir', 'UserName');
INSERT INTO "AspNetUsers" ("Id", "AccessFailedCount", "Address", "ChatId", "ConcurrencyStamp", "DateCreated", "DateUpdated", "Email", "EmailConfirmed", "FirstName", "LastName", "LockoutEnabled", "LockoutEnd", "NormalizedEmail", "NormalizedUserName", "ParcelJobId", "PasswordHash", "PhoneNumber", "PhoneNumberConfirmed", "SecurityStamp", "TwoFactorEnabled", "UserName", "UserNameT")
VALUES (5, 0, 'Республика Узбекистан, г. Ташкент, Кашгар 11, 100099', -1001663331836, 'c1d22758-dda3-4340-a417-5f42b131698b', '2023-03-13 22:40:15.882279', NULL, 'Ismoil@gmail.com', 0, 'EDTashkent', 'Ismoil', 0, NULL, 'ISMOIL@GMAIL.COM', 'ISMOIL', NULL, 'AQAAAAIAAYagAAAAEG1ZSvNdPJexx7S9EAfltKIoM9VHTKTZd8+38R6ruQWKKcatK96/JY92PpYdOwRQVw==', '998977093262', 0, NULL, 0, 'ismoil', 'UserName');
2023-03-13 22:40:16.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (1, 'Российская Федерация, Московская область, г. Москва, Академический район, улица Винокурова 7/5, корпус 3, индекс 117449', 'Москва', '643', 'Россия', NULL, '2023-03-13 22:40:15.84944', NULL, 'info@ethnologistics.asia', NULL, 'Москва', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (2, 'Республика Узбекистан, г. Ташкент, Юнусабадский район, улица Кашгар 11,', 'Ташкент', '860', 'Узбекистан', NULL, '2023-03-13 22:40:15.84944', NULL, 'info@ethnologistics.asia', NULL, 'Ташкент', '+998984651');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (3, 'Киргизия, Бишкек, Жибек-Жолу д 443/1', 'Бишкек', '417', 'Киргистан', NULL, '2023-03-13 22:40:15.84944', NULL, 'info@ethnologistics.asia', NULL, 'Бишкек', '+765165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (4, 'Душанбе 122', 'Душанбе', '762', 'Таджикистан', NULL, '2023-03-13 22:40:15.849441', NULL, 'info@ethnologistics.asia', NULL, 'Душанбе', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (5, 'Алматы 123', 'Алматы', '398', 'Казахстан', NULL, '2023-03-13 22:40:15.849441', NULL, 'info@ethnologistics.asia', NULL, 'Алматы', '+665165498496');
INSERT INTO "Branch" ("Id", "Address", "City", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "Email", "ModifiedBy", "Name", "Phone")
VALUES (6, 'Хайдарпашша', 'Стамбул', '792', 'Турция', NULL, '2023-03-13 22:40:15.849441', NULL, 'info@ethnologistics.asia', NULL, 'Стамбул', '+665165498496');
2023-03-13 22:40:16.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, 'USD', 'Соединенные Штаты Америки', NULL, '2023-03-13 22:40:15.882291', NULL, NULL, 'Доллар', 840);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, 'UZS', 'Республика Узбекистан', NULL, '2023-03-13 22:40:15.882291', NULL, NULL, 'Сум', 860);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, 'RUB', 'Российская Федерация', NULL, '2023-03-13 22:40:15.882291', NULL, NULL, 'Рубль', 643);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, 'KZT', 'Республика Казахстан', NULL, '2023-03-13 22:40:15.882291', NULL, NULL, 'Тенге', 398);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, 'TRY', 'Турция', NULL, '2023-03-13 22:40:15.882291', NULL, NULL, 'Лира', 949);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, 'AED', 'Объедененные Арабские Эмираты', NULL, '2023-03-13 22:40:15.882292', NULL, NULL, 'Дирхам', 784);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, 'KGS', 'Кыргызская Республика', NULL, '2023-03-13 22:40:15.882292', NULL, NULL, 'Сом', 417);
INSERT INTO "Currency" ("Id", "Code", "Country", "CreatedBy", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, 'TJS', 'Республика Таджикистан', NULL, '2023-03-13 22:40:15.882292', NULL, NULL, 'Сомони', 972);
2023-03-13 22:40:16.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-13 22:40:15.84945', NULL, 'Зарплата', NULL, 'Зарплата');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-13 22:40:15.849451', NULL, 'Аванс', NULL, 'Аванс');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-13 22:40:15.849451', NULL, 'Курерам за перевозку', NULL, 'Курерам за перевозку');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-13 22:40:15.849451', NULL, 'Обед', NULL, 'Обед');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-13 22:40:15.849451', NULL, 'Карзи Хасана', NULL, 'Карзи Хасана');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-13 22:40:15.849451', NULL, 'Депозит', NULL, 'Депозит');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (7, NULL, '2023-03-13 22:40:15.849451', NULL, 'За перевозку до филиала', NULL, 'За перевозку до филиала');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (8, NULL, '2023-03-13 22:40:15.849451', NULL, 'За доставку до получателя', NULL, 'За доставку до получателя');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (9, NULL, '2023-03-13 22:40:15.849452', NULL, 'За забор посылки', NULL, 'За забор посылки');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (10, NULL, '2023-03-13 22:40:15.849452', NULL, 'За выкуп', NULL, 'За выкуп');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (11, NULL, '2023-03-13 22:40:15.849452', NULL, 'Ковертация', NULL, 'Ковертация');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (12, NULL, '2023-03-13 22:40:15.849452', NULL, 'Перевод', NULL, 'Перевод');
INSERT INTO "ExpenseType" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (13, NULL, '2023-03-13 22:40:15.849452', NULL, 'За мелкие расходы', NULL, 'За мелкие расходы');
2023-03-13 22:40:16.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, '7.0', NULL, '2023-03-13 22:40:15.882289', NULL, 'Description', NULL, 'Стандарт');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, '12.0', NULL, '2023-03-13 22:40:15.882289', NULL, 'Description', NULL, 'Экспресс');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, '30.0', NULL, '2023-03-13 22:40:15.882289', NULL, 'Description', NULL, 'Ультра');
INSERT INTO "Plan" ("Id", "Cost", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, '5.0', NULL, '2023-03-13 22:40:15.882289', NULL, 'Description', NULL, 'Авто');
2023-03-13 22:40:16.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (1, NULL, '2023-03-13 22:40:15.849434', NULL, 'Создан', NULL, 'Создан');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (2, NULL, '2023-03-13 22:40:15.849436', NULL, 'В пути', NULL, 'В пути');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (3, NULL, '2023-03-13 22:40:15.849436', NULL, 'Прибыл в пункт доставки', NULL, 'Прибыл');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (4, NULL, '2023-03-13 22:40:15.849436', NULL, 'На доставке у курьера', NULL, 'У курьера');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (5, NULL, '2023-03-13 22:40:15.849436', NULL, 'Доставлен', NULL, 'Доставлен');
INSERT INTO "Status" ("Id", "CreatedBy", "DateCreated", "DateUpdated", "Description", "ModifiedBy", "Name")
VALUES (6, NULL, '2023-03-13 22:40:15.849436', NULL, 'Выдан', NULL, 'Выдан');
2023-03-13 22:40:16.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (1, '0.0', 1, NULL, 1, '2023-03-13 22:40:15.849443', NULL, NULL, 'Валютный счет Москвы', '643840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (2, '0.0', 1, NULL, 2, '2023-03-13 22:40:15.849443', NULL, NULL, 'Рублевый счет Москвы', '643643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (3, '0.0', 2, NULL, 1, '2023-03-13 22:40:15.849443', NULL, NULL, 'Валютный счет Ташкента', '860840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (4, '0.0', 2, NULL, 2, '2023-03-13 22:40:15.849443', NULL, NULL, 'Рублевый счет Ташкента', '860643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (5, '0.0', 3, NULL, 1, '2023-03-13 22:40:15.849444', NULL, NULL, 'Валютный счет Бишкека', '417840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (6, '0.0', 3, NULL, 2, '2023-03-13 22:40:15.849446', NULL, NULL, 'Рублевый счет Бишкека', '417643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (7, '0.0', 4, NULL, 1, '2023-03-13 22:40:15.849446', NULL, NULL, 'Валютный счет Душанбе', '972840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (8, '0.0', 4, NULL, 2, '2023-03-13 22:40:15.849446', NULL, NULL, 'Рублевый счет Душанбе', '972843RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (9, '0.0', 5, NULL, 1, '2023-03-13 22:40:15.849446', NULL, NULL, 'Валютный счет Алматы', '398840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (10, '0.0', 5, NULL, 2, '2023-03-13 22:40:15.849446', NULL, NULL, 'Рублевый счет Алматы', '398643RUB');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (11, '0.0', 6, NULL, 1, '2023-03-13 22:40:15.849447', NULL, NULL, 'Валютный счет Стамбул', '792840USD');
INSERT INTO "Account" ("Id", "Balance", "BranchId", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number")
VALUES (12, '0.0', 6, NULL, 5, '2023-03-13 22:40:15.849447', NULL, NULL, 'Лировый счет Стамбул', '792949TRY');
2023-03-13 22:40:16.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (1, 'CanGetAllBranches', 'CanGetAllBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (2, 'CanGetAllBranchesWithPagination', 'CanGetAllBranchesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (3, 'CanGetBranchDetails', 'CanGetBranchDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (4, 'CanCreateBranch', 'CanCreateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (5, 'CanUpdateBranch', 'CanUpdateBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (6, 'CanDeleteBranch', 'CanDeleteBranch', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (7, 'CanDeleteBranches', 'CanDeleteBranches', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (8, 'CanGetAllPlans', 'CanGetAllPlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (9, 'CanGetAllPlansWithPagination', 'CanGetAllPlansWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (10, 'CanGetPlanDetails', 'CanGetPlanDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (11, 'CanCreatePlan', 'CanCreatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (12, 'CanUpdatePlan', 'CanUpdatePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (13, 'CanDeletePlan', 'CanDeletePlan', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (14, 'CanDeletePlans', 'CanDeletePlans', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (15, 'CanGetAllStatuses', 'CanGetAllStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (16, 'CanGetAllStatusesWithPagination', 'CanGetAllStatusesWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (17, 'CanGetStatusDetails', 'CanGetStatusDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (18, 'CanCreateStatus', 'CanCreateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (19, 'CanUpdateStatus', 'CanUpdateStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (20, 'CanDeleteStatus', 'CanDeleteStatus', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (21, 'CanDeleteStatuses', 'CanDeleteStatuses', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (22, 'CanGetAllParcels', 'CanGetAllParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (23, 'CanGetAllParcelsWithPagination', 'CanGetAllParcelsWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (24, 'CanGetParcelDetails', 'CanGetParcelDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (25, 'CanCreateParcel', 'CanCreateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (26, 'CanUpdateParcel', 'CanUpdateParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (27, 'CanDeleteParcel', 'CanDeleteParcel', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (28, 'CanDeleteParcels', 'CanDeleteParcels', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (29, 'CanGetAllUsers', 'CanGetAllUsers', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (30, 'CanGetAllUsersWithPagination', 'CanGetAllUsersWithPagination', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (31, 'CanGetUserDetails', 'CanGetUserDetails', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (32, 'CanCreateUser', 'CanCreateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (33, 'CanUpdateUser', 'CanUpdateUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (34, 'CanDeleteUser', 'CanDeleteUser', 1);
INSERT INTO "AspNetUserClaims" ("Id", "ClaimType", "ClaimValue", "UserId")
VALUES (35, 'CanDeleteUsers', 'CanDeleteUsers', 1);
2023-03-13 22:40:16.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (1, 1);
INSERT INTO "AspNetUserRoles" ("RoleId", "UserId")
VALUES (2, 2);
2023-03-13 22:40:16.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (1, '0.0', NULL, 1, '2023-03-13 22:40:15.849448', NULL, NULL, 'Валютный счет', '30a8f9cc-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (2, '0.0', NULL, 1, '2023-03-13 22:40:15.849449', NULL, NULL, 'Валютный счет', 'cadaa51d-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (3, '0.0', NULL, 1, '2023-03-13 22:40:15.849449', NULL, NULL, 'Валютный счет', '5a6f1681-840USD', '3', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (4, '0.0', NULL, 1, '2023-03-13 22:40:15.849449', NULL, NULL, 'Валютный счет', '3b9d7f21-840USD', '1', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (5, '0.0', NULL, 1, '2023-03-13 22:40:15.849449', NULL, NULL, 'Валютный счет', '0a1e5c27-840USD', '2', NULL);
INSERT INTO "UserAccount" ("Id", "Balance", "CreatedBy", "CurrencyId", "DateCreated", "DateUpdated", "ModifiedBy", "Name", "Number", "UserId", "UserId1")
VALUES (6, '0.0', NULL, 1, '2023-03-13 22:40:15.849449', NULL, NULL, 'Валютный счет', 'e13b576b-840USD', '3', NULL);
2023-03-13 22:40:16.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_BranchId" ON "Account" ("BranchId");
2023-03-13 22:40:16.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_Account_CurrencyId" ON "Account" ("CurrencyId");
2023-03-13 22:40:16.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Account_Id" ON "Account" ("Id");
2023-03-13 22:40:16.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_BranchAccountId" ON "AccountHistory" ("BranchAccountId");
2023-03-13 22:40:16.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_CurrencyId" ON "AccountHistory" ("CurrencyId");
2023-03-13 22:40:16.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AccountHistory_Id" ON "AccountHistory" ("Id");
2023-03-13 22:40:16.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_ParcelId" ON "AccountHistory" ("ParcelId");
2023-03-13 22:40:16.005 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AccountHistory_PayerId1" ON "AccountHistory" ("PayerId1");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetRoleClaims_RoleId" ON "AspNetRoleClaims" ("RoleId");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "RoleNameIndex" ON "AspNetRoles" ("NormalizedName");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserClaims_UserId" ON "AspNetUserClaims" ("UserId");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserLogins_UserId" ON "AspNetUserLogins" ("UserId");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUserRoles_RoleId" ON "AspNetUserRoles" ("RoleId");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "EmailIndex" ON "AspNetUsers" ("NormalizedEmail");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_Id" ON "AspNetUsers" ("Id");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_AspNetUsers_ParcelJobId" ON "AspNetUsers" ("ParcelJobId");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_AspNetUsers_PhoneNumber" ON "AspNetUsers" ("PhoneNumber");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "UserNameIndex" ON "AspNetUsers" ("NormalizedUserName");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Branch_Id" ON "Branch" ("Id");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Currency_Id" ON "Currency" ("Id");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Expenses_Id" ON "Expenses" ("Id");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Parcel_Id" ON "Parcel" ("Id");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_FromBranchId" ON "ParcelBranch" ("FromBranchId");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_Id" ON "ParcelBranch" ("Id");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelBranch_ParcelId" ON "ParcelBranch" ("ParcelId");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelBranch_ToBranchId" ON "ParcelBranch" ("ToBranchId");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelCost_CurrencyId" ON "ParcelCost" ("CurrencyId");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_Id" ON "ParcelCost" ("Id");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelCost_ParcelId" ON "ParcelCost" ("ParcelId");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_Id" ON "ParcelDescription" ("Id");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelDescription_ParcelId" ON "ParcelDescription" ("ParcelId");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelImage_Id" ON "ParcelImage" ("Id");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelImage_ParcelId" ON "ParcelImage" ("ParcelId");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_CurrencyId" ON "ParcelItem" ("CurrencyId");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelItem_ParcelId" ON "ParcelItem" ("ParcelId");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelJob_Id" ON "ParcelJob" ("Id");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelJob_ParcelId" ON "ParcelJob" ("ParcelId");
2023-03-13 22:40:16.006 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_Id" ON "ParcelOwners" ("Id");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelOwners_ParcelId" ON "ParcelOwners" ("ParcelId");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientCourierId1" ON "ParcelOwners" ("RecepientCourierId1");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientId1" ON "ParcelOwners" ("RecepientId1");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_RecepientStaffId1" ON "ParcelOwners" ("RecepientStaffId1");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderCourierId1" ON "ParcelOwners" ("SenderCourierId1");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderId1" ON "ParcelOwners" ("SenderId1");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelOwners_SenderStaffId1" ON "ParcelOwners" ("SenderStaffId1");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_Id" ON "ParcelPlan" ("Id");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelPlan_ParcelId" ON "ParcelPlan" ("ParcelId");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelPlan_PlanId" ON "ParcelPlan" ("PlanId");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_Id" ON "ParcelSize" ("Id");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSize_ParcelId" ON "ParcelSize" ("ParcelId");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelSound_Id" ON "ParcelSound" ("Id");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelSound_ParcelId" ON "ParcelSound" ("ParcelId");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_ParcelStatus_Id" ON "ParcelStatus" ("Id");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_ParcelId" ON "ParcelStatus" ("ParcelId");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_ParcelStatus_StatusId" ON "ParcelStatus" ("StatusId");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Plan_Id" ON "Plan" ("Id");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_Tokens_Id" ON "Tokens" ("Id");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_CurrencyId" ON "UserAccount" ("CurrencyId");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccount_Id" ON "UserAccount" ("Id");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccount_UserId1" ON "UserAccount" ("UserId1");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_CurrencyId" ON "UserAccountHistory" ("CurrencyId");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE UNIQUE INDEX "IX_UserAccountHistory_Id" ON "UserAccountHistory" ("Id");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_ParcelId" ON "UserAccountHistory" ("ParcelId");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserAccountId" ON "UserAccountHistory" ("UserAccountId");
2023-03-13 22:40:16.007 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
CREATE INDEX "IX_UserAccountHistory_UserId1" ON "UserAccountHistory" ("UserId1");
2023-03-13 22:40:16.024 +05:00 [INF] User profile is available. Using '/Users/a_ashurov/.aspnet/DataProtection-Keys' as key repository; keys will not be encrypted at rest.
2023-03-13 22:40:16.208 +05:00 [INF] Now listening on: https://localhost:7271
2023-03-13 22:40:16.208 +05:00 [INF] Now listening on: http://localhost:5271
2023-03-13 22:40:16.208 +05:00 [INF] Application started. Press Ctrl+C to shut down.
2023-03-13 22:40:16.208 +05:00 [INF] Hosting environment: Development
2023-03-13 22:40:16.208 +05:00 [INF] Content root path: /Users/a_ashurov/Desktop/MyFutureProjects/EDSystems.CICD.CD/EDSystems.WebApi
2023-03-13 22:40:17.375 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/index.html - -
2023-03-13 22:40:17.427 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/index.html - - - 200 - text/html;charset=utf-8 53.3938ms
2023-03-13 22:40:17.477 +05:00 [INF] Request starting HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - -
2023-03-13 22:40:17.667 +05:00 [INF] Request finished HTTP/1.1 GET https://localhost:7271/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 190.1808ms
2023-03-13 22:40:23.820 +05:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 217
2023-03-13 22:40:23.939 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:40:23.945 +05:00 [INF] Route matched with {action = "Update", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(EDSystems.WebApi.Models.UserManager.UpdateUserDto) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:40:24.125 +05:00 [INF] NotesRequest: UpdateUserCommand {"Id":"2","FirstName":"sdddsdsdsdsd","LastName":"sdddsdsdsdsd","Address":"Республика fghfgh, г. Ташкент, Кашгар 11, 100099 Updated","UserName":null,"Email":null,"PhoneNumber":"9989400000","$type":"UpdateUserCommand"}
2023-03-13 22:40:28.895 +05:00 [INF] Executed DbCommand (2ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."Id" = @__p_0
LIMIT 1
2023-03-13 22:40:35.542 +05:00 [INF] Executed DbCommand (1ms) [Parameters=[@__normalizedUserName_0='?' (Size = 9)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2023-03-13 22:40:35.579 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p22='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (Size = 56), @p2='?' (DbType = Int64), @p3='?' (Size = 36), @p23='?' (Size = 36), @p4='?' (DbType = DateTime), @p5='?' (DbType = DateTime), @p6='?' (Size = 19), @p7='?' (DbType = Boolean), @p8='?' (Size = 12), @p9='?' (Size = 12), @p10='?' (DbType = Boolean), @p11='?' (DbType = DateTimeOffset), @p12='?' (Size = 19), @p13='?' (Size = 9), @p14='?' (DbType = Int32), @p15='?' (Size = 84), @p16='?' (Size = 10), @p17='?' (DbType = Boolean), @p18='?' (Size = 36), @p19='?' (DbType = Boolean), @p20='?' (Size = 9), @p21='?' (Size = 8)], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "Address" = @p1, "ChatId" = @p2, "ConcurrencyStamp" = @p3, "DateCreated" = @p4, "DateUpdated" = @p5, "Email" = @p6, "EmailConfirmed" = @p7, "FirstName" = @p8, "LastName" = @p9, "LockoutEnabled" = @p10, "LockoutEnd" = @p11, "NormalizedEmail" = @p12, "NormalizedUserName" = @p13, "ParcelJobId" = @p14, "PasswordHash" = @p15, "PhoneNumber" = @p16, "PhoneNumberConfirmed" = @p17, "SecurityStamp" = @p18, "TwoFactorEnabled" = @p19, "UserName" = @p20, "UserNameT" = @p21
WHERE "Id" = @p22 AND "ConcurrencyStamp" = @p23
RETURNING 1;
2023-03-13 22:40:50.288 +05:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2023-03-13 22:40:50.290 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi) in 26343.2872ms
2023-03-13 22:40:50.290 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:40:50.323 +05:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 217 - 204 - - 26503.9549ms
2023-03-13 22:41:25.423 +05:00 [INF] Request starting HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 138
2023-03-13 22:41:25.436 +05:00 [INF] Executing endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:41:25.436 +05:00 [INF] Route matched with {action = "Update", controller = "UserManager"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Update(EDSystems.WebApi.Models.UserManager.UpdateUserDto) on controller EDSystems.WebApi.Controllers.UserManagerController (EDSystems.WebApi).
2023-03-13 22:41:25.437 +05:00 [INF] NotesRequest: UpdateUserCommand {"Id":"2","FirstName":"sdddsdsdsdsd","LastName":"sdddsdsdsdsd","Address":"1","UserName":null,"Email":null,"PhoneNumber":"9989400000","$type":"UpdateUserCommand"}
2023-03-13 22:41:27.527 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__p_0='?' (DbType = Int32)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."Id" = @__p_0
LIMIT 1
2023-03-13 22:41:27.527 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@__normalizedUserName_0='?' (Size = 9)], CommandType='"Text"', CommandTimeout='30']
SELECT "a"."Id", "a"."AccessFailedCount", "a"."Address", "a"."ChatId", "a"."ConcurrencyStamp", "a"."DateCreated", "a"."DateUpdated", "a"."Email", "a"."EmailConfirmed", "a"."FirstName", "a"."LastName", "a"."LockoutEnabled", "a"."LockoutEnd", "a"."NormalizedEmail", "a"."NormalizedUserName", "a"."ParcelJobId", "a"."PasswordHash", "a"."PhoneNumber", "a"."PhoneNumberConfirmed", "a"."SecurityStamp", "a"."TwoFactorEnabled", "a"."UserName", "a"."UserNameT"
FROM "AspNetUsers" AS "a"
WHERE "a"."NormalizedUserName" = @__normalizedUserName_0
LIMIT 1
2023-03-13 22:41:27.528 +05:00 [INF] Executed DbCommand (0ms) [Parameters=[@p22='?' (DbType = Int32), @p0='?' (DbType = Int32), @p1='?' (Size = 1), @p2='?' (DbType = Int64), @p3='?' (Size = 36), @p23='?' (Size = 36), @p4='?' (DbType = DateTime), @p5='?' (DbType = DateTime), @p6='?' (Size = 19), @p7='?' (DbType = Boolean), @p8='?' (Size = 12), @p9='?' (Size = 12), @p10='?' (DbType = Boolean), @p11='?' (DbType = DateTimeOffset), @p12='?' (Size = 19), @p13='?' (Size = 9), @p14='?' (DbType = Int32), @p15='?' (Size = 84), @p16='?' (Size = 10), @p17='?' (DbType = Boolean), @p18='?' (Size = 36), @p19='?' (DbType = Boolean), @p20='?' (Size = 9), @p21='?' (Size = 8)], CommandType='"Text"', CommandTimeout='30']
UPDATE "AspNetUsers" SET "AccessFailedCount" = @p0, "Address" = @p1, "ChatId" = @p2, "ConcurrencyStamp" = @p3, "DateCreated" = @p4, "DateUpdated" = @p5, "Email" = @p6, "EmailConfirmed" = @p7, "FirstName" = @p8, "LastName" = @p9, "LockoutEnabled" = @p10, "LockoutEnd" = @p11, "NormalizedEmail" = @p12, "NormalizedUserName" = @p13, "ParcelJobId" = @p14, "PasswordHash" = @p15, "PhoneNumber" = @p16, "PhoneNumberConfirmed" = @p17, "SecurityStamp" = @p18, "TwoFactorEnabled" = @p19, "UserName" = @p20, "UserNameT" = @p21
WHERE "Id" = @p22 AND "ConcurrencyStamp" = @p23
RETURNING 1;
2023-03-13 22:41:27.529 +05:00 [INF] Executing StatusCodeResult, setting HTTP status code 204
2023-03-13 22:41:27.529 +05:00 [INF] Executed action EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi) in 2092.5866ms
2023-03-13 22:41:27.529 +05:00 [INF] Executed endpoint 'EDSystems.WebApi.Controllers.UserManagerController.Update (EDSystems.WebApi)'
2023-03-13 22:41:27.529 +05:00 [INF] Request finished HTTP/1.1 PUT https://localhost:7271/api/UserManager application/json 138 - 204 - - 2105.8078ms
