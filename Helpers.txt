1. Git init 
	echo "# aashurov-EDSystems.CICD.CD" >> README.md
	git init
	git add README.md
	git commit -m "first commit"
	git branch -M main
	git remote add origin https://github.com/aashurov/EDSystems.CICD.CD.git
	git push -u origin main
	//This line for ssh
	git push git@github.com:aashurov/EDSystems.CICD.CD.git   
	git remote set-url origin git@github.com:aashurov/EDSystems.CICD.CD.git
	------------------------------------------
2. Set ssh sgent for github account 
   https://www.youtube.com/watch?v=nZYJKXXMvkM
   a. go to the https://github.com/settings/keys
   b. go to the https://docs.github.com/en/authentication/connecting-to-github-with-ssh
   c. ssh-keygen -t ed25519 -C "a.o.ashurov@gmail.com" type enter for all steps
   d. eval "$(ssh-agent -s)"
   f. open ~/.ssh/config
   e. if file not exist touch ~/.ssh/config
   g. Paste this line of code 
   		Host *.github.com    
  		        AddKeysToAgent yes
                UseKeychain yes
  				IdentityFile ~/.ssh/id_ed25519
    h. ssh-add --apple-use-keychain ~/.ssh/id_ed25519
    i. go to the https://docs.github.com/en/authentication/connecting-to-github-with-ssh/adding-a-new-ssh-key-to-your-github-account
    j. pbcopy < ~/.ssh/id_ed25519.pub
    k. got to the https://github.com/settings/keys 
    l. Click new SSH key and paste from clipboard
    m. git remote set-url origin git@github.com:aashurov/ELogistics.CodeDeploy.git

3. Publich Aplication
	cd Desktop/MyFutureProjects/EDSystems.CICD.CD
	cd EDSystems.WebApi
	dotnet publish -o ../app

4. Create EC2 instance
	edsystems.cicd.cd.ec2
		* edsystems.cicd.cd.ec2.role
	 		- AmazonEC2RoleforAWSCodeDeployLimited
			- AmazonS3FullAccess

	 		for User Data section paste thi line of code
	 		#!/bin/bash
			echo "--------------------START----------------------"
			sudo yum install ruby -y
			sudo rpm -Uvh https://packages.microsoft.com/config/centos/7/packages-microsoft-prod.rpm 
			sudo yum -y install aspnetcore-runtime-7.0 
			wget https://aws-codedeploy-us-east-2.s3.us-east-2.amazonaws.com/latest/install
			chmod +x ./install
			sudo ./install auto
			echo "--------------------FINISH----------------------"

5. For connection to EC2 
	chmod 400 ~/.ssh/EDSystems-KeyPair.pem
	ssh -i "~/.ssh/EDSystems-Key.pem" ec2-user@ec2-18-210-20-17.compute-1.amazonaws.com
ssh -i "~/.ssh/EDSystems-Key.pem" ec2-user@ec2-54-234-97-150.compute-1.amazonaws.com

6. Create CodeDeploy
	edsystems.cicd.cd.cd (Code Deploy for ELogistics.CodeDeploy)
		elogistics.cicd.cd.cdg (Code Deployment Group for ELogistics.CodeDeploy)
		elogistics.cicd.cd.cdg.role (Role for Code Deployment Group for ELogistics.CodeDeploy)
		  - AWSCodeDeployRole
7. Create CodePipeline
	edsystems.cicd.cd.cdp
		edsystems.cicd.cd.cdp.role
			- AmazonS3FullAccess



ExecStart=/usr/bin/dotnet /var/www/EDSystems.WebApi.dll
ExecStart=/var/www/EDSystems.WebApi.dll

sudo systemctl enable edsystems.backend.service
sudo systemctl daemon-reload
sudo systemctl restart edsystems.backend.service
sudo service edsystems.backend.service status
sudo systemctl status edsystems.backend.service
journalctl --unit=edsystems.backend.service | tail -10

//Elastic Container Instace
edsystems-ec2-1
edsystems-ec2-2
	//Role for Elastic Container Instace
	edsystems-ec2-role
		//Policy for Role
		- AmazonEC2RoleforAWSCodeDeploy
		- AmazonS3FullAccess
For Connecting to EC2 Instances
	- chmod 400 ~/.ssh/EDSystems-Key.pem
	- ssh -i "~/.ssh/EDSystems-Key.pem" ec2-user@ec2-3-89-251-183.compute-1.amazonaws.com
ssh -i "~/.ssh/EDSystems-Key.pem" ec2-user@ec2-54-84-39-32.compute-1.amazonaws.com
ssh -i "~/.ssh/EDSystems-Key.pem" ec2-user@ec2-34-203-77-76.compute-1.amazonaws.com
// Code Deploy
edsystems-cdd
	//Deployment Group for Code Deploy
	edsystems-cdd-cdg
		//Role for Code Deployment Group
		edsystems-cdd-cdg-role
			//Policy for Role
			- AWSCodeDeployRole
			- AmazonS3FullAccess

//Code Pipeline
edsystems-cdp
	//Role for Code Pipeline
	elogistics-cdp-role
		//Policy for Role
		- AmazonS3FullAccess
		- CodeStarConnection (UseConnetion) (All Resources)

//Amazon S3 Bucket
edsystems-s3

 

dotnet tool install --global dotnet-ef
dotnet ef migrations add MyFirstMigration
dotnet ef database update

cd EDSystems.Persistence
dotnet ef --startup-project ../EDSystems.WebApi/ migrations add myMigration01
dotnet ef --startup-project ../EDSystems.WebApi/ database update

cd EDSystems.WebApi
dotnet publish -o ../app

ssh -i "~/.ssh/EDSystems-Key.pem" ec2-user@ec2-52-91-146-83.compute-1.amazonaws.com
ssh -i "~/.ssh/EDSystems-Key.pem" ec2-user@ec2-100-25-147-144.compute-1.amazonaws.com
ssh -i "~/.ssh/EDSystems-Key.pem" ec2-user@ec2-18-234-169-142.compute-1.amazonaws.com

Id AKIA2LGN27OZ6S4NQLOB
Key 8R2CP2E2YdTc7aZi/bU3sijLlIIXxfZC+wQDPTJi

     

Migration


git switch dev
git branch dev

 docker run --name my-redis -p 6379:6379 -d redis

